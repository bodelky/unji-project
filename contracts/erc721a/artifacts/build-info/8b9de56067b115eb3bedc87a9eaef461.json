{
	"id": "8b9de56067b115eb3bedc87a9eaef461",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.14",
	"solcLongVersion": "0.8.14+commit.80d49f37",
	"input": {
		"language": "Solidity",
		"sources": {
			"NFT-Marketplace/contracts/erc721a/ERC721A.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// ERC721A Contracts v4.1.0\r\n// Creator: Chiru Labs\r\n\r\npragma solidity ^0.8.4;\r\n\r\nimport './IERC721A.sol';\r\n\r\n/**\r\n * @dev ERC721 token receiver interface.\r\n */\r\ninterface ERC721A__IERC721Receiver {\r\n    function onERC721Received(\r\n        address operator,\r\n        address from,\r\n        uint256 tokenId,\r\n        bytes calldata data\r\n    ) external returns (bytes4);\r\n}\r\n\r\n/**\r\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard,\r\n * including the Metadata extension. Built to optimize for lower gas during batch mints.\r\n *\r\n * Assumes serials are sequentially minted starting at `_startTokenId()`\r\n * (defaults to 0, e.g. 0, 1, 2, 3..).\r\n *\r\n * Assumes that an owner cannot have more than 2**64 - 1 (max value of uint64) of supply.\r\n *\r\n * Assumes that the maximum token id cannot exceed 2**256 - 1 (max value of uint256).\r\n */\r\ncontract ERC721A is IERC721A {\r\n    // Reference type for token approval.\r\n    struct TokenApprovalRef {\r\n        address value;\r\n    }\r\n\r\n    // Mask of an entry in packed address data.\r\n    uint256 private constant BITMASK_ADDRESS_DATA_ENTRY = (1 << 64) - 1;\r\n\r\n    // The bit position of `numberMinted` in packed address data.\r\n    uint256 private constant BITPOS_NUMBER_MINTED = 64;\r\n\r\n    // The bit position of `numberBurned` in packed address data.\r\n    uint256 private constant BITPOS_NUMBER_BURNED = 128;\r\n\r\n    // The bit position of `aux` in packed address data.\r\n    uint256 private constant BITPOS_AUX = 192;\r\n\r\n    // Mask of all 256 bits in packed address data except the 64 bits for `aux`.\r\n    uint256 private constant BITMASK_AUX_COMPLEMENT = (1 << 192) - 1;\r\n\r\n    // The bit position of `startTimestamp` in packed ownership.\r\n    uint256 private constant BITPOS_START_TIMESTAMP = 160;\r\n\r\n    // The bit mask of the `burned` bit in packed ownership.\r\n    uint256 private constant BITMASK_BURNED = 1 << 224;\r\n\r\n    // The bit position of the `nextInitialized` bit in packed ownership.\r\n    uint256 private constant BITPOS_NEXT_INITIALIZED = 225;\r\n\r\n    // The bit mask of the `nextInitialized` bit in packed ownership.\r\n    uint256 private constant BITMASK_NEXT_INITIALIZED = 1 << 225;\r\n\r\n    // The bit position of `extraData` in packed ownership.\r\n    uint256 private constant BITPOS_EXTRA_DATA = 232;\r\n\r\n    // Mask of all 256 bits in a packed ownership except the 24 bits for `extraData`.\r\n    uint256 private constant BITMASK_EXTRA_DATA_COMPLEMENT = (1 << 232) - 1;\r\n\r\n    // The mask of the lower 160 bits for addresses.\r\n    uint256 private constant BITMASK_ADDRESS = (1 << 160) - 1;\r\n\r\n    // The maximum `quantity` that can be minted with `_mintERC2309`.\r\n    // This limit is to prevent overflows on the address data entries.\r\n    // For a limit of 5000, a total of 3.689e15 calls to `_mintERC2309`\r\n    // is required to cause an overflow, which is unrealistic.\r\n    uint256 private constant MAX_MINT_ERC2309_QUANTITY_LIMIT = 5000;\r\n\r\n    // The tokenId of the next token to be minted.\r\n    uint256 private _currentIndex;\r\n\r\n    // The number of tokens burned.\r\n    uint256 private _burnCounter;\r\n\r\n    // Token name\r\n    string private _name;\r\n\r\n    // Token symbol\r\n    string private _symbol;\r\n\r\n    // Mapping from token ID to ownership details\r\n    // An empty struct value does not necessarily mean the token is unowned.\r\n    // See `_packedOwnershipOf` implementation for details.\r\n    //\r\n    // Bits Layout:\r\n    // - [0..159]   `addr`\r\n    // - [160..223] `startTimestamp`\r\n    // - [224]      `burned`\r\n    // - [225]      `nextInitialized`\r\n    // - [232..255] `extraData`\r\n    mapping(uint256 => uint256) private _packedOwnerships;\r\n\r\n    // Mapping owner address to address data.\r\n    //\r\n    // Bits Layout:\r\n    // - [0..63]    `balance`\r\n    // - [64..127]  `numberMinted`\r\n    // - [128..191] `numberBurned`\r\n    // - [192..255] `aux`\r\n    mapping(address => uint256) private _packedAddressData;\r\n\r\n    // Mapping from token ID to approved address.\r\n    mapping(uint256 => TokenApprovalRef) private _tokenApprovals;\r\n\r\n    // Mapping from owner to operator approvals\r\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\r\n\r\n    constructor(string memory name_, string memory symbol_) {\r\n        _name = name_;\r\n        _symbol = symbol_;\r\n        _currentIndex = _startTokenId();\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the starting token ID.\r\n     * To change the starting token ID, please override this function.\r\n     */\r\n    function _startTokenId() internal view virtual returns (uint256) {\r\n        return 0;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the next token ID to be minted.\r\n     */\r\n    function _nextTokenId() internal view virtual returns (uint256) {\r\n        return _currentIndex;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the total number of tokens in existence.\r\n     * Burned tokens will reduce the count.\r\n     * To get the total number of tokens minted, please see `_totalMinted`.\r\n     */\r\n    function totalSupply() public view virtual override returns (uint256) {\r\n        // Counter underflow is impossible as _burnCounter cannot be incremented\r\n        // more than `_currentIndex - _startTokenId()` times.\r\n        unchecked {\r\n            return _currentIndex - _burnCounter - _startTokenId();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the total amount of tokens minted in the contract.\r\n     */\r\n    function _totalMinted() internal view virtual returns (uint256) {\r\n        // Counter underflow is impossible as _currentIndex does not decrement,\r\n        // and it is initialized to `_startTokenId()`\r\n        unchecked {\r\n            return _currentIndex - _startTokenId();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the total number of tokens burned.\r\n     */\r\n    function _totalBurned() internal view virtual returns (uint256) {\r\n        return _burnCounter;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC165-supportsInterface}.\r\n     */\r\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\r\n        // The interface IDs are constants representing the first 4 bytes of the XOR of\r\n        // all function selectors in the interface. See: https://eips.ethereum.org/EIPS/eip-165\r\n        // e.g. `bytes4(i.functionA.selector ^ i.functionB.selector ^ ...)`\r\n        return\r\n            interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.\r\n            interfaceId == 0x80ac58cd || // ERC165 interface ID for ERC721.\r\n            interfaceId == 0x5b5e139f; // ERC165 interface ID for ERC721Metadata.\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-balanceOf}.\r\n     */\r\n    function balanceOf(address owner) public view virtual override returns (uint256) {\r\n        if (owner == address(0)) revert BalanceQueryForZeroAddress();\r\n        return _packedAddressData[owner] & BITMASK_ADDRESS_DATA_ENTRY;\r\n    }\r\n\r\n    /**\r\n     * Returns the number of tokens minted by `owner`.\r\n     */\r\n    function _numberMinted(address owner) internal view virtual returns (uint256) {\r\n        return (_packedAddressData[owner] >> BITPOS_NUMBER_MINTED) & BITMASK_ADDRESS_DATA_ENTRY;\r\n    }\r\n\r\n    /**\r\n     * Returns the number of tokens burned by or on behalf of `owner`.\r\n     */\r\n    function _numberBurned(address owner) internal view virtual returns (uint256) {\r\n        return (_packedAddressData[owner] >> BITPOS_NUMBER_BURNED) & BITMASK_ADDRESS_DATA_ENTRY;\r\n    }\r\n\r\n    /**\r\n     * Returns the auxiliary data for `owner`. (e.g. number of whitelist mint slots used).\r\n     */\r\n    function _getAux(address owner) internal view virtual returns (uint64) {\r\n        return uint64(_packedAddressData[owner] >> BITPOS_AUX);\r\n    }\r\n\r\n    /**\r\n     * Sets the auxiliary data for `owner`. (e.g. number of whitelist mint slots used).\r\n     * If there are multiple variables, please pack them into a uint64.\r\n     */\r\n    function _setAux(address owner, uint64 aux) internal virtual {\r\n        uint256 packed = _packedAddressData[owner];\r\n        uint256 auxCasted;\r\n        // Cast `aux` with assembly to avoid redundant masking.\r\n        assembly {\r\n            auxCasted := aux\r\n        }\r\n        packed = (packed & BITMASK_AUX_COMPLEMENT) | (auxCasted << BITPOS_AUX);\r\n        _packedAddressData[owner] = packed;\r\n    }\r\n\r\n    /**\r\n     * Returns the packed ownership data of `tokenId`.\r\n     */\r\n    function _packedOwnershipOf(uint256 tokenId) private view returns (uint256) {\r\n        uint256 curr = tokenId;\r\n\r\n        unchecked {\r\n            if (_startTokenId() <= curr)\r\n                if (curr < _currentIndex) {\r\n                    uint256 packed = _packedOwnerships[curr];\r\n                    // If not burned.\r\n                    if (packed & BITMASK_BURNED == 0) {\r\n                        // Invariant:\r\n                        // There will always be an ownership that has an address and is not burned\r\n                        // before an ownership that does not have an address and is not burned.\r\n                        // Hence, curr will not underflow.\r\n                        //\r\n                        // We can directly compare the packed value.\r\n                        // If the address is zero, packed is zero.\r\n                        while (packed == 0) {\r\n                            packed = _packedOwnerships[--curr];\r\n                        }\r\n                        return packed;\r\n                    }\r\n                }\r\n        }\r\n        revert OwnerQueryForNonexistentToken();\r\n    }\r\n\r\n    /**\r\n     * Returns the unpacked `TokenOwnership` struct from `packed`.\r\n     */\r\n    function _unpackedOwnership(uint256 packed) private pure returns (TokenOwnership memory ownership) {\r\n        ownership.addr = address(uint160(packed));\r\n        ownership.startTimestamp = uint64(packed >> BITPOS_START_TIMESTAMP);\r\n        ownership.burned = packed & BITMASK_BURNED != 0;\r\n        ownership.extraData = uint24(packed >> BITPOS_EXTRA_DATA);\r\n    }\r\n\r\n    /**\r\n     * Returns the unpacked `TokenOwnership` struct at `index`.\r\n     */\r\n    function _ownershipAt(uint256 index) internal view virtual returns (TokenOwnership memory) {\r\n        return _unpackedOwnership(_packedOwnerships[index]);\r\n    }\r\n\r\n    /**\r\n     * @dev Initializes the ownership slot minted at `index` for efficiency purposes.\r\n     */\r\n    function _initializeOwnershipAt(uint256 index) internal virtual {\r\n        if (_packedOwnerships[index] == 0) {\r\n            _packedOwnerships[index] = _packedOwnershipOf(index);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Gas spent here starts off proportional to the maximum mint batch size.\r\n     * It gradually moves to O(1) as tokens get transferred around in the collection over time.\r\n     */\r\n    function _ownershipOf(uint256 tokenId) internal view virtual returns (TokenOwnership memory) {\r\n        return _unpackedOwnership(_packedOwnershipOf(tokenId));\r\n    }\r\n\r\n    /**\r\n     * @dev Packs ownership data into a single uint256.\r\n     */\r\n    function _packOwnershipData(address owner, uint256 flags) private view returns (uint256 result) {\r\n        assembly {\r\n            // Mask `owner` to the lower 160 bits, in case the upper bits somehow aren't clean.\r\n            owner := and(owner, BITMASK_ADDRESS)\r\n            // `owner | (block.timestamp << BITPOS_START_TIMESTAMP) | flags`.\r\n            result := or(owner, or(shl(BITPOS_START_TIMESTAMP, timestamp()), flags))\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-ownerOf}.\r\n     */\r\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\r\n        return address(uint160(_packedOwnershipOf(tokenId)));\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721Metadata-name}.\r\n     */\r\n    function name() public view virtual override returns (string memory) {\r\n        return _name;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721Metadata-symbol}.\r\n     */\r\n    function symbol() public view virtual override returns (string memory) {\r\n        return _symbol;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721Metadata-tokenURI}.\r\n     */\r\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\r\n        if (!_exists(tokenId)) revert URIQueryForNonexistentToken();\r\n\r\n        string memory baseURI = _baseURI();\r\n        return bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, _toString(tokenId))) : '';\r\n    }\r\n\r\n    /**\r\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\r\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\r\n     * by default, it can be overridden in child contracts.\r\n     */\r\n    function _baseURI() internal view virtual returns (string memory) {\r\n        return '';\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the `nextInitialized` flag set if `quantity` equals 1.\r\n     */\r\n    function _nextInitializedFlag(uint256 quantity) private pure returns (uint256 result) {\r\n        // For branchless setting of the `nextInitialized` flag.\r\n        assembly {\r\n            // `(quantity == 1) << BITPOS_NEXT_INITIALIZED`.\r\n            result := shl(BITPOS_NEXT_INITIALIZED, eq(quantity, 1))\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-approve}.\r\n     */\r\n    function approve(address to, uint256 tokenId) public virtual override {\r\n        address owner = ownerOf(tokenId);\r\n\r\n        if (_msgSenderERC721A() != owner)\r\n            if (!isApprovedForAll(owner, _msgSenderERC721A())) {\r\n                revert ApprovalCallerNotOwnerNorApproved();\r\n            }\r\n\r\n        _tokenApprovals[tokenId].value = to;\r\n        emit Approval(owner, to, tokenId);\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-getApproved}.\r\n     */\r\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\r\n        if (!_exists(tokenId)) revert ApprovalQueryForNonexistentToken();\r\n\r\n        return _tokenApprovals[tokenId].value;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-setApprovalForAll}.\r\n     */\r\n    function setApprovalForAll(address operator, bool approved) public virtual override {\r\n        if (operator == _msgSenderERC721A()) revert ApproveToCaller();\r\n\r\n        _operatorApprovals[_msgSenderERC721A()][operator] = approved;\r\n        emit ApprovalForAll(_msgSenderERC721A(), operator, approved);\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-isApprovedForAll}.\r\n     */\r\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\r\n        return _operatorApprovals[owner][operator];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-safeTransferFrom}.\r\n     */\r\n    function safeTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId\r\n    ) public virtual override {\r\n        safeTransferFrom(from, to, tokenId, '');\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-safeTransferFrom}.\r\n     */\r\n    function safeTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId,\r\n        bytes memory _data\r\n    ) public virtual override {\r\n        transferFrom(from, to, tokenId);\r\n        if (to.code.length != 0)\r\n            if (!_checkContractOnERC721Received(from, to, tokenId, _data)) {\r\n                revert TransferToNonERC721ReceiverImplementer();\r\n            }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns whether `tokenId` exists.\r\n     *\r\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\r\n     *\r\n     * Tokens start existing when they are minted (`_mint`),\r\n     */\r\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\r\n        return\r\n            _startTokenId() <= tokenId &&\r\n            tokenId < _currentIndex && // If within bounds,\r\n            _packedOwnerships[tokenId] & BITMASK_BURNED == 0; // and not burned.\r\n    }\r\n\r\n    /**\r\n     * @dev Equivalent to `_safeMint(to, quantity, '')`.\r\n     */\r\n    function _safeMint(address to, uint256 quantity) internal virtual {\r\n        _safeMint(to, quantity, '');\r\n    }\r\n\r\n    /**\r\n     * @dev Safely mints `quantity` tokens and transfers them to `to`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - If `to` refers to a smart contract, it must implement\r\n     *   {IERC721Receiver-onERC721Received}, which is called for each safe transfer.\r\n     * - `quantity` must be greater than 0.\r\n     *\r\n     * See {_mint}.\r\n     *\r\n     * Emits a {Transfer} event for each mint.\r\n     */\r\n    function _safeMint(\r\n        address to,\r\n        uint256 quantity,\r\n        bytes memory _data\r\n    ) internal virtual {\r\n        _mint(to, quantity);\r\n\r\n        unchecked {\r\n            if (to.code.length != 0) {\r\n                uint256 end = _currentIndex;\r\n                uint256 index = end - quantity;\r\n                do {\r\n                    if (!_checkContractOnERC721Received(address(0), to, index++, _data)) {\r\n                        revert TransferToNonERC721ReceiverImplementer();\r\n                    }\r\n                } while (index < end);\r\n                // Reentrancy protection.\r\n                if (_currentIndex != end) revert();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Mints `quantity` tokens and transfers them to `to`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `to` cannot be the zero address.\r\n     * - `quantity` must be greater than 0.\r\n     *\r\n     * Emits a {Transfer} event for each mint.\r\n     */\r\n    function _mint(address to, uint256 quantity) internal virtual {\r\n        uint256 startTokenId = _currentIndex;\r\n        if (to == address(0)) revert MintToZeroAddress();\r\n        if (quantity == 0) revert MintZeroQuantity();\r\n\r\n        _beforeTokenTransfers(address(0), to, startTokenId, quantity);\r\n\r\n        // Overflows are incredibly unrealistic.\r\n        // `balance` and `numberMinted` have a maximum limit of 2**64.\r\n        // `tokenId` has a maximum limit of 2**256.\r\n        unchecked {\r\n            // Updates:\r\n            // - `balance += quantity`.\r\n            // - `numberMinted += quantity`.\r\n            //\r\n            // We can directly add to the `balance` and `numberMinted`.\r\n            _packedAddressData[to] += quantity * ((1 << BITPOS_NUMBER_MINTED) | 1);\r\n\r\n            // Updates:\r\n            // - `address` to the owner.\r\n            // - `startTimestamp` to the timestamp of minting.\r\n            // - `burned` to `false`.\r\n            // - `nextInitialized` to `quantity == 1`.\r\n            _packedOwnerships[startTokenId] = _packOwnershipData(\r\n                to,\r\n                _nextInitializedFlag(quantity) | _nextExtraData(address(0), to, 0)\r\n            );\r\n\r\n            uint256 tokenId = startTokenId;\r\n            uint256 end = startTokenId + quantity;\r\n            do {\r\n                emit Transfer(address(0), to, tokenId++);\r\n            } while (tokenId < end);\r\n\r\n            _currentIndex = end;\r\n        }\r\n        _afterTokenTransfers(address(0), to, startTokenId, quantity);\r\n    }\r\n\r\n    /**\r\n     * @dev Mints `quantity` tokens and transfers them to `to`.\r\n     *\r\n     * This function is intended for efficient minting only during contract creation.\r\n     *\r\n     * It emits only one {ConsecutiveTransfer} as defined in\r\n     * [ERC2309](https://eips.ethereum.org/EIPS/eip-2309),\r\n     * instead of a sequence of {Transfer} event(s).\r\n     *\r\n     * Calling this function outside of contract creation WILL make your contract\r\n     * non-compliant with the ERC721 standard.\r\n     * For full ERC721 compliance, substituting ERC721 {Transfer} event(s) with the ERC2309\r\n     * {ConsecutiveTransfer} event is only permissible during contract creation.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `to` cannot be the zero address.\r\n     * - `quantity` must be greater than 0.\r\n     *\r\n     * Emits a {ConsecutiveTransfer} event.\r\n     */\r\n    function _mintERC2309(address to, uint256 quantity) internal virtual {\r\n        uint256 startTokenId = _currentIndex;\r\n        if (to == address(0)) revert MintToZeroAddress();\r\n        if (quantity == 0) revert MintZeroQuantity();\r\n        if (quantity > MAX_MINT_ERC2309_QUANTITY_LIMIT) revert MintERC2309QuantityExceedsLimit();\r\n\r\n        _beforeTokenTransfers(address(0), to, startTokenId, quantity);\r\n\r\n        // Overflows are unrealistic due to the above check for `quantity` to be below the limit.\r\n        unchecked {\r\n            // Updates:\r\n            // - `balance += quantity`.\r\n            // - `numberMinted += quantity`.\r\n            //\r\n            // We can directly add to the `balance` and `numberMinted`.\r\n            _packedAddressData[to] += quantity * ((1 << BITPOS_NUMBER_MINTED) | 1);\r\n\r\n            // Updates:\r\n            // - `address` to the owner.\r\n            // - `startTimestamp` to the timestamp of minting.\r\n            // - `burned` to `false`.\r\n            // - `nextInitialized` to `quantity == 1`.\r\n            _packedOwnerships[startTokenId] = _packOwnershipData(\r\n                to,\r\n                _nextInitializedFlag(quantity) | _nextExtraData(address(0), to, 0)\r\n            );\r\n\r\n            emit ConsecutiveTransfer(startTokenId, startTokenId + quantity - 1, address(0), to);\r\n\r\n            _currentIndex = startTokenId + quantity;\r\n        }\r\n        _afterTokenTransfers(address(0), to, startTokenId, quantity);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the storage slot and value for the approved address of `tokenId`.\r\n     */\r\n    function _getApprovedAddress(uint256 tokenId)\r\n        private\r\n        view\r\n        returns (uint256 approvedAddressSlot, address approvedAddress)\r\n    {\r\n        TokenApprovalRef storage tokenApproval = _tokenApprovals[tokenId];\r\n        // The following is equivalent to `approvedAddress = _tokenApprovals[tokenId]`.\r\n        assembly {\r\n            approvedAddressSlot := tokenApproval.slot\r\n            approvedAddress := sload(approvedAddressSlot)\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns whether the `approvedAddress` is equals to `from` or `msgSender`.\r\n     */\r\n    function _isOwnerOrApproved(\r\n        address approvedAddress,\r\n        address from,\r\n        address msgSender\r\n    ) private pure returns (bool result) {\r\n        assembly {\r\n            // Mask `from` to the lower 160 bits, in case the upper bits somehow aren't clean.\r\n            from := and(from, BITMASK_ADDRESS)\r\n            // Mask `msgSender` to the lower 160 bits, in case the upper bits somehow aren't clean.\r\n            msgSender := and(msgSender, BITMASK_ADDRESS)\r\n            // `msgSender == from || msgSender == approvedAddress`.\r\n            result := or(eq(msgSender, from), eq(msgSender, approvedAddress))\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers `tokenId` from `from` to `to`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `to` cannot be the zero address.\r\n     * - `tokenId` token must be owned by `from`.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId\r\n    ) public virtual override {\r\n        uint256 prevOwnershipPacked = _packedOwnershipOf(tokenId);\r\n\r\n        if (address(uint160(prevOwnershipPacked)) != from) revert TransferFromIncorrectOwner();\r\n\r\n        (uint256 approvedAddressSlot, address approvedAddress) = _getApprovedAddress(tokenId);\r\n\r\n        // The nested ifs save around 20+ gas over a compound boolean condition.\r\n        if (!_isOwnerOrApproved(approvedAddress, from, _msgSenderERC721A()))\r\n            if (!isApprovedForAll(from, _msgSenderERC721A())) revert TransferCallerNotOwnerNorApproved();\r\n\r\n        if (to == address(0)) revert TransferToZeroAddress();\r\n\r\n        _beforeTokenTransfers(from, to, tokenId, 1);\r\n\r\n        // Clear approvals from the previous owner.\r\n        assembly {\r\n            if approvedAddress {\r\n                // This is equivalent to `delete _tokenApprovals[tokenId]`.\r\n                sstore(approvedAddressSlot, 0)\r\n            }\r\n        }\r\n\r\n        // Underflow of the sender's balance is impossible because we check for\r\n        // ownership above and the recipient's balance can't realistically overflow.\r\n        // Counter overflow is incredibly unrealistic as tokenId would have to be 2**256.\r\n        unchecked {\r\n            // We can directly increment and decrement the balances.\r\n            --_packedAddressData[from]; // Updates: `balance -= 1`.\r\n            ++_packedAddressData[to]; // Updates: `balance += 1`.\r\n\r\n            // Updates:\r\n            // - `address` to the next owner.\r\n            // - `startTimestamp` to the timestamp of transfering.\r\n            // - `burned` to `false`.\r\n            // - `nextInitialized` to `true`.\r\n            _packedOwnerships[tokenId] = _packOwnershipData(\r\n                to,\r\n                BITMASK_NEXT_INITIALIZED | _nextExtraData(from, to, prevOwnershipPacked)\r\n            );\r\n\r\n            // If the next slot may not have been initialized (i.e. `nextInitialized == false`) .\r\n            if (prevOwnershipPacked & BITMASK_NEXT_INITIALIZED == 0) {\r\n                uint256 nextTokenId = tokenId + 1;\r\n                // If the next slot's address is zero and not burned (i.e. packed value is zero).\r\n                if (_packedOwnerships[nextTokenId] == 0) {\r\n                    // If the next slot is within bounds.\r\n                    if (nextTokenId != _currentIndex) {\r\n                        // Initialize the next slot to maintain correctness for `ownerOf(tokenId + 1)`.\r\n                        _packedOwnerships[nextTokenId] = prevOwnershipPacked;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        emit Transfer(from, to, tokenId);\r\n        _afterTokenTransfers(from, to, tokenId, 1);\r\n    }\r\n\r\n    /**\r\n     * @dev Equivalent to `_burn(tokenId, false)`.\r\n     */\r\n    function _burn(uint256 tokenId) internal virtual {\r\n        _burn(tokenId, false);\r\n    }\r\n\r\n    /**\r\n     * @dev Destroys `tokenId`.\r\n     * The approval is cleared when the token is burned.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must exist.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function _burn(uint256 tokenId, bool approvalCheck) internal virtual {\r\n        uint256 prevOwnershipPacked = _packedOwnershipOf(tokenId);\r\n\r\n        address from = address(uint160(prevOwnershipPacked));\r\n\r\n        (uint256 approvedAddressSlot, address approvedAddress) = _getApprovedAddress(tokenId);\r\n\r\n        if (approvalCheck) {\r\n            // The nested ifs save around 20+ gas over a compound boolean condition.\r\n            if (!_isOwnerOrApproved(approvedAddress, from, _msgSenderERC721A()))\r\n                if (!isApprovedForAll(from, _msgSenderERC721A())) revert TransferCallerNotOwnerNorApproved();\r\n        }\r\n\r\n        _beforeTokenTransfers(from, address(0), tokenId, 1);\r\n\r\n        // Clear approvals from the previous owner.\r\n        assembly {\r\n            if approvedAddress {\r\n                // This is equivalent to `delete _tokenApprovals[tokenId]`.\r\n                sstore(approvedAddressSlot, 0)\r\n            }\r\n        }\r\n\r\n        // Underflow of the sender's balance is impossible because we check for\r\n        // ownership above and the recipient's balance can't realistically overflow.\r\n        // Counter overflow is incredibly unrealistic as `tokenId` would have to be 2**256.\r\n        unchecked {\r\n            // Updates:\r\n            // - `balance -= 1`.\r\n            // - `numberBurned += 1`.\r\n            //\r\n            // We can directly decrement the balance, and increment the number burned.\r\n            // This is equivalent to `packed -= 1; packed += 1 << BITPOS_NUMBER_BURNED;`.\r\n            _packedAddressData[from] += (1 << BITPOS_NUMBER_BURNED) - 1;\r\n\r\n            // Updates:\r\n            // - `address` to the last owner.\r\n            // - `startTimestamp` to the timestamp of burning.\r\n            // - `burned` to `true`.\r\n            // - `nextInitialized` to `true`.\r\n            _packedOwnerships[tokenId] = _packOwnershipData(\r\n                from,\r\n                (BITMASK_BURNED | BITMASK_NEXT_INITIALIZED) | _nextExtraData(from, address(0), prevOwnershipPacked)\r\n            );\r\n\r\n            // If the next slot may not have been initialized (i.e. `nextInitialized == false`) .\r\n            if (prevOwnershipPacked & BITMASK_NEXT_INITIALIZED == 0) {\r\n                uint256 nextTokenId = tokenId + 1;\r\n                // If the next slot's address is zero and not burned (i.e. packed value is zero).\r\n                if (_packedOwnerships[nextTokenId] == 0) {\r\n                    // If the next slot is within bounds.\r\n                    if (nextTokenId != _currentIndex) {\r\n                        // Initialize the next slot to maintain correctness for `ownerOf(tokenId + 1)`.\r\n                        _packedOwnerships[nextTokenId] = prevOwnershipPacked;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        emit Transfer(from, address(0), tokenId);\r\n        _afterTokenTransfers(from, address(0), tokenId, 1);\r\n\r\n        // Overflow not possible, as _burnCounter cannot be exceed _currentIndex times.\r\n        unchecked {\r\n            _burnCounter++;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target contract.\r\n     *\r\n     * @param from address representing the previous owner of the given token ID\r\n     * @param to target address that will receive the tokens\r\n     * @param tokenId uint256 ID of the token to be transferred\r\n     * @param _data bytes optional data to send along with the call\r\n     * @return bool whether the call correctly returned the expected magic value\r\n     */\r\n    function _checkContractOnERC721Received(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId,\r\n        bytes memory _data\r\n    ) private returns (bool) {\r\n        try ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) returns (\r\n            bytes4 retval\r\n        ) {\r\n            return retval == ERC721A__IERC721Receiver(to).onERC721Received.selector;\r\n        } catch (bytes memory reason) {\r\n            if (reason.length == 0) {\r\n                revert TransferToNonERC721ReceiverImplementer();\r\n            } else {\r\n                assembly {\r\n                    revert(add(32, reason), mload(reason))\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Directly sets the extra data for the ownership data `index`.\r\n     */\r\n    function _setExtraDataAt(uint256 index, uint24 extraData) internal virtual {\r\n        uint256 packed = _packedOwnerships[index];\r\n        if (packed == 0) revert OwnershipNotInitializedForExtraData();\r\n        uint256 extraDataCasted;\r\n        // Cast `extraData` with assembly to avoid redundant masking.\r\n        assembly {\r\n            extraDataCasted := extraData\r\n        }\r\n        packed = (packed & BITMASK_EXTRA_DATA_COMPLEMENT) | (extraDataCasted << BITPOS_EXTRA_DATA);\r\n        _packedOwnerships[index] = packed;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the next extra data for the packed ownership data.\r\n     * The returned result is shifted into position.\r\n     */\r\n    function _nextExtraData(\r\n        address from,\r\n        address to,\r\n        uint256 prevOwnershipPacked\r\n    ) private view returns (uint256) {\r\n        uint24 extraData = uint24(prevOwnershipPacked >> BITPOS_EXTRA_DATA);\r\n        return uint256(_extraData(from, to, extraData)) << BITPOS_EXTRA_DATA;\r\n    }\r\n\r\n    /**\r\n     * @dev Called during each token transfer to set the 24bit `extraData` field.\r\n     * Intended to be overridden by the cosumer contract.\r\n     *\r\n     * `previousExtraData` - the value of `extraData` before transfer.\r\n     *\r\n     * Calling conditions:\r\n     *\r\n     * - When `from` and `to` are both non-zero, `from`'s `tokenId` will be\r\n     * transferred to `to`.\r\n     * - When `from` is zero, `tokenId` will be minted for `to`.\r\n     * - When `to` is zero, `tokenId` will be burned by `from`.\r\n     * - `from` and `to` are never both zero.\r\n     */\r\n    function _extraData(\r\n        address from,\r\n        address to,\r\n        uint24 previousExtraData\r\n    ) internal view virtual returns (uint24) {}\r\n\r\n    /**\r\n     * @dev Hook that is called before a set of serially-ordered token ids are about to be transferred.\r\n     * This includes minting.\r\n     * And also called before burning one token.\r\n     *\r\n     * startTokenId - the first token id to be transferred\r\n     * quantity - the amount to be transferred\r\n     *\r\n     * Calling conditions:\r\n     *\r\n     * - When `from` and `to` are both non-zero, `from`'s `tokenId` will be\r\n     * transferred to `to`.\r\n     * - When `from` is zero, `tokenId` will be minted for `to`.\r\n     * - When `to` is zero, `tokenId` will be burned by `from`.\r\n     * - `from` and `to` are never both zero.\r\n     */\r\n    function _beforeTokenTransfers(\r\n        address from,\r\n        address to,\r\n        uint256 startTokenId,\r\n        uint256 quantity\r\n    ) internal virtual {}\r\n\r\n    /**\r\n     * @dev Hook that is called after a set of serially-ordered token ids have been transferred.\r\n     * This includes minting.\r\n     * And also called after one token has been burned.\r\n     *\r\n     * startTokenId - the first token id to be transferred\r\n     * quantity - the amount to be transferred\r\n     *\r\n     * Calling conditions:\r\n     *\r\n     * - When `from` and `to` are both non-zero, `from`'s `tokenId` has been\r\n     * transferred to `to`.\r\n     * - When `from` is zero, `tokenId` has been minted for `to`.\r\n     * - When `to` is zero, `tokenId` has been burned by `from`.\r\n     * - `from` and `to` are never both zero.\r\n     */\r\n    function _afterTokenTransfers(\r\n        address from,\r\n        address to,\r\n        uint256 startTokenId,\r\n        uint256 quantity\r\n    ) internal virtual {}\r\n\r\n    /**\r\n     * @dev Returns the message sender (defaults to `msg.sender`).\r\n     *\r\n     * If you are writing GSN compatible contracts, you need to override this function.\r\n     */\r\n    function _msgSenderERC721A() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n\r\n    /**\r\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\r\n     */\r\n    function _toString(uint256 value) internal pure virtual returns (string memory ptr) {\r\n        assembly {\r\n            // The maximum value of a uint256 contains 78 digits (1 byte per digit),\r\n            // but we allocate 128 bytes to keep the free memory pointer 32-byte word aliged.\r\n            // We will need 1 32-byte word to store the length,\r\n            // and 3 32-byte words to store a maximum of 78 digits. Total: 32 + 3 * 32 = 128.\r\n            ptr := add(mload(0x40), 128)\r\n            // Update the free memory pointer to allocate.\r\n            mstore(0x40, ptr)\r\n\r\n            // Cache the end of the memory to calculate the length later.\r\n            let end := ptr\r\n\r\n            // We write the string from the rightmost digit to the leftmost digit.\r\n            // The following is essentially a do-while loop that also handles the zero case.\r\n            // Costs a bit more than early returning for the zero case,\r\n            // but cheaper in terms of deployment and overall runtime costs.\r\n            for {\r\n                // Initialize and perform the first pass without check.\r\n                let temp := value\r\n                // Move the pointer 1 byte leftwards to point to an empty character slot.\r\n                ptr := sub(ptr, 1)\r\n                // Write the character to the pointer. 48 is the ASCII index of '0'.\r\n                mstore8(ptr, add(48, mod(temp, 10)))\r\n                temp := div(temp, 10)\r\n            } temp {\r\n                // Keep dividing `temp` until zero.\r\n                temp := div(temp, 10)\r\n            } {\r\n                // Body of the for loop.\r\n                ptr := sub(ptr, 1)\r\n                mstore8(ptr, add(48, mod(temp, 10)))\r\n            }\r\n\r\n            let length := sub(end, ptr)\r\n            // Move the pointer 32 bytes leftwards to make room for the length.\r\n            ptr := sub(ptr, 32)\r\n            // Store the length.\r\n            mstore(ptr, length)\r\n        }\r\n    }\r\n}"
			},
			"NFT-Marketplace/contracts/erc721a/IERC721A.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// ERC721A Contracts v4.1.0\r\n// Creator: Chiru Labs\r\n\r\npragma solidity ^0.8.4;\r\n\r\n/**\r\n * @dev Interface of an ERC721A compliant contract.\r\n */\r\ninterface IERC721A {\r\n    /**\r\n     * The caller must own the token or be an approved operator.\r\n     */\r\n    error ApprovalCallerNotOwnerNorApproved();\r\n\r\n    /**\r\n     * The token does not exist.\r\n     */\r\n    error ApprovalQueryForNonexistentToken();\r\n\r\n    /**\r\n     * The caller cannot approve to their own address.\r\n     */\r\n    error ApproveToCaller();\r\n\r\n    /**\r\n     * Cannot query the balance for the zero address.\r\n     */\r\n    error BalanceQueryForZeroAddress();\r\n\r\n    /**\r\n     * Cannot mint to the zero address.\r\n     */\r\n    error MintToZeroAddress();\r\n\r\n    /**\r\n     * The quantity of tokens minted must be more than zero.\r\n     */\r\n    error MintZeroQuantity();\r\n\r\n    /**\r\n     * The token does not exist.\r\n     */\r\n    error OwnerQueryForNonexistentToken();\r\n\r\n    /**\r\n     * The caller must own the token or be an approved operator.\r\n     */\r\n    error TransferCallerNotOwnerNorApproved();\r\n\r\n    /**\r\n     * The token must be owned by `from`.\r\n     */\r\n    error TransferFromIncorrectOwner();\r\n\r\n    /**\r\n     * Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\r\n     */\r\n    error TransferToNonERC721ReceiverImplementer();\r\n\r\n    /**\r\n     * Cannot transfer to the zero address.\r\n     */\r\n    error TransferToZeroAddress();\r\n\r\n    /**\r\n     * The token does not exist.\r\n     */\r\n    error URIQueryForNonexistentToken();\r\n\r\n    /**\r\n     * The `quantity` minted with ERC2309 exceeds the safety limit.\r\n     */\r\n    error MintERC2309QuantityExceedsLimit();\r\n\r\n    /**\r\n     * The `extraData` cannot be set on an unintialized ownership slot.\r\n     */\r\n    error OwnershipNotInitializedForExtraData();\r\n\r\n    struct TokenOwnership {\r\n        // The address of the owner.\r\n        address addr;\r\n        // Keeps track of the start time of ownership with minimal overhead for tokenomics.\r\n        uint64 startTimestamp;\r\n        // Whether the token has been burned.\r\n        bool burned;\r\n        // Arbitrary data similar to `startTimestamp` that can be set through `_extraData`.\r\n        uint24 extraData;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the total amount of tokens stored by the contract.\r\n     *\r\n     * Burned tokens are calculated here, use `_totalMinted()` if you want to count just minted tokens.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    // ==============================\r\n    //            IERC165\r\n    // ==============================\r\n\r\n    /**\r\n     * @dev Returns true if this contract implements the interface defined by\r\n     * `interfaceId`. See the corresponding\r\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\r\n     * to learn more about how these ids are created.\r\n     *\r\n     * This function call must use less than 30 000 gas.\r\n     */\r\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\r\n\r\n    // ==============================\r\n    //            IERC721\r\n    // ==============================\r\n\r\n    /**\r\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\r\n\r\n    /**\r\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\r\n     */\r\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\r\n\r\n    /**\r\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\r\n     */\r\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\r\n\r\n    /**\r\n     * @dev Returns the number of tokens in ``owner``'s account.\r\n     */\r\n    function balanceOf(address owner) external view returns (uint256 balance);\r\n\r\n    /**\r\n     * @dev Returns the owner of the `tokenId` token.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must exist.\r\n     */\r\n    function ownerOf(uint256 tokenId) external view returns (address owner);\r\n\r\n    /**\r\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` cannot be the zero address.\r\n     * - `to` cannot be the zero address.\r\n     * - `tokenId` token must exist and be owned by `from`.\r\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\r\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function safeTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId,\r\n        bytes calldata data\r\n    ) external;\r\n\r\n    /**\r\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\r\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` cannot be the zero address.\r\n     * - `to` cannot be the zero address.\r\n     * - `tokenId` token must exist and be owned by `from`.\r\n     * - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\r\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function safeTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId\r\n    ) external;\r\n\r\n    /**\r\n     * @dev Transfers `tokenId` token from `from` to `to`.\r\n     *\r\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` cannot be the zero address.\r\n     * - `to` cannot be the zero address.\r\n     * - `tokenId` token must be owned by `from`.\r\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId\r\n    ) external;\r\n\r\n    /**\r\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\r\n     * The approval is cleared when the token is transferred.\r\n     *\r\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The caller must own the token or be an approved operator.\r\n     * - `tokenId` must exist.\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address to, uint256 tokenId) external;\r\n\r\n    /**\r\n     * @dev Approve or remove `operator` as an operator for the caller.\r\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The `operator` cannot be the caller.\r\n     *\r\n     * Emits an {ApprovalForAll} event.\r\n     */\r\n    function setApprovalForAll(address operator, bool _approved) external;\r\n\r\n    /**\r\n     * @dev Returns the account approved for `tokenId` token.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must exist.\r\n     */\r\n    function getApproved(uint256 tokenId) external view returns (address operator);\r\n\r\n    /**\r\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\r\n     *\r\n     * See {setApprovalForAll}\r\n     */\r\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\r\n\r\n    // ==============================\r\n    //        IERC721Metadata\r\n    // ==============================\r\n\r\n    /**\r\n     * @dev Returns the token collection name.\r\n     */\r\n    function name() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the token collection symbol.\r\n     */\r\n    function symbol() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\r\n     */\r\n    function tokenURI(uint256 tokenId) external view returns (string memory);\r\n\r\n    // ==============================\r\n    //            IERC2309\r\n    // ==============================\r\n\r\n    /**\r\n     * @dev Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`,\r\n     * as defined in the ERC2309 standard. See `_mintERC2309` for more details.\r\n     */\r\n    event ConsecutiveTransfer(uint256 indexed fromTokenId, uint256 toTokenId, address indexed from, address indexed to);\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"NFT-Marketplace/contracts/erc721a/ERC721A.sol": {
				"ERC721A": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "ApprovalCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApprovalQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApproveToCaller",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "BalanceQueryForZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintERC2309QuantityExceedsLimit",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintZeroQuantity",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnerQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnershipNotInitializedForExtraData",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferFromIncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToNonERC721ReceiverImplementer",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "URIQueryForNonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "toTokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "ConsecutiveTransfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension. Built to optimize for lower gas during batch mints. Assumes serials are sequentially minted starting at `_startTokenId()` (defaults to 0, e.g. 0, 1, 2, 3..). Assumes that an owner cannot have more than 2**64 - 1 (max value of uint64) of supply. Assumes that the maximum token id cannot exceed 2**256 - 1 (max value of uint256).",
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"totalSupply()": {
								"details": "Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see `_totalMinted`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` from `from` to `to`. Requirements: - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":916:36073  contract ERC721A is IERC721A {... */\n  mstore(0x40, 0x80)\n    /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":4215:4373  constructor(string memory name_, string memory symbol_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":4290:4295  name_ */\n  dup2\n    /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":4282:4287  _name */\n  0x02\n    /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":4282:4295  _name = name_ */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_6\n  swap3\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":4316:4323  symbol_ */\n  dup1\n    /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":4306:4313  _symbol */\n  0x03\n    /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":4306:4323  _symbol = symbol_ */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_8\n  swap3\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":4350:4365  _startTokenId() */\n  tag_9\n    /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":4350:4363  _startTokenId */\n  shl(0x20, tag_10)\n    /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":4350:4365  _startTokenId() */\n  0x20\n  shr\n  jump\t// in\ntag_9:\n    /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":4334:4347  _currentIndex */\n  0x00\n    /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":4334:4365  _currentIndex = _startTokenId() */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":4215:4373  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":916:36073  contract ERC721A is IERC721A {... */\n  jump(tag_11)\n    /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":4515:4607  function _startTokenId() internal view virtual returns (uint256) {... */\ntag_10:\n    /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":4571:4578  uint256 */\n  0x00\n    /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":4515:4607  function _startTokenId() internal view virtual returns (uint256) {... */\n  swap1\n  jump\t// out\n    /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":916:36073  contract ERC721A is IERC721A {... */\ntag_7:\n  dup3\n  dup1\n  sload\n  tag_13\n  swap1\n  tag_14\n  jump\t// in\ntag_13:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_16\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_15)\ntag_16:\n  dup3\n  0x1f\n  lt\n  tag_17\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_15)\ntag_17:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_15\n  jumpi\n  swap2\n  dup3\n  add\ntag_18:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_19\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_18)\ntag_19:\ntag_15:\n  pop\n  swap1\n  pop\n  tag_20\n  swap2\n  swap1\n  tag_21\n  jump\t// in\ntag_20:\n  pop\n  swap1\n  jump\t// out\ntag_21:\ntag_22:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_23\n  jumpi\n  0x00\n  dup2\n  0x00\n  swap1\n  sstore\n  pop\n  0x01\n  add\n  jump(tag_22)\ntag_23:\n  pop\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":7:82   */\ntag_24:\n    /* \"#utility.yul\":40:46   */\n  0x00\n    /* \"#utility.yul\":73:75   */\n  0x40\n    /* \"#utility.yul\":67:76   */\n  mload\n    /* \"#utility.yul\":57:76   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:82   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_25:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":211:328   */\ntag_26:\n    /* \"#utility.yul\":320:321   */\n  0x00\n    /* \"#utility.yul\":317:318   */\n  dup1\n    /* \"#utility.yul\":310:322   */\n  revert\n    /* \"#utility.yul\":334:451   */\ntag_27:\n    /* \"#utility.yul\":443:444   */\n  0x00\n    /* \"#utility.yul\":440:441   */\n  dup1\n    /* \"#utility.yul\":433:445   */\n  revert\n    /* \"#utility.yul\":457:574   */\ntag_28:\n    /* \"#utility.yul\":566:567   */\n  0x00\n    /* \"#utility.yul\":563:564   */\n  dup1\n    /* \"#utility.yul\":556:568   */\n  revert\n    /* \"#utility.yul\":580:682   */\ntag_29:\n    /* \"#utility.yul\":621:627   */\n  0x00\n    /* \"#utility.yul\":672:674   */\n  0x1f\n    /* \"#utility.yul\":668:675   */\n  not\n    /* \"#utility.yul\":663:665   */\n  0x1f\n    /* \"#utility.yul\":656:661   */\n  dup4\n    /* \"#utility.yul\":652:666   */\n  add\n    /* \"#utility.yul\":648:676   */\n  and\n    /* \"#utility.yul\":638:676   */\n  swap1\n  pop\n    /* \"#utility.yul\":580:682   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":688:868   */\ntag_30:\n    /* \"#utility.yul\":736:813   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":733:734   */\n  0x00\n    /* \"#utility.yul\":726:814   */\n  mstore\n    /* \"#utility.yul\":833:837   */\n  0x41\n    /* \"#utility.yul\":830:831   */\n  0x04\n    /* \"#utility.yul\":823:838   */\n  mstore\n    /* \"#utility.yul\":857:861   */\n  0x24\n    /* \"#utility.yul\":854:855   */\n  0x00\n    /* \"#utility.yul\":847:862   */\n  revert\n    /* \"#utility.yul\":874:1155   */\ntag_31:\n    /* \"#utility.yul\":957:984   */\n  tag_47\n    /* \"#utility.yul\":979:983   */\n  dup3\n    /* \"#utility.yul\":957:984   */\n  tag_29\n  jump\t// in\ntag_47:\n    /* \"#utility.yul\":949:955   */\n  dup2\n    /* \"#utility.yul\":945:985   */\n  add\n    /* \"#utility.yul\":1087:1093   */\n  dup2\n    /* \"#utility.yul\":1075:1085   */\n  dup2\n    /* \"#utility.yul\":1072:1094   */\n  lt\n    /* \"#utility.yul\":1051:1069   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1039:1049   */\n  dup3\n    /* \"#utility.yul\":1036:1070   */\n  gt\n    /* \"#utility.yul\":1033:1095   */\n  or\n    /* \"#utility.yul\":1030:1118   */\n  iszero\n  tag_48\n  jumpi\n    /* \"#utility.yul\":1098:1116   */\n  tag_49\n  tag_30\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":1030:1118   */\ntag_48:\n    /* \"#utility.yul\":1138:1148   */\n  dup1\n    /* \"#utility.yul\":1134:1136   */\n  0x40\n    /* \"#utility.yul\":1127:1149   */\n  mstore\n    /* \"#utility.yul\":917:1155   */\n  pop\n    /* \"#utility.yul\":874:1155   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1161:1290   */\ntag_32:\n    /* \"#utility.yul\":1195:1201   */\n  0x00\n    /* \"#utility.yul\":1222:1242   */\n  tag_51\n  tag_24\n  jump\t// in\ntag_51:\n    /* \"#utility.yul\":1212:1242   */\n  swap1\n  pop\n    /* \"#utility.yul\":1251:1284   */\n  tag_52\n    /* \"#utility.yul\":1279:1283   */\n  dup3\n    /* \"#utility.yul\":1271:1277   */\n  dup3\n    /* \"#utility.yul\":1251:1284   */\n  tag_31\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":1161:1290   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1296:1604   */\ntag_33:\n    /* \"#utility.yul\":1358:1362   */\n  0x00\n    /* \"#utility.yul\":1448:1466   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1440:1446   */\n  dup3\n    /* \"#utility.yul\":1437:1467   */\n  gt\n    /* \"#utility.yul\":1434:1490   */\n  iszero\n  tag_54\n  jumpi\n    /* \"#utility.yul\":1470:1488   */\n  tag_55\n  tag_30\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":1434:1490   */\ntag_54:\n    /* \"#utility.yul\":1508:1537   */\n  tag_56\n    /* \"#utility.yul\":1530:1536   */\n  dup3\n    /* \"#utility.yul\":1508:1537   */\n  tag_29\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":1500:1537   */\n  swap1\n  pop\n    /* \"#utility.yul\":1592:1596   */\n  0x20\n    /* \"#utility.yul\":1586:1590   */\n  dup2\n    /* \"#utility.yul\":1582:1597   */\n  add\n    /* \"#utility.yul\":1574:1597   */\n  swap1\n  pop\n    /* \"#utility.yul\":1296:1604   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1610:1917   */\ntag_34:\n    /* \"#utility.yul\":1678:1679   */\n  0x00\n    /* \"#utility.yul\":1688:1801   */\ntag_58:\n    /* \"#utility.yul\":1702:1708   */\n  dup4\n    /* \"#utility.yul\":1699:1700   */\n  dup2\n    /* \"#utility.yul\":1696:1709   */\n  lt\n    /* \"#utility.yul\":1688:1801   */\n  iszero\n  tag_60\n  jumpi\n    /* \"#utility.yul\":1787:1788   */\n  dup1\n    /* \"#utility.yul\":1782:1785   */\n  dup3\n    /* \"#utility.yul\":1778:1789   */\n  add\n    /* \"#utility.yul\":1772:1790   */\n  mload\n    /* \"#utility.yul\":1768:1769   */\n  dup2\n    /* \"#utility.yul\":1763:1766   */\n  dup5\n    /* \"#utility.yul\":1759:1770   */\n  add\n    /* \"#utility.yul\":1752:1791   */\n  mstore\n    /* \"#utility.yul\":1724:1726   */\n  0x20\n    /* \"#utility.yul\":1721:1722   */\n  dup2\n    /* \"#utility.yul\":1717:1727   */\n  add\n    /* \"#utility.yul\":1712:1727   */\n  swap1\n  pop\n    /* \"#utility.yul\":1688:1801   */\n  jump(tag_58)\ntag_60:\n    /* \"#utility.yul\":1819:1825   */\n  dup4\n    /* \"#utility.yul\":1816:1817   */\n  dup2\n    /* \"#utility.yul\":1813:1826   */\n  gt\n    /* \"#utility.yul\":1810:1911   */\n  iszero\n  tag_61\n  jumpi\n    /* \"#utility.yul\":1899:1900   */\n  0x00\n    /* \"#utility.yul\":1890:1896   */\n  dup5\n    /* \"#utility.yul\":1885:1888   */\n  dup5\n    /* \"#utility.yul\":1881:1897   */\n  add\n    /* \"#utility.yul\":1874:1901   */\n  mstore\n    /* \"#utility.yul\":1810:1911   */\ntag_61:\n    /* \"#utility.yul\":1659:1917   */\n  pop\n    /* \"#utility.yul\":1610:1917   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1923:2344   */\ntag_35:\n    /* \"#utility.yul\":2012:2017   */\n  0x00\n    /* \"#utility.yul\":2037:2103   */\n  tag_63\n    /* \"#utility.yul\":2053:2102   */\n  tag_64\n    /* \"#utility.yul\":2095:2101   */\n  dup5\n    /* \"#utility.yul\":2053:2102   */\n  tag_33\n  jump\t// in\ntag_64:\n    /* \"#utility.yul\":2037:2103   */\n  tag_32\n  jump\t// in\ntag_63:\n    /* \"#utility.yul\":2028:2103   */\n  swap1\n  pop\n    /* \"#utility.yul\":2126:2132   */\n  dup3\n    /* \"#utility.yul\":2119:2124   */\n  dup2\n    /* \"#utility.yul\":2112:2133   */\n  mstore\n    /* \"#utility.yul\":2164:2168   */\n  0x20\n    /* \"#utility.yul\":2157:2162   */\n  dup2\n    /* \"#utility.yul\":2153:2169   */\n  add\n    /* \"#utility.yul\":2202:2205   */\n  dup5\n    /* \"#utility.yul\":2193:2199   */\n  dup5\n    /* \"#utility.yul\":2188:2191   */\n  dup5\n    /* \"#utility.yul\":2184:2200   */\n  add\n    /* \"#utility.yul\":2181:2206   */\n  gt\n    /* \"#utility.yul\":2178:2290   */\n  iszero\n  tag_65\n  jumpi\n    /* \"#utility.yul\":2209:2288   */\n  tag_66\n  tag_28\n  jump\t// in\ntag_66:\n    /* \"#utility.yul\":2178:2290   */\ntag_65:\n    /* \"#utility.yul\":2299:2338   */\n  tag_67\n    /* \"#utility.yul\":2331:2337   */\n  dup5\n    /* \"#utility.yul\":2326:2329   */\n  dup3\n    /* \"#utility.yul\":2321:2324   */\n  dup6\n    /* \"#utility.yul\":2299:2338   */\n  tag_34\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":2018:2344   */\n  pop\n    /* \"#utility.yul\":1923:2344   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2364:2719   */\ntag_36:\n    /* \"#utility.yul\":2431:2436   */\n  0x00\n    /* \"#utility.yul\":2480:2483   */\n  dup3\n    /* \"#utility.yul\":2473:2477   */\n  0x1f\n    /* \"#utility.yul\":2465:2471   */\n  dup4\n    /* \"#utility.yul\":2461:2478   */\n  add\n    /* \"#utility.yul\":2457:2484   */\n  slt\n    /* \"#utility.yul\":2447:2569   */\n  tag_69\n  jumpi\n    /* \"#utility.yul\":2488:2567   */\n  tag_70\n  tag_27\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":2447:2569   */\ntag_69:\n    /* \"#utility.yul\":2598:2604   */\n  dup2\n    /* \"#utility.yul\":2592:2605   */\n  mload\n    /* \"#utility.yul\":2623:2713   */\n  tag_71\n    /* \"#utility.yul\":2709:2712   */\n  dup5\n    /* \"#utility.yul\":2701:2707   */\n  dup3\n    /* \"#utility.yul\":2694:2698   */\n  0x20\n    /* \"#utility.yul\":2686:2692   */\n  dup7\n    /* \"#utility.yul\":2682:2699   */\n  add\n    /* \"#utility.yul\":2623:2713   */\n  tag_35\n  jump\t// in\ntag_71:\n    /* \"#utility.yul\":2614:2713   */\n  swap2\n  pop\n    /* \"#utility.yul\":2437:2719   */\n  pop\n    /* \"#utility.yul\":2364:2719   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2725:3578   */\ntag_3:\n    /* \"#utility.yul\":2824:2830   */\n  0x00\n    /* \"#utility.yul\":2832:2838   */\n  dup1\n    /* \"#utility.yul\":2881:2883   */\n  0x40\n    /* \"#utility.yul\":2869:2878   */\n  dup4\n    /* \"#utility.yul\":2860:2867   */\n  dup6\n    /* \"#utility.yul\":2856:2879   */\n  sub\n    /* \"#utility.yul\":2852:2884   */\n  slt\n    /* \"#utility.yul\":2849:2968   */\n  iszero\n  tag_73\n  jumpi\n    /* \"#utility.yul\":2887:2966   */\n  tag_74\n  tag_25\n  jump\t// in\ntag_74:\n    /* \"#utility.yul\":2849:2968   */\ntag_73:\n    /* \"#utility.yul\":3028:3029   */\n  0x00\n    /* \"#utility.yul\":3017:3026   */\n  dup4\n    /* \"#utility.yul\":3013:3030   */\n  add\n    /* \"#utility.yul\":3007:3031   */\n  mload\n    /* \"#utility.yul\":3058:3076   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3050:3056   */\n  dup2\n    /* \"#utility.yul\":3047:3077   */\n  gt\n    /* \"#utility.yul\":3044:3161   */\n  iszero\n  tag_75\n  jumpi\n    /* \"#utility.yul\":3080:3159   */\n  tag_76\n  tag_26\n  jump\t// in\ntag_76:\n    /* \"#utility.yul\":3044:3161   */\ntag_75:\n    /* \"#utility.yul\":3185:3259   */\n  tag_77\n    /* \"#utility.yul\":3251:3258   */\n  dup6\n    /* \"#utility.yul\":3242:3248   */\n  dup3\n    /* \"#utility.yul\":3231:3240   */\n  dup7\n    /* \"#utility.yul\":3227:3249   */\n  add\n    /* \"#utility.yul\":3185:3259   */\n  tag_36\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":3175:3259   */\n  swap3\n  pop\n    /* \"#utility.yul\":2978:3269   */\n  pop\n    /* \"#utility.yul\":3329:3331   */\n  0x20\n    /* \"#utility.yul\":3318:3327   */\n  dup4\n    /* \"#utility.yul\":3314:3332   */\n  add\n    /* \"#utility.yul\":3308:3333   */\n  mload\n    /* \"#utility.yul\":3360:3378   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3352:3358   */\n  dup2\n    /* \"#utility.yul\":3349:3379   */\n  gt\n    /* \"#utility.yul\":3346:3463   */\n  iszero\n  tag_78\n  jumpi\n    /* \"#utility.yul\":3382:3461   */\n  tag_79\n  tag_26\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":3346:3463   */\ntag_78:\n    /* \"#utility.yul\":3487:3561   */\n  tag_80\n    /* \"#utility.yul\":3553:3560   */\n  dup6\n    /* \"#utility.yul\":3544:3550   */\n  dup3\n    /* \"#utility.yul\":3533:3542   */\n  dup7\n    /* \"#utility.yul\":3529:3551   */\n  add\n    /* \"#utility.yul\":3487:3561   */\n  tag_36\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":3477:3561   */\n  swap2\n  pop\n    /* \"#utility.yul\":3279:3571   */\n  pop\n    /* \"#utility.yul\":2725:3578   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3584:3764   */\ntag_37:\n    /* \"#utility.yul\":3632:3709   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":3629:3630   */\n  0x00\n    /* \"#utility.yul\":3622:3710   */\n  mstore\n    /* \"#utility.yul\":3729:3733   */\n  0x22\n    /* \"#utility.yul\":3726:3727   */\n  0x04\n    /* \"#utility.yul\":3719:3734   */\n  mstore\n    /* \"#utility.yul\":3753:3757   */\n  0x24\n    /* \"#utility.yul\":3750:3751   */\n  0x00\n    /* \"#utility.yul\":3743:3758   */\n  revert\n    /* \"#utility.yul\":3770:4090   */\ntag_14:\n    /* \"#utility.yul\":3814:3820   */\n  0x00\n    /* \"#utility.yul\":3851:3852   */\n  0x02\n    /* \"#utility.yul\":3845:3849   */\n  dup3\n    /* \"#utility.yul\":3841:3853   */\n  div\n    /* \"#utility.yul\":3831:3853   */\n  swap1\n  pop\n    /* \"#utility.yul\":3898:3899   */\n  0x01\n    /* \"#utility.yul\":3892:3896   */\n  dup3\n    /* \"#utility.yul\":3888:3900   */\n  and\n    /* \"#utility.yul\":3919:3937   */\n  dup1\n    /* \"#utility.yul\":3909:3990   */\n  tag_83\n  jumpi\n    /* \"#utility.yul\":3975:3979   */\n  0x7f\n    /* \"#utility.yul\":3967:3973   */\n  dup3\n    /* \"#utility.yul\":3963:3980   */\n  and\n    /* \"#utility.yul\":3953:3980   */\n  swap2\n  pop\n    /* \"#utility.yul\":3909:3990   */\ntag_83:\n    /* \"#utility.yul\":4037:4039   */\n  0x20\n    /* \"#utility.yul\":4029:4035   */\n  dup3\n    /* \"#utility.yul\":4026:4040   */\n  lt\n    /* \"#utility.yul\":4006:4024   */\n  dup2\n    /* \"#utility.yul\":4003:4041   */\n  sub\n    /* \"#utility.yul\":4000:4084   */\n  tag_84\n  jumpi\n    /* \"#utility.yul\":4056:4074   */\n  tag_85\n  tag_37\n  jump\t// in\ntag_85:\n    /* \"#utility.yul\":4000:4084   */\ntag_84:\n    /* \"#utility.yul\":3821:4090   */\n  pop\n    /* \"#utility.yul\":3770:4090   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":916:36073  contract ERC721A is IERC721A {... */\ntag_11:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":916:36073  contract ERC721A is IERC721A {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6352211e\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xa22cb465\n      gt\n      tag_18\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_16\n      jumpi\n      jump(tag_2)\n    tag_18:\n      dup1\n      0x6352211e\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_17:\n      dup1\n      0x095ea7b3\n      gt\n      tag_19\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":5969:6584  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_3:\n      tag_20\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      tag_23\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":11688:11788  function name() public view virtual override returns (string memory) {... */\n    tag_4:\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":13648:13866  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_5:\n      tag_30\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":13182:13582  function approve(address to, uint256 tokenId) public virtual override {... */\n    tag_6:\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n    tag_36:\n      stop\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":4999:5322  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_7:\n      tag_40\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":22787:25587  function transferFrom(... */\n    tag_8:\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      tag_47\n      jump\t// in\n    tag_44:\n      stop\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":14552:14737  function safeTransferFrom(... */\n    tag_9:\n      tag_48\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_49\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_49:\n      tag_50\n      jump\t// in\n    tag_48:\n      stop\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":11469:11621  function ownerOf(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_10:\n      tag_51\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_52\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_52:\n      tag_53\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      tag_54\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":6648:6880  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n    tag_11:\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_56\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_56:\n      tag_58\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      tag_59\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":11857:11961  function symbol() public view virtual override returns (string memory) {... */\n    tag_12:\n      tag_60\n      tag_61\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      tag_62\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":13938:14246  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_13:\n      tag_63\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_64\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      tag_66\n      jump\t// in\n    tag_63:\n      stop\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":14808:15207  function safeTransferFrom(... */\n    tag_14:\n      tag_67\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_68\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_68:\n      tag_70\n      jump\t// in\n    tag_67:\n      stop\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":12032:12350  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_15:\n      tag_71\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_72\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_72:\n      tag_73\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      tag_74\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":14317:14481  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n    tag_16:\n      tag_75\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_76\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_76:\n      tag_78\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      tag_79\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":5969:6584  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_23:\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":6054:6058  bool */\n      0x00\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":6369:6379  0x01ffc9a7 */\n      0x01ffc9a7\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":6354:6379  interfaceId == 0x01ffc9a7 */\n      0xe0\n      shl\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":6354:6365  interfaceId */\n      dup3\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":6354:6379  interfaceId == 0x01ffc9a7 */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":6354:6456  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.... */\n      dup1\n      tag_81\n      jumpi\n      pop\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":6446:6456  0x80ac58cd */\n      0x80ac58cd\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":6431:6456  interfaceId == 0x80ac58cd */\n      0xe0\n      shl\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":6431:6442  interfaceId */\n      dup3\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":6431:6456  interfaceId == 0x80ac58cd */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":6354:6456  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.... */\n    tag_81:\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":6354:6533  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.... */\n      dup1\n      tag_82\n      jumpi\n      pop\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":6523:6533  0x5b5e139f */\n      0x5b5e139f\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":6508:6533  interfaceId == 0x5b5e139f */\n      0xe0\n      shl\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":6508:6519  interfaceId */\n      dup3\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":6508:6533  interfaceId == 0x5b5e139f */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":6354:6533  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.... */\n    tag_82:\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":6334:6533  return... */\n      swap1\n      pop\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":5969:6584  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":11688:11788  function name() public view virtual override returns (string memory) {... */\n    tag_27:\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":11742:11755  string memory */\n      0x60\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":11775:11780  _name */\n      0x02\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":11768:11780  return _name */\n      dup1\n      sload\n      tag_84\n      swap1\n      tag_85\n      jump\t// in\n    tag_84:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_86\n      swap1\n      tag_85\n      jump\t// in\n    tag_86:\n      dup1\n      iszero\n      tag_87\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_88\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_87)\n    tag_88:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_89:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_89\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_87:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":11688:11788  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":13648:13866  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_33:\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":13724:13731  address */\n      0x00\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":13749:13765  _exists(tokenId) */\n      tag_91\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":13757:13764  tokenId */\n      dup3\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":13749:13756  _exists */\n      tag_92\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":13749:13765  _exists(tokenId) */\n      jump\t// in\n    tag_91:\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":13744:13808  if (!_exists(tokenId)) revert ApprovalQueryForNonexistentToken() */\n      tag_93\n      jumpi\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":13774:13808  ApprovalQueryForNonexistentToken() */\n      mload(0x40)\n      0xcf4700e400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":13744:13808  if (!_exists(tokenId)) revert ApprovalQueryForNonexistentToken() */\n    tag_93:\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":13828:13843  _tokenApprovals */\n      0x06\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":13828:13852  _tokenApprovals[tokenId] */\n      0x00\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":13844:13851  tokenId */\n      dup4\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":13828:13852  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":13828:13858  _tokenApprovals[tokenId].value */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":13821:13858  return _tokenApprovals[tokenId].value */\n      swap1\n      pop\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":13648:13866  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":13182:13582  function approve(address to, uint256 tokenId) public virtual override {... */\n    tag_39:\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":13263:13276  address owner */\n      0x00\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":13279:13295  ownerOf(tokenId) */\n      tag_95\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":13287:13294  tokenId */\n      dup3\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":13279:13286  ownerOf */\n      tag_53\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":13279:13295  ownerOf(tokenId) */\n      jump\t// in\n    tag_95:\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":13263:13295  address owner = ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":13335:13340  owner */\n      dup1\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":13312:13340  _msgSenderERC721A() != owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":13312:13331  _msgSenderERC721A() */\n      tag_96\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":13312:13329  _msgSenderERC721A */\n      tag_97\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":13312:13331  _msgSenderERC721A() */\n      jump\t// in\n    tag_96:\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":13312:13340  _msgSenderERC721A() != owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":13308:13483  if (_msgSenderERC721A() != owner)... */\n      tag_98\n      jumpi\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":13360:13404  isApprovedForAll(owner, _msgSenderERC721A()) */\n      tag_99\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":13377:13382  owner */\n      dup2\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":13384:13403  _msgSenderERC721A() */\n      tag_100\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":13384:13401  _msgSenderERC721A */\n      tag_97\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":13384:13403  _msgSenderERC721A() */\n      jump\t// in\n    tag_100:\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":13360:13376  isApprovedForAll */\n      tag_78\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":13360:13404  isApprovedForAll(owner, _msgSenderERC721A()) */\n      jump\t// in\n    tag_99:\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":13355:13483  if (!isApprovedForAll(owner, _msgSenderERC721A())) {... */\n      tag_101\n      jumpi\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":13432:13467  ApprovalCallerNotOwnerNorApproved() */\n      mload(0x40)\n      0xcfb3b94200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":13355:13483  if (!isApprovedForAll(owner, _msgSenderERC721A())) {... */\n    tag_101:\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":13308:13483  if (_msgSenderERC721A() != owner)... */\n    tag_98:\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":13528:13530  to */\n      dup3\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":13495:13510  _tokenApprovals */\n      0x06\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":13495:13519  _tokenApprovals[tokenId] */\n      0x00\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":13511:13518  tokenId */\n      dup5\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":13495:13519  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":13495:13525  _tokenApprovals[tokenId].value */\n      0x00\n      add\n      0x00\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":13495:13530  _tokenApprovals[tokenId].value = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":13566:13573  tokenId */\n      dup2\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":13562:13564  to */\n      dup4\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":13546:13574  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":13555:13560  owner */\n      dup3\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":13546:13574  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":13252:13582  {... */\n      pop\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":13182:13582  function approve(address to, uint256 tokenId) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":4999:5322  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_41:\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":5060:5067  uint256 */\n      0x00\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":5288:5303  _startTokenId() */\n      tag_103\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":5288:5301  _startTokenId */\n      tag_104\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":5288:5303  _startTokenId() */\n      jump\t// in\n    tag_103:\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":5273:5285  _burnCounter */\n      sload(0x01)\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":5257:5270  _currentIndex */\n      sload(0x00)\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":5257:5285  _currentIndex - _burnCounter */\n      sub\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":5257:5303  _currentIndex - _burnCounter - _startTokenId() */\n      sub\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":5250:5303  return _currentIndex - _burnCounter - _startTokenId() */\n      swap1\n      pop\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":4999:5322  function totalSupply() public view virtual override returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":22787:25587  function transferFrom(... */\n    tag_47:\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":22921:22948  uint256 prevOwnershipPacked */\n      0x00\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":22951:22978  _packedOwnershipOf(tokenId) */\n      tag_106\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":22970:22977  tokenId */\n      dup3\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":22951:22969  _packedOwnershipOf */\n      tag_107\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":22951:22978  _packedOwnershipOf(tokenId) */\n      jump\t// in\n    tag_106:\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":22921:22978  uint256 prevOwnershipPacked = _packedOwnershipOf(tokenId) */\n      swap1\n      pop\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":23036:23040  from */\n      dup4\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":22995:23040  address(uint160(prevOwnershipPacked)) != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":23011:23030  prevOwnershipPacked */\n      dup2\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":22995:23040  address(uint160(prevOwnershipPacked)) != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":22991:23077  if (address(uint160(prevOwnershipPacked)) != from) revert TransferFromIncorrectOwner() */\n      tag_108\n      jumpi\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":23049:23077  TransferFromIncorrectOwner() */\n      mload(0x40)\n      0xa114810000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":22991:23077  if (address(uint160(prevOwnershipPacked)) != from) revert TransferFromIncorrectOwner() */\n    tag_108:\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":23091:23118  uint256 approvedAddressSlot */\n      0x00\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":23120:23143  address approvedAddress */\n      dup1\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":23147:23175  _getApprovedAddress(tokenId) */\n      tag_109\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":23167:23174  tokenId */\n      dup5\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":23147:23166  _getApprovedAddress */\n      tag_110\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":23147:23175  _getApprovedAddress(tokenId) */\n      jump\t// in\n    tag_109:\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":23090:23175  (uint256 approvedAddressSlot, address approvedAddress) = _getApprovedAddress(tokenId) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":23275:23337  _isOwnerOrApproved(approvedAddress, from, _msgSenderERC721A()) */\n      tag_111\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":23294:23309  approvedAddress */\n      dup2\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":23311:23315  from */\n      dup8\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":23317:23336  _msgSenderERC721A() */\n      tag_112\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":23317:23334  _msgSenderERC721A */\n      tag_97\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":23317:23336  _msgSenderERC721A() */\n      jump\t// in\n    tag_112:\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":23275:23293  _isOwnerOrApproved */\n      tag_113\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":23275:23337  _isOwnerOrApproved(approvedAddress, from, _msgSenderERC721A()) */\n      jump\t// in\n    tag_111:\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":23270:23444  if (!_isOwnerOrApproved(approvedAddress, from, _msgSenderERC721A()))... */\n      tag_114\n      jumpi\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":23357:23400  isApprovedForAll(from, _msgSenderERC721A()) */\n      tag_115\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":23374:23378  from */\n      dup7\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":23380:23399  _msgSenderERC721A() */\n      tag_116\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":23380:23397  _msgSenderERC721A */\n      tag_97\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":23380:23399  _msgSenderERC721A() */\n      jump\t// in\n    tag_116:\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":23357:23373  isApprovedForAll */\n      tag_78\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":23357:23400  isApprovedForAll(from, _msgSenderERC721A()) */\n      jump\t// in\n    tag_115:\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":23352:23444  if (!isApprovedForAll(from, _msgSenderERC721A())) revert TransferCallerNotOwnerNorApproved() */\n      tag_117\n      jumpi\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":23409:23444  TransferCallerNotOwnerNorApproved() */\n      mload(0x40)\n      0x59c896be00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":23352:23444  if (!isApprovedForAll(from, _msgSenderERC721A())) revert TransferCallerNotOwnerNorApproved() */\n    tag_117:\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":23270:23444  if (!_isOwnerOrApproved(approvedAddress, from, _msgSenderERC721A()))... */\n    tag_114:\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":23475:23476  0 */\n      0x00\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":23461:23477  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":23461:23463  to */\n      dup6\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":23461:23477  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":23457:23509  if (to == address(0)) revert TransferToZeroAddress() */\n      tag_118\n      jumpi\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":23486:23509  TransferToZeroAddress() */\n      mload(0x40)\n      0xea553b3400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":23457:23509  if (to == address(0)) revert TransferToZeroAddress() */\n    tag_118:\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":23522:23565  _beforeTokenTransfers(from, to, tokenId, 1) */\n      tag_119\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":23544:23548  from */\n      dup7\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":23550:23552  to */\n      dup7\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":23554:23561  tokenId */\n      dup7\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":23563:23564  1 */\n      0x01\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":23522:23543  _beforeTokenTransfers */\n      tag_120\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":23522:23565  _beforeTokenTransfers(from, to, tokenId, 1) */\n      jump\t// in\n    tag_119:\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":23658:23673  approvedAddress */\n      dup1\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":23655:23815  if approvedAddress {... */\n      iszero\n      tag_121\n      jumpi\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":23798:23799  0 */\n      0x00\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":23777:23796  approvedAddressSlot */\n      dup3\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":23770:23800  sstore(approvedAddressSlot, 0) */\n      sstore\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":23655:23815  if approvedAddress {... */\n    tag_121:\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":24193:24211  _packedAddressData */\n      0x05\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":24193:24217  _packedAddressData[from] */\n      0x00\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":24212:24216  from */\n      dup8\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":24193:24217  _packedAddressData[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":24191:24217  --_packedAddressData[from] */\n      dup2\n      sload\n      0x01\n      swap1\n      sub\n      swap2\n      swap1\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":24262:24280  _packedAddressData */\n      0x05\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":24262:24284  _packedAddressData[to] */\n      0x00\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":24281:24283  to */\n      dup7\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":24262:24284  _packedAddressData[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":24260:24284  ++_packedAddressData[to] */\n      dup2\n      sload\n      0x01\n      add\n      swap2\n      swap1\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":24584:24729  _packOwnershipData(... */\n      tag_122\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":24621:24623  to */\n      dup6\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":24669:24714  _nextExtraData(from, to, prevOwnershipPacked) */\n      tag_123\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":24684:24688  from */\n      dup9\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":24690:24692  to */\n      dup9\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":24694:24713  prevOwnershipPacked */\n      dup8\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":24669:24683  _nextExtraData */\n      tag_124\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":24669:24714  _nextExtraData(from, to, prevOwnershipPacked) */\n      jump\t// in\n    tag_123:\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":2210:2218  1 << 225 */\n      0x0200000000000000000000000000000000000000000000000000000000\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":24642:24714  BITMASK_NEXT_INITIALIZED | _nextExtraData(from, to, prevOwnershipPacked) */\n      or\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":24584:24602  _packOwnershipData */\n      tag_125\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":24584:24729  _packOwnershipData(... */\n      jump\t// in\n    tag_122:\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":24555:24572  _packedOwnerships */\n      0x04\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":24555:24581  _packedOwnerships[tokenId] */\n      0x00\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":24573:24580  tokenId */\n      dup7\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":24555:24581  _packedOwnerships[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":24555:24729  _packedOwnerships[tokenId] = _packOwnershipData(... */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":24899:24900  0 */\n      0x00\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":2210:2218  1 << 225 */\n      0x0200000000000000000000000000000000000000000000000000000000\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":24849:24868  prevOwnershipPacked */\n      dup5\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":24849:24895  prevOwnershipPacked & BITMASK_NEXT_INITIALIZED */\n      and\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":24849:24900  prevOwnershipPacked & BITMASK_NEXT_INITIALIZED == 0 */\n      sub\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":24845:25471  if (prevOwnershipPacked & BITMASK_NEXT_INITIALIZED == 0) {... */\n      tag_126\n      jumpi\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":24921:24940  uint256 nextTokenId */\n      0x00\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":24953:24954  1 */\n      0x01\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":24943:24950  tokenId */\n      dup6\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":24943:24954  tokenId + 1 */\n      add\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":24921:24954  uint256 nextTokenId = tokenId + 1 */\n      swap1\n      pop\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":25110:25111  0 */\n      0x00\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":25076:25093  _packedOwnerships */\n      0x04\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":25076:25106  _packedOwnerships[nextTokenId] */\n      0x00\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":25094:25105  nextTokenId */\n      dup4\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":25076:25106  _packedOwnerships[nextTokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":25076:25111  _packedOwnerships[nextTokenId] == 0 */\n      sub\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":25072:25456  if (_packedOwnerships[nextTokenId] == 0) {... */\n      tag_127\n      jumpi\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":25214:25227  _currentIndex */\n      sload(0x00)\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":25199:25210  nextTokenId */\n      dup2\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":25199:25227  nextTokenId != _currentIndex */\n      eq\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":25195:25437  if (nextTokenId != _currentIndex) {... */\n      tag_128\n      jumpi\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":25394:25413  prevOwnershipPacked */\n      dup4\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":25361:25378  _packedOwnerships */\n      0x04\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":25361:25391  _packedOwnerships[nextTokenId] */\n      0x00\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":25379:25390  nextTokenId */\n      dup4\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":25361:25391  _packedOwnerships[nextTokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":25361:25413  _packedOwnerships[nextTokenId] = prevOwnershipPacked */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":25195:25437  if (nextTokenId != _currentIndex) {... */\n    tag_128:\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":25072:25456  if (_packedOwnerships[nextTokenId] == 0) {... */\n    tag_127:\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":24902:25471  {... */\n      pop\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":24845:25471  if (prevOwnershipPacked & BITMASK_NEXT_INITIALIZED == 0) {... */\n    tag_126:\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":25518:25525  tokenId */\n      dup4\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":25514:25516  to */\n      dup6\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":25499:25526  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":25508:25512  from */\n      dup8\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":25499:25526  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":25537:25579  _afterTokenTransfers(from, to, tokenId, 1) */\n      tag_129\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":25558:25562  from */\n      dup7\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":25564:25566  to */\n      dup7\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":25568:25575  tokenId */\n      dup7\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":25577:25578  1 */\n      0x01\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":25537:25557  _afterTokenTransfers */\n      tag_130\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":25537:25579  _afterTokenTransfers(from, to, tokenId, 1) */\n      jump\t// in\n    tag_129:\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":22910:25587  {... */\n      pop\n      pop\n      pop\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":22787:25587  function transferFrom(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":14552:14737  function safeTransferFrom(... */\n    tag_50:\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":14690:14729  safeTransferFrom(from, to, tokenId, '') */\n      tag_132\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":14707:14711  from */\n      dup4\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":14713:14715  to */\n      dup4\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":14717:14724  tokenId */\n      dup4\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":14690:14729  safeTransferFrom(from, to, tokenId, '') */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":14690:14706  safeTransferFrom */\n      tag_70\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":14690:14729  safeTransferFrom(from, to, tokenId, '') */\n      jump\t// in\n    tag_132:\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":14552:14737  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":11469:11621  function ownerOf(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_53:\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":11541:11548  address */\n      0x00\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":11584:11611  _packedOwnershipOf(tokenId) */\n      tag_134\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":11603:11610  tokenId */\n      dup3\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":11584:11602  _packedOwnershipOf */\n      tag_107\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":11584:11611  _packedOwnershipOf(tokenId) */\n      jump\t// in\n    tag_134:\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":11561:11613  return address(uint160(_packedOwnershipOf(tokenId))) */\n      swap1\n      pop\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":11469:11621  function ownerOf(uint256 tokenId) public view virtual override returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":6648:6880  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n    tag_58:\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":6720:6727  uint256 */\n      0x00\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":6761:6762  0 */\n      dup1\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":6744:6763  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":6744:6749  owner */\n      dup3\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":6744:6763  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":6740:6800  if (owner == address(0)) revert BalanceQueryForZeroAddress() */\n      tag_136\n      jumpi\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":6772:6800  BalanceQueryForZeroAddress() */\n      mload(0x40)\n      0x8f4eb60400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":6740:6800  if (owner == address(0)) revert BalanceQueryForZeroAddress() */\n    tag_136:\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":1162:1175  (1 << 64) - 1 */\n      0xffffffffffffffff\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":6818:6836  _packedAddressData */\n      0x05\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":6818:6843  _packedAddressData[owner] */\n      0x00\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":6837:6842  owner */\n      dup5\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":6818:6843  _packedAddressData[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":6818:6872  _packedAddressData[owner] & BITMASK_ADDRESS_DATA_ENTRY */\n      and\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":6811:6872  return _packedAddressData[owner] & BITMASK_ADDRESS_DATA_ENTRY */\n      swap1\n      pop\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":6648:6880  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":11857:11961  function symbol() public view virtual override returns (string memory) {... */\n    tag_61:\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":11913:11926  string memory */\n      0x60\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":11946:11953  _symbol */\n      0x03\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":11939:11953  return _symbol */\n      dup1\n      sload\n      tag_138\n      swap1\n      tag_85\n      jump\t// in\n    tag_138:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_139\n      swap1\n      tag_85\n      jump\t// in\n    tag_139:\n      dup1\n      iszero\n      tag_140\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_141\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_140)\n    tag_141:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_142:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_142\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_140:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":11857:11961  function symbol() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":13938:14246  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_66:\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":14049:14068  _msgSenderERC721A() */\n      tag_144\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":14049:14066  _msgSenderERC721A */\n      tag_97\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":14049:14068  _msgSenderERC721A() */\n      jump\t// in\n    tag_144:\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":14037:14068  operator == _msgSenderERC721A() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":14037:14045  operator */\n      dup3\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":14037:14068  operator == _msgSenderERC721A() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":14033:14094  if (operator == _msgSenderERC721A()) revert ApproveToCaller() */\n      tag_145\n      jumpi\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":14077:14094  ApproveToCaller() */\n      mload(0x40)\n      0xb06307db00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":14033:14094  if (operator == _msgSenderERC721A()) revert ApproveToCaller() */\n    tag_145:\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":14159:14167  approved */\n      dup1\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":14107:14125  _operatorApprovals */\n      0x07\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":14107:14146  _operatorApprovals[_msgSenderERC721A()] */\n      0x00\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":14126:14145  _msgSenderERC721A() */\n      tag_146\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":14126:14143  _msgSenderERC721A */\n      tag_97\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":14126:14145  _msgSenderERC721A() */\n      jump\t// in\n    tag_146:\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":14107:14146  _operatorApprovals[_msgSenderERC721A()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":14107:14156  _operatorApprovals[_msgSenderERC721A()][operator] */\n      0x00\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":14147:14155  operator */\n      dup5\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":14107:14156  _operatorApprovals[_msgSenderERC721A()][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":14107:14167  _operatorApprovals[_msgSenderERC721A()][operator] = approved */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":14219:14227  operator */\n      dup2\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":14183:14238  ApprovalForAll(_msgSenderERC721A(), operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":14198:14217  _msgSenderERC721A() */\n      tag_147\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":14198:14215  _msgSenderERC721A */\n      tag_97\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":14198:14217  _msgSenderERC721A() */\n      jump\t// in\n    tag_147:\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":14183:14238  ApprovalForAll(_msgSenderERC721A(), operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":14229:14237  approved */\n      dup4\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":14183:14238  ApprovalForAll(_msgSenderERC721A(), operator, approved) */\n      mload(0x40)\n      tag_148\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_148:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":13938:14246  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":14808:15207  function safeTransferFrom(... */\n    tag_70:\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":14975:15006  transferFrom(from, to, tokenId) */\n      tag_150\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":14988:14992  from */\n      dup5\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":14994:14996  to */\n      dup5\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":14998:15005  tokenId */\n      dup5\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":14975:14987  transferFrom */\n      tag_47\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":14975:15006  transferFrom(from, to, tokenId) */\n      jump\t// in\n    tag_150:\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":15039:15040  0 */\n      0x00\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":15021:15023  to */\n      dup4\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":15021:15035  to.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":15021:15040  to.code.length != 0 */\n      eq\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":15017:15200  if (to.code.length != 0)... */\n      tag_151\n      jumpi\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":15060:15116  _checkContractOnERC721Received(from, to, tokenId, _data) */\n      tag_152\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":15091:15095  from */\n      dup5\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":15097:15099  to */\n      dup5\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":15101:15108  tokenId */\n      dup5\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":15110:15115  _data */\n      dup5\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":15060:15090  _checkContractOnERC721Received */\n      tag_153\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":15060:15116  _checkContractOnERC721Received(from, to, tokenId, _data) */\n      jump\t// in\n    tag_152:\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":15055:15200  if (!_checkContractOnERC721Received(from, to, tokenId, _data)) {... */\n      tag_154\n      jumpi\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":15144:15184  TransferToNonERC721ReceiverImplementer() */\n      mload(0x40)\n      0xd1a57ed600000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":15055:15200  if (!_checkContractOnERC721Received(from, to, tokenId, _data)) {... */\n    tag_154:\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":15017:15200  if (to.code.length != 0)... */\n    tag_151:\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":14808:15207  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":12032:12350  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_73:\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":12105:12118  string memory */\n      0x60\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":12136:12152  _exists(tokenId) */\n      tag_156\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":12144:12151  tokenId */\n      dup3\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":12136:12143  _exists */\n      tag_92\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":12136:12152  _exists(tokenId) */\n      jump\t// in\n    tag_156:\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":12131:12190  if (!_exists(tokenId)) revert URIQueryForNonexistentToken() */\n      tag_157\n      jumpi\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":12161:12190  URIQueryForNonexistentToken() */\n      mload(0x40)\n      0xa14c4b5000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":12131:12190  if (!_exists(tokenId)) revert URIQueryForNonexistentToken() */\n    tag_157:\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":12203:12224  string memory baseURI */\n      0x00\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":12227:12237  _baseURI() */\n      tag_158\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":12227:12235  _baseURI */\n      tag_159\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":12227:12237  _baseURI() */\n      jump\t// in\n    tag_158:\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":12203:12237  string memory baseURI = _baseURI() */\n      swap1\n      pop\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":12280:12281  0 */\n      0x00\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":12261:12268  baseURI */\n      dup2\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":12255:12276  bytes(baseURI).length */\n      mload\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":12255:12281  bytes(baseURI).length != 0 */\n      sub\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":12255:12342  bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, _toString(tokenId))) : '' */\n      tag_160\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_161)\n    tag_160:\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":12308:12315  baseURI */\n      dup1\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":12317:12335  _toString(tokenId) */\n      tag_162\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":12327:12334  tokenId */\n      dup5\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":12317:12326  _toString */\n      tag_163\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":12317:12335  _toString(tokenId) */\n      jump\t// in\n    tag_162:\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":12291:12336  abi.encodePacked(baseURI, _toString(tokenId)) */\n      add(0x20, mload(0x40))\n      tag_164\n      swap3\n      swap2\n      swap1\n      tag_165\n      jump\t// in\n    tag_164:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":12255:12342  bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, _toString(tokenId))) : '' */\n    tag_161:\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":12248:12342  return bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, _toString(tokenId))) : '' */\n      swap2\n      pop\n      pop\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":12032:12350  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":14317:14481  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n    tag_78:\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":14414:14418  bool */\n      0x00\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":14438:14456  _operatorApprovals */\n      0x07\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":14438:14463  _operatorApprovals[owner] */\n      0x00\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":14457:14462  owner */\n      dup5\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":14438:14463  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":14438:14473  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":14464:14472  operator */\n      dup4\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":14438:14473  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":14431:14473  return _operatorApprovals[owner][operator] */\n      swap1\n      pop\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":14317:14481  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":15462:15743  function _exists(uint256 tokenId) internal view virtual returns (bool) {... */\n    tag_92:\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":15527:15531  bool */\n      0x00\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":15583:15590  tokenId */\n      dup2\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":15564:15579  _startTokenId() */\n      tag_168\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":15564:15577  _startTokenId */\n      tag_104\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":15564:15579  _startTokenId() */\n      jump\t// in\n    tag_168:\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":15564:15590  _startTokenId() <= tokenId */\n      gt\n      iszero\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":15564:15630  _startTokenId() <= tokenId &&... */\n      dup1\n      iszero\n      tag_169\n      jumpi\n      pop\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":15617:15630  _currentIndex */\n      sload(0x00)\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":15607:15614  tokenId */\n      dup3\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":15607:15630  tokenId < _currentIndex */\n      lt\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":15564:15630  _startTokenId() <= tokenId &&... */\n    tag_169:\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":15564:15716  _startTokenId() <= tokenId &&... */\n      dup1\n      iszero\n      tag_170\n      jumpi\n      pop\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":15715:15716  0 */\n      0x00\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":1932:1940  1 << 224 */\n      0x0100000000000000000000000000000000000000000000000000000000\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":15668:15685  _packedOwnerships */\n      0x04\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":15668:15694  _packedOwnerships[tokenId] */\n      0x00\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":15686:15693  tokenId */\n      dup6\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":15668:15694  _packedOwnerships[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":15668:15711  _packedOwnerships[tokenId] & BITMASK_BURNED */\n      and\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":15668:15716  _packedOwnerships[tokenId] & BITMASK_BURNED == 0 */\n      eq\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":15564:15716  _startTokenId() <= tokenId &&... */\n    tag_170:\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":15544:15716  return... */\n      swap1\n      pop\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":15462:15743  function _exists(uint256 tokenId) internal view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":33891:33996  function _msgSenderERC721A() internal view virtual returns (address) {... */\n    tag_97:\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":33951:33958  address */\n      0x00\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":33978:33988  msg.sender */\n      caller\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":33971:33988  return msg.sender */\n      swap1\n      pop\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":33891:33996  function _msgSenderERC721A() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":4515:4607  function _startTokenId() internal view virtual returns (uint256) {... */\n    tag_104:\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":4571:4578  uint256 */\n      0x00\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":4515:4607  function _startTokenId() internal view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":8362:9491  function _packedOwnershipOf(uint256 tokenId) private view returns (uint256) {... */\n    tag_107:\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":8429:8436  uint256 */\n      0x00\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":8449:8461  uint256 curr */\n      dup1\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":8464:8471  tokenId */\n      dup3\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":8449:8471  uint256 curr = tokenId */\n      swap1\n      pop\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":8532:8536  curr */\n      dup1\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":8513:8528  _startTokenId() */\n      tag_174\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":8513:8526  _startTokenId */\n      tag_104\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":8513:8528  _startTokenId() */\n      jump\t// in\n    tag_174:\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":8513:8536  _startTokenId() <= curr */\n      gt\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":8509:9424  if (_startTokenId() <= curr)... */\n      tag_175\n      jumpi\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":8566:8579  _currentIndex */\n      sload(0x00)\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":8559:8563  curr */\n      dup2\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":8559:8579  curr < _currentIndex */\n      lt\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":8555:9424  if (curr < _currentIndex) {... */\n      iszero\n      tag_176\n      jumpi\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":8604:8618  uint256 packed */\n      0x00\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":8621:8638  _packedOwnerships */\n      0x04\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":8621:8644  _packedOwnerships[curr] */\n      0x00\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":8639:8643  curr */\n      dup4\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":8621:8644  _packedOwnerships[curr] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":8604:8644  uint256 packed = _packedOwnerships[curr] */\n      swap1\n      pop\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":8737:8738  0 */\n      0x00\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":1932:1940  1 << 224 */\n      0x0100000000000000000000000000000000000000000000000000000000\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":8710:8716  packed */\n      dup3\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":8710:8733  packed & BITMASK_BURNED */\n      and\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":8710:8738  packed & BITMASK_BURNED == 0 */\n      sub\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":8706:9405  if (packed & BITMASK_BURNED == 0) {... */\n      tag_177\n      jumpi\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":9229:9342  while (packed == 0) {... */\n    tag_178:\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":9246:9247  0 */\n      0x00\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":9236:9242  packed */\n      dup2\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":9236:9247  packed == 0 */\n      sub\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":9229:9342  while (packed == 0) {... */\n      tag_179\n      jumpi\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":9289:9306  _packedOwnerships */\n      0x04\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":9289:9314  _packedOwnerships[--curr] */\n      0x00\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":9307:9313  --curr */\n      dup4\n      0x01\n      swap1\n      sub\n      swap4\n      pop\n      dup4\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":9289:9314  _packedOwnerships[--curr] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":9280:9314  packed = _packedOwnerships[--curr] */\n      swap1\n      pop\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":9229:9342  while (packed == 0) {... */\n      jump(tag_178)\n    tag_179:\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":9375:9381  packed */\n      dup1\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":9368:9381  return packed */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_173)\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":8706:9405  if (packed & BITMASK_BURNED == 0) {... */\n    tag_177:\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":8581:9424  {... */\n      pop\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":8555:9424  if (curr < _currentIndex) {... */\n    tag_176:\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":8509:9424  if (_startTokenId() <= curr)... */\n    tag_175:\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":9452:9483  OwnerQueryForNonexistentToken() */\n      mload(0x40)\n      0xdf2d9b4200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":8362:9491  function _packedOwnershipOf(uint256 tokenId) private view returns (uint256) {... */\n    tag_173:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":21303:21775  function _getApprovedAddress(uint256 tokenId)... */\n    tag_110:\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":21398:21425  uint256 approvedAddressSlot */\n      0x00\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":21427:21450  address approvedAddress */\n      dup1\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":21468:21506  TokenApprovalRef storage tokenApproval */\n      0x00\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":21509:21524  _tokenApprovals */\n      0x06\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":21509:21533  _tokenApprovals[tokenId] */\n      0x00\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":21525:21532  tokenId */\n      dup6\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":21509:21533  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":21468:21533  TokenApprovalRef storage tokenApproval = _tokenApprovals[tokenId] */\n      swap1\n      pop\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":21680:21698  tokenApproval.slot */\n      dup1\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":21657:21698  approvedAddressSlot := tokenApproval.slot */\n      swap3\n      pop\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":21737:21756  approvedAddressSlot */\n      dup3\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":21731:21757  sload(approvedAddressSlot) */\n      sload\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":21712:21757  approvedAddress := sload(approvedAddressSlot) */\n      swap2\n      pop\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":21642:21768  {... */\n      pop\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":21303:21775  function _getApprovedAddress(uint256 tokenId)... */\n      swap2\n      pop\n      swap2\n      jump\t// out\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":21888:22533  function _isOwnerOrApproved(... */\n    tag_113:\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":22030:22041  bool result */\n      0x00\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":22192:22207  BITMASK_ADDRESS */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":22186:22190  from */\n      dup4\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":22182:22208  and(from, BITMASK_ADDRESS) */\n      and\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":22174:22208  from := and(from, BITMASK_ADDRESS) */\n      swap3\n      pop\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":22351:22366  BITMASK_ADDRESS */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":22340:22349  msgSender */\n      dup3\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":22336:22367  and(msgSender, BITMASK_ADDRESS) */\n      and\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":22323:22367  msgSender := and(msgSender, BITMASK_ADDRESS) */\n      swap2\n      pop\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":22498:22513  approvedAddress */\n      dup4\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":22487:22496  msgSender */\n      dup3\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":22484:22514  eq(msgSender, approvedAddress) */\n      eq\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":22477:22481  from */\n      dup4\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":22466:22475  msgSender */\n      dup4\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":22463:22482  eq(msgSender, from) */\n      eq\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":22460:22515  or(eq(msgSender, from), eq(msgSender, approvedAddress)) */\n      or\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":22450:22515  result := or(eq(msgSender, from), eq(msgSender, approvedAddress)) */\n      swap1\n      pop\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":21888:22533  function _isOwnerOrApproved(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":32724:32883  function _beforeTokenTransfers(... */\n    tag_120:\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":31036:31345  function _nextExtraData(... */\n    tag_124:\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":31171:31178  uint256 */\n      0x00\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":31191:31207  uint24 extraData */\n      dup1\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":2333:2336  232 */\n      0xe8\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":31217:31236  prevOwnershipPacked */\n      dup4\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":31217:31257  prevOwnershipPacked >> BITPOS_EXTRA_DATA */\n      swap1\n      shr\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":31191:31258  uint24 extraData = uint24(prevOwnershipPacked >> BITPOS_EXTRA_DATA) */\n      swap1\n      pop\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":2333:2336  232 */\n      0xe8\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":31284:31315  _extraData(from, to, extraData) */\n      tag_184\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":31295:31299  from */\n      dup7\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":31301:31303  to */\n      dup7\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":31305:31314  extraData */\n      dup5\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":31284:31294  _extraData */\n      tag_185\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":31284:31315  _extraData(from, to, extraData) */\n      jump\t// in\n    tag_184:\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":31276:31316  uint256(_extraData(from, to, extraData)) */\n      0xffffff\n      and\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":31276:31337  uint256(_extraData(from, to, extraData)) << BITPOS_EXTRA_DATA */\n      swap1\n      shl\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":31269:31337  return uint256(_extraData(from, to, extraData)) << BITPOS_EXTRA_DATA */\n      swap2\n      pop\n      pop\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":31036:31345  function _nextExtraData(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":10960:11407  function _packOwnershipData(address owner, uint256 flags) private view returns (uint256 result) {... */\n    tag_125:\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":11040:11054  uint256 result */\n      0x00\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":11208:11223  BITMASK_ADDRESS */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":11201:11206  owner */\n      dup4\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":11197:11224  and(owner, BITMASK_ADDRESS) */\n      and\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":11188:11224  owner := and(owner, BITMASK_ADDRESS) */\n      swap3\n      pop\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":11382:11387  flags */\n      dup2\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":11368:11379  timestamp() */\n      timestamp\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":11344:11366  BITPOS_START_TIMESTAMP */\n      0xa0\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":11340:11380  shl(BITPOS_START_TIMESTAMP, timestamp()) */\n      shl\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":11337:11388  or(shl(BITPOS_START_TIMESTAMP, timestamp()), flags) */\n      or\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":11330:11335  owner */\n      dup4\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":11327:11389  or(owner, or(shl(BITPOS_START_TIMESTAMP, timestamp()), flags)) */\n      or\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":11317:11389  result := or(owner, or(shl(BITPOS_START_TIMESTAMP, timestamp()), flags)) */\n      swap1\n      pop\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":10960:11407  function _packOwnershipData(address owner, uint256 flags) private view returns (uint256 result) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":33542:33700  function _afterTokenTransfers(... */\n    tag_130:\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":29538:30254  function _checkContractOnERC721Received(... */\n    tag_153:\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":29701:29705  bool */\n      0x00\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":29747:29749  to */\n      dup4\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":29722:29767  ERC721A__IERC721Receiver(to).onERC721Received */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x150b7a02\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":29768:29787  _msgSenderERC721A() */\n      tag_189\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":29768:29785  _msgSenderERC721A */\n      tag_97\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":29768:29787  _msgSenderERC721A() */\n      jump\t// in\n    tag_189:\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":29789:29793  from */\n      dup8\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":29795:29802  tokenId */\n      dup7\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":29804:29809  _data */\n      dup7\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":29722:29810  ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_190\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_191\n      jump\t// in\n    tag_190:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_192\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_193\n      swap2\n      swap1\n      tag_194\n      jump\t// in\n    tag_193:\n      0x01\n    tag_192:\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":29718:30247  try ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) returns (... */\n      tag_195\n      jumpi\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_200\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_199)\n    tag_200:\n      0x60\n      swap2\n      pop\n    tag_199:\n      pop\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":30022:30023  0 */\n      0x00\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":30005:30011  reason */\n      dup2\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":30005:30018  reason.length */\n      mload\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":30005:30023  reason.length == 0 */\n      sub\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":30001:30236  if (reason.length == 0) {... */\n      tag_201\n      jumpi\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":30051:30091  TransferToNonERC721ReceiverImplementer() */\n      mload(0x40)\n      0xd1a57ed600000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":30001:30236  if (reason.length == 0) {... */\n    tag_201:\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":30194:30200  reason */\n      dup1\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":30188:30201  mload(reason) */\n      mload\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":30179:30185  reason */\n      dup2\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":30175:30177  32 */\n      0x20\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":30171:30186  add(32, reason) */\n      add\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":30164:30202  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":29718:30247  try ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) returns (... */\n    tag_195:\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":29891:29945  ERC721A__IERC721Receiver(to).onERC721Received.selector */\n      shl(0xe0, 0x150b7a02)\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":29881:29945  retval == ERC721A__IERC721Receiver(to).onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":29881:29887  retval */\n      dup2\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":29881:29945  retval == ERC721A__IERC721Receiver(to).onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":29874:29945  return retval == ERC721A__IERC721Receiver(to).onERC721Received.selector */\n      swap2\n      pop\n      pop\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":29538:30254  function _checkContractOnERC721Received(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":12602:12696  function _baseURI() internal view virtual returns (string memory) {... */\n    tag_159:\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":12653:12666  string memory */\n      0x60\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":12679:12688  return '' */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":12602:12696  function _baseURI() internal view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":34102:36070  function _toString(uint256 value) internal pure virtual returns (string memory ptr) {... */\n    tag_163:\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":34167:34184  string memory ptr */\n      0x60\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":34586:34589  128 */\n      0x80\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":34579:34583  0x40 */\n      0x40\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":34573:34584  mload(0x40) */\n      mload\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":34569:34590  add(mload(0x40), 128) */\n      add\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":34562:34590  ptr := add(mload(0x40), 128) */\n      swap1\n      pop\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":34677:34680  ptr */\n      dup1\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":34671:34675  0x40 */\n      0x40\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":34664:34681  mstore(0x40, ptr) */\n      mstore\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":34783:34786  ptr */\n      dup1\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":35239:35244  value */\n      dup3\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":35369:35370  1 */\n      0x01\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":35364:35367  ptr */\n      dup4\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":35360:35371  sub(ptr, 1) */\n      sub\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":35353:35371  ptr := sub(ptr, 1) */\n      swap3\n      pop\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":35506:35508  10 */\n      0x0a\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":35500:35504  temp */\n      dup2\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":35496:35509  mod(temp, 10) */\n      mod\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":35492:35494  48 */\n      0x30\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":35488:35510  add(48, mod(temp, 10)) */\n      add\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":35483:35486  ptr */\n      dup4\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":35475:35511  mstore8(ptr, add(48, mod(temp, 10))) */\n      mstore8\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":35547:35549  10 */\n      0x0a\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":35541:35545  temp */\n      dup2\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":35537:35550  div(temp, 10) */\n      div\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":35529:35550  temp := div(temp, 10) */\n      swap1\n      pop\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":35131:35828  for {... */\n    tag_206:\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":35566:35570  temp */\n      dup1\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":35131:35828  for {... */\n      iszero\n      tag_208\n      jumpi\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":35757:35758  1 */\n      0x01\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":35752:35755  ptr */\n      dup4\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":35748:35759  sub(ptr, 1) */\n      sub\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":35741:35759  ptr := sub(ptr, 1) */\n      swap3\n      pop\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":35808:35810  10 */\n      0x0a\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":35802:35806  temp */\n      dup2\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":35798:35811  mod(temp, 10) */\n      mod\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":35794:35796  48 */\n      0x30\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":35790:35812  add(48, mod(temp, 10)) */\n      add\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":35785:35788  ptr */\n      dup4\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":35777:35813  mstore8(ptr, add(48, mod(temp, 10))) */\n      mstore8\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":35661:35663  10 */\n      0x0a\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":35655:35659  temp */\n      dup2\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":35651:35664  div(temp, 10) */\n      div\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":35643:35664  temp := div(temp, 10) */\n      swap1\n      pop\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":35131:35828  for {... */\n      jump(tag_206)\n    tag_208:\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":35135:35565  {... */\n      pop\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":35867:35870  ptr */\n      dup2\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":35862:35865  end */\n      dup2\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":35858:35871  sub(end, ptr) */\n      sub\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":35982:35984  32 */\n      0x20\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":35977:35980  ptr */\n      dup4\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":35973:35985  sub(ptr, 32) */\n      sub\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":35966:35985  ptr := sub(ptr, 32) */\n      swap3\n      pop\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":36045:36051  length */\n      dup1\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":36040:36043  ptr */\n      dup4\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":36033:36052  mstore(ptr, length) */\n      mstore\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":34206:36063  {... */\n      pop\n      pop\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":34102:36070  function _toString(uint256 value) internal pure virtual returns (string memory ptr) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":31921:32068  function _extraData(... */\n    tag_185:\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":32058:32064  uint24 */\n      0x00\n        /* \"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":31921:32068  function _extraData(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_210:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_211:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_212:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_213:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_214:\n        /* \"#utility.yul\":561:584   */\n      tag_256\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_213\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_257\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_257:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_215:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_259\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_214\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_22:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_261\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_262\n      tag_211\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":833:952   */\n    tag_261:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_263\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_215\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_216:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_217:\n        /* \"#utility.yul\":1268:1289   */\n      tag_266\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_216\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_25:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_268\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_217\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1617   */\n    tag_218:\n        /* \"#utility.yul\":1570:1576   */\n      0x00\n        /* \"#utility.yul\":1604:1609   */\n      dup2\n        /* \"#utility.yul\":1598:1610   */\n      mload\n        /* \"#utility.yul\":1588:1610   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1617   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1623:1792   */\n    tag_219:\n        /* \"#utility.yul\":1707:1718   */\n      0x00\n        /* \"#utility.yul\":1741:1747   */\n      dup3\n        /* \"#utility.yul\":1736:1739   */\n      dup3\n        /* \"#utility.yul\":1729:1748   */\n      mstore\n        /* \"#utility.yul\":1781:1785   */\n      0x20\n        /* \"#utility.yul\":1776:1779   */\n      dup3\n        /* \"#utility.yul\":1772:1786   */\n      add\n        /* \"#utility.yul\":1757:1786   */\n      swap1\n      pop\n        /* \"#utility.yul\":1623:1792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1798:2105   */\n    tag_220:\n        /* \"#utility.yul\":1866:1867   */\n      0x00\n        /* \"#utility.yul\":1876:1989   */\n    tag_272:\n        /* \"#utility.yul\":1890:1896   */\n      dup4\n        /* \"#utility.yul\":1887:1888   */\n      dup2\n        /* \"#utility.yul\":1884:1897   */\n      lt\n        /* \"#utility.yul\":1876:1989   */\n      iszero\n      tag_274\n      jumpi\n        /* \"#utility.yul\":1975:1976   */\n      dup1\n        /* \"#utility.yul\":1970:1973   */\n      dup3\n        /* \"#utility.yul\":1966:1977   */\n      add\n        /* \"#utility.yul\":1960:1978   */\n      mload\n        /* \"#utility.yul\":1956:1957   */\n      dup2\n        /* \"#utility.yul\":1951:1954   */\n      dup5\n        /* \"#utility.yul\":1947:1958   */\n      add\n        /* \"#utility.yul\":1940:1979   */\n      mstore\n        /* \"#utility.yul\":1912:1914   */\n      0x20\n        /* \"#utility.yul\":1909:1910   */\n      dup2\n        /* \"#utility.yul\":1905:1915   */\n      add\n        /* \"#utility.yul\":1900:1915   */\n      swap1\n      pop\n        /* \"#utility.yul\":1876:1989   */\n      jump(tag_272)\n    tag_274:\n        /* \"#utility.yul\":2007:2013   */\n      dup4\n        /* \"#utility.yul\":2004:2005   */\n      dup2\n        /* \"#utility.yul\":2001:2014   */\n      gt\n        /* \"#utility.yul\":1998:2099   */\n      iszero\n      tag_275\n      jumpi\n        /* \"#utility.yul\":2087:2088   */\n      0x00\n        /* \"#utility.yul\":2078:2084   */\n      dup5\n        /* \"#utility.yul\":2073:2076   */\n      dup5\n        /* \"#utility.yul\":2069:2085   */\n      add\n        /* \"#utility.yul\":2062:2089   */\n      mstore\n        /* \"#utility.yul\":1998:2099   */\n    tag_275:\n        /* \"#utility.yul\":1847:2105   */\n      pop\n        /* \"#utility.yul\":1798:2105   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2111:2213   */\n    tag_221:\n        /* \"#utility.yul\":2152:2158   */\n      0x00\n        /* \"#utility.yul\":2203:2205   */\n      0x1f\n        /* \"#utility.yul\":2199:2206   */\n      not\n        /* \"#utility.yul\":2194:2196   */\n      0x1f\n        /* \"#utility.yul\":2187:2192   */\n      dup4\n        /* \"#utility.yul\":2183:2197   */\n      add\n        /* \"#utility.yul\":2179:2207   */\n      and\n        /* \"#utility.yul\":2169:2207   */\n      swap1\n      pop\n        /* \"#utility.yul\":2111:2213   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2219:2583   */\n    tag_222:\n        /* \"#utility.yul\":2307:2310   */\n      0x00\n        /* \"#utility.yul\":2335:2374   */\n      tag_278\n        /* \"#utility.yul\":2368:2373   */\n      dup3\n        /* \"#utility.yul\":2335:2374   */\n      tag_218\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":2390:2461   */\n      tag_279\n        /* \"#utility.yul\":2454:2460   */\n      dup2\n        /* \"#utility.yul\":2449:2452   */\n      dup6\n        /* \"#utility.yul\":2390:2461   */\n      tag_219\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":2383:2461   */\n      swap4\n      pop\n        /* \"#utility.yul\":2470:2522   */\n      tag_280\n        /* \"#utility.yul\":2515:2521   */\n      dup2\n        /* \"#utility.yul\":2510:2513   */\n      dup6\n        /* \"#utility.yul\":2503:2507   */\n      0x20\n        /* \"#utility.yul\":2496:2501   */\n      dup7\n        /* \"#utility.yul\":2492:2508   */\n      add\n        /* \"#utility.yul\":2470:2522   */\n      tag_220\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":2547:2576   */\n      tag_281\n        /* \"#utility.yul\":2569:2575   */\n      dup2\n        /* \"#utility.yul\":2547:2576   */\n      tag_221\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":2542:2545   */\n      dup5\n        /* \"#utility.yul\":2538:2577   */\n      add\n        /* \"#utility.yul\":2531:2577   */\n      swap2\n      pop\n        /* \"#utility.yul\":2311:2583   */\n      pop\n        /* \"#utility.yul\":2219:2583   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2589:2902   */\n    tag_29:\n        /* \"#utility.yul\":2702:2706   */\n      0x00\n        /* \"#utility.yul\":2740:2742   */\n      0x20\n        /* \"#utility.yul\":2729:2738   */\n      dup3\n        /* \"#utility.yul\":2725:2743   */\n      add\n        /* \"#utility.yul\":2717:2743   */\n      swap1\n      pop\n        /* \"#utility.yul\":2789:2798   */\n      dup2\n        /* \"#utility.yul\":2783:2787   */\n      dup2\n        /* \"#utility.yul\":2779:2799   */\n      sub\n        /* \"#utility.yul\":2775:2776   */\n      0x00\n        /* \"#utility.yul\":2764:2773   */\n      dup4\n        /* \"#utility.yul\":2760:2777   */\n      add\n        /* \"#utility.yul\":2753:2800   */\n      mstore\n        /* \"#utility.yul\":2817:2895   */\n      tag_283\n        /* \"#utility.yul\":2890:2894   */\n      dup2\n        /* \"#utility.yul\":2881:2887   */\n      dup5\n        /* \"#utility.yul\":2817:2895   */\n      tag_222\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":2809:2895   */\n      swap1\n      pop\n        /* \"#utility.yul\":2589:2902   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2908:2985   */\n    tag_223:\n        /* \"#utility.yul\":2945:2952   */\n      0x00\n        /* \"#utility.yul\":2974:2979   */\n      dup2\n        /* \"#utility.yul\":2963:2979   */\n      swap1\n      pop\n        /* \"#utility.yul\":2908:2985   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2991:3113   */\n    tag_224:\n        /* \"#utility.yul\":3064:3088   */\n      tag_286\n        /* \"#utility.yul\":3082:3087   */\n      dup2\n        /* \"#utility.yul\":3064:3088   */\n      tag_223\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":3057:3062   */\n      dup2\n        /* \"#utility.yul\":3054:3089   */\n      eq\n        /* \"#utility.yul\":3044:3107   */\n      tag_287\n      jumpi\n        /* \"#utility.yul\":3103:3104   */\n      0x00\n        /* \"#utility.yul\":3100:3101   */\n      dup1\n        /* \"#utility.yul\":3093:3105   */\n      revert\n        /* \"#utility.yul\":3044:3107   */\n    tag_287:\n        /* \"#utility.yul\":2991:3113   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3119:3258   */\n    tag_225:\n        /* \"#utility.yul\":3165:3170   */\n      0x00\n        /* \"#utility.yul\":3203:3209   */\n      dup2\n        /* \"#utility.yul\":3190:3210   */\n      calldataload\n        /* \"#utility.yul\":3181:3210   */\n      swap1\n      pop\n        /* \"#utility.yul\":3219:3252   */\n      tag_289\n        /* \"#utility.yul\":3246:3251   */\n      dup2\n        /* \"#utility.yul\":3219:3252   */\n      tag_224\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":3119:3258   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3264:3593   */\n    tag_32:\n        /* \"#utility.yul\":3323:3329   */\n      0x00\n        /* \"#utility.yul\":3372:3374   */\n      0x20\n        /* \"#utility.yul\":3360:3369   */\n      dup3\n        /* \"#utility.yul\":3351:3358   */\n      dup5\n        /* \"#utility.yul\":3347:3370   */\n      sub\n        /* \"#utility.yul\":3343:3375   */\n      slt\n        /* \"#utility.yul\":3340:3459   */\n      iszero\n      tag_291\n      jumpi\n        /* \"#utility.yul\":3378:3457   */\n      tag_292\n      tag_211\n      jump\t// in\n    tag_292:\n        /* \"#utility.yul\":3340:3459   */\n    tag_291:\n        /* \"#utility.yul\":3498:3499   */\n      0x00\n        /* \"#utility.yul\":3523:3576   */\n      tag_293\n        /* \"#utility.yul\":3568:3575   */\n      dup5\n        /* \"#utility.yul\":3559:3565   */\n      dup3\n        /* \"#utility.yul\":3548:3557   */\n      dup6\n        /* \"#utility.yul\":3544:3566   */\n      add\n        /* \"#utility.yul\":3523:3576   */\n      tag_225\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":3513:3576   */\n      swap2\n      pop\n        /* \"#utility.yul\":3469:3586   */\n      pop\n        /* \"#utility.yul\":3264:3593   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3599:3725   */\n    tag_226:\n        /* \"#utility.yul\":3636:3643   */\n      0x00\n        /* \"#utility.yul\":3676:3718   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3669:3674   */\n      dup3\n        /* \"#utility.yul\":3665:3719   */\n      and\n        /* \"#utility.yul\":3654:3719   */\n      swap1\n      pop\n        /* \"#utility.yul\":3599:3725   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3731:3827   */\n    tag_227:\n        /* \"#utility.yul\":3768:3775   */\n      0x00\n        /* \"#utility.yul\":3797:3821   */\n      tag_296\n        /* \"#utility.yul\":3815:3820   */\n      dup3\n        /* \"#utility.yul\":3797:3821   */\n      tag_226\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":3786:3821   */\n      swap1\n      pop\n        /* \"#utility.yul\":3731:3827   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3833:3951   */\n    tag_228:\n        /* \"#utility.yul\":3920:3944   */\n      tag_298\n        /* \"#utility.yul\":3938:3943   */\n      dup2\n        /* \"#utility.yul\":3920:3944   */\n      tag_227\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":3915:3918   */\n      dup3\n        /* \"#utility.yul\":3908:3945   */\n      mstore\n        /* \"#utility.yul\":3833:3951   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3957:4179   */\n    tag_35:\n        /* \"#utility.yul\":4050:4054   */\n      0x00\n        /* \"#utility.yul\":4088:4090   */\n      0x20\n        /* \"#utility.yul\":4077:4086   */\n      dup3\n        /* \"#utility.yul\":4073:4091   */\n      add\n        /* \"#utility.yul\":4065:4091   */\n      swap1\n      pop\n        /* \"#utility.yul\":4101:4172   */\n      tag_300\n        /* \"#utility.yul\":4169:4170   */\n      0x00\n        /* \"#utility.yul\":4158:4167   */\n      dup4\n        /* \"#utility.yul\":4154:4171   */\n      add\n        /* \"#utility.yul\":4145:4151   */\n      dup5\n        /* \"#utility.yul\":4101:4172   */\n      tag_228\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":3957:4179   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4185:4307   */\n    tag_229:\n        /* \"#utility.yul\":4258:4282   */\n      tag_302\n        /* \"#utility.yul\":4276:4281   */\n      dup2\n        /* \"#utility.yul\":4258:4282   */\n      tag_227\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":4251:4256   */\n      dup2\n        /* \"#utility.yul\":4248:4283   */\n      eq\n        /* \"#utility.yul\":4238:4301   */\n      tag_303\n      jumpi\n        /* \"#utility.yul\":4297:4298   */\n      0x00\n        /* \"#utility.yul\":4294:4295   */\n      dup1\n        /* \"#utility.yul\":4287:4299   */\n      revert\n        /* \"#utility.yul\":4238:4301   */\n    tag_303:\n        /* \"#utility.yul\":4185:4307   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4313:4452   */\n    tag_230:\n        /* \"#utility.yul\":4359:4364   */\n      0x00\n        /* \"#utility.yul\":4397:4403   */\n      dup2\n        /* \"#utility.yul\":4384:4404   */\n      calldataload\n        /* \"#utility.yul\":4375:4404   */\n      swap1\n      pop\n        /* \"#utility.yul\":4413:4446   */\n      tag_305\n        /* \"#utility.yul\":4440:4445   */\n      dup2\n        /* \"#utility.yul\":4413:4446   */\n      tag_229\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":4313:4452   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4458:4932   */\n    tag_38:\n        /* \"#utility.yul\":4526:4532   */\n      0x00\n        /* \"#utility.yul\":4534:4540   */\n      dup1\n        /* \"#utility.yul\":4583:4585   */\n      0x40\n        /* \"#utility.yul\":4571:4580   */\n      dup4\n        /* \"#utility.yul\":4562:4569   */\n      dup6\n        /* \"#utility.yul\":4558:4581   */\n      sub\n        /* \"#utility.yul\":4554:4586   */\n      slt\n        /* \"#utility.yul\":4551:4670   */\n      iszero\n      tag_307\n      jumpi\n        /* \"#utility.yul\":4589:4668   */\n      tag_308\n      tag_211\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":4551:4670   */\n    tag_307:\n        /* \"#utility.yul\":4709:4710   */\n      0x00\n        /* \"#utility.yul\":4734:4787   */\n      tag_309\n        /* \"#utility.yul\":4779:4786   */\n      dup6\n        /* \"#utility.yul\":4770:4776   */\n      dup3\n        /* \"#utility.yul\":4759:4768   */\n      dup7\n        /* \"#utility.yul\":4755:4777   */\n      add\n        /* \"#utility.yul\":4734:4787   */\n      tag_230\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":4724:4787   */\n      swap3\n      pop\n        /* \"#utility.yul\":4680:4797   */\n      pop\n        /* \"#utility.yul\":4836:4838   */\n      0x20\n        /* \"#utility.yul\":4862:4915   */\n      tag_310\n        /* \"#utility.yul\":4907:4914   */\n      dup6\n        /* \"#utility.yul\":4898:4904   */\n      dup3\n        /* \"#utility.yul\":4887:4896   */\n      dup7\n        /* \"#utility.yul\":4883:4905   */\n      add\n        /* \"#utility.yul\":4862:4915   */\n      tag_225\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":4852:4915   */\n      swap2\n      pop\n        /* \"#utility.yul\":4807:4925   */\n      pop\n        /* \"#utility.yul\":4458:4932   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4938:5056   */\n    tag_231:\n        /* \"#utility.yul\":5025:5049   */\n      tag_312\n        /* \"#utility.yul\":5043:5048   */\n      dup2\n        /* \"#utility.yul\":5025:5049   */\n      tag_223\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":5020:5023   */\n      dup3\n        /* \"#utility.yul\":5013:5050   */\n      mstore\n        /* \"#utility.yul\":4938:5056   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5062:5284   */\n    tag_43:\n        /* \"#utility.yul\":5155:5159   */\n      0x00\n        /* \"#utility.yul\":5193:5195   */\n      0x20\n        /* \"#utility.yul\":5182:5191   */\n      dup3\n        /* \"#utility.yul\":5178:5196   */\n      add\n        /* \"#utility.yul\":5170:5196   */\n      swap1\n      pop\n        /* \"#utility.yul\":5206:5277   */\n      tag_314\n        /* \"#utility.yul\":5274:5275   */\n      0x00\n        /* \"#utility.yul\":5263:5272   */\n      dup4\n        /* \"#utility.yul\":5259:5276   */\n      add\n        /* \"#utility.yul\":5250:5256   */\n      dup5\n        /* \"#utility.yul\":5206:5277   */\n      tag_231\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":5062:5284   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5290:5909   */\n    tag_46:\n        /* \"#utility.yul\":5367:5373   */\n      0x00\n        /* \"#utility.yul\":5375:5381   */\n      dup1\n        /* \"#utility.yul\":5383:5389   */\n      0x00\n        /* \"#utility.yul\":5432:5434   */\n      0x60\n        /* \"#utility.yul\":5420:5429   */\n      dup5\n        /* \"#utility.yul\":5411:5418   */\n      dup7\n        /* \"#utility.yul\":5407:5430   */\n      sub\n        /* \"#utility.yul\":5403:5435   */\n      slt\n        /* \"#utility.yul\":5400:5519   */\n      iszero\n      tag_316\n      jumpi\n        /* \"#utility.yul\":5438:5517   */\n      tag_317\n      tag_211\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":5400:5519   */\n    tag_316:\n        /* \"#utility.yul\":5558:5559   */\n      0x00\n        /* \"#utility.yul\":5583:5636   */\n      tag_318\n        /* \"#utility.yul\":5628:5635   */\n      dup7\n        /* \"#utility.yul\":5619:5625   */\n      dup3\n        /* \"#utility.yul\":5608:5617   */\n      dup8\n        /* \"#utility.yul\":5604:5626   */\n      add\n        /* \"#utility.yul\":5583:5636   */\n      tag_230\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":5573:5636   */\n      swap4\n      pop\n        /* \"#utility.yul\":5529:5646   */\n      pop\n        /* \"#utility.yul\":5685:5687   */\n      0x20\n        /* \"#utility.yul\":5711:5764   */\n      tag_319\n        /* \"#utility.yul\":5756:5763   */\n      dup7\n        /* \"#utility.yul\":5747:5753   */\n      dup3\n        /* \"#utility.yul\":5736:5745   */\n      dup8\n        /* \"#utility.yul\":5732:5754   */\n      add\n        /* \"#utility.yul\":5711:5764   */\n      tag_230\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":5701:5764   */\n      swap3\n      pop\n        /* \"#utility.yul\":5656:5774   */\n      pop\n        /* \"#utility.yul\":5813:5815   */\n      0x40\n        /* \"#utility.yul\":5839:5892   */\n      tag_320\n        /* \"#utility.yul\":5884:5891   */\n      dup7\n        /* \"#utility.yul\":5875:5881   */\n      dup3\n        /* \"#utility.yul\":5864:5873   */\n      dup8\n        /* \"#utility.yul\":5860:5882   */\n      add\n        /* \"#utility.yul\":5839:5892   */\n      tag_225\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":5829:5892   */\n      swap2\n      pop\n        /* \"#utility.yul\":5784:5902   */\n      pop\n        /* \"#utility.yul\":5290:5909   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5915:6244   */\n    tag_57:\n        /* \"#utility.yul\":5974:5980   */\n      0x00\n        /* \"#utility.yul\":6023:6025   */\n      0x20\n        /* \"#utility.yul\":6011:6020   */\n      dup3\n        /* \"#utility.yul\":6002:6009   */\n      dup5\n        /* \"#utility.yul\":5998:6021   */\n      sub\n        /* \"#utility.yul\":5994:6026   */\n      slt\n        /* \"#utility.yul\":5991:6110   */\n      iszero\n      tag_322\n      jumpi\n        /* \"#utility.yul\":6029:6108   */\n      tag_323\n      tag_211\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":5991:6110   */\n    tag_322:\n        /* \"#utility.yul\":6149:6150   */\n      0x00\n        /* \"#utility.yul\":6174:6227   */\n      tag_324\n        /* \"#utility.yul\":6219:6226   */\n      dup5\n        /* \"#utility.yul\":6210:6216   */\n      dup3\n        /* \"#utility.yul\":6199:6208   */\n      dup6\n        /* \"#utility.yul\":6195:6217   */\n      add\n        /* \"#utility.yul\":6174:6227   */\n      tag_230\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":6164:6227   */\n      swap2\n      pop\n        /* \"#utility.yul\":6120:6237   */\n      pop\n        /* \"#utility.yul\":5915:6244   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6250:6366   */\n    tag_232:\n        /* \"#utility.yul\":6320:6341   */\n      tag_326\n        /* \"#utility.yul\":6335:6340   */\n      dup2\n        /* \"#utility.yul\":6320:6341   */\n      tag_216\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":6313:6318   */\n      dup2\n        /* \"#utility.yul\":6310:6342   */\n      eq\n        /* \"#utility.yul\":6300:6360   */\n      tag_327\n      jumpi\n        /* \"#utility.yul\":6356:6357   */\n      0x00\n        /* \"#utility.yul\":6353:6354   */\n      dup1\n        /* \"#utility.yul\":6346:6358   */\n      revert\n        /* \"#utility.yul\":6300:6360   */\n    tag_327:\n        /* \"#utility.yul\":6250:6366   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6372:6505   */\n    tag_233:\n        /* \"#utility.yul\":6415:6420   */\n      0x00\n        /* \"#utility.yul\":6453:6459   */\n      dup2\n        /* \"#utility.yul\":6440:6460   */\n      calldataload\n        /* \"#utility.yul\":6431:6460   */\n      swap1\n      pop\n        /* \"#utility.yul\":6469:6499   */\n      tag_329\n        /* \"#utility.yul\":6493:6498   */\n      dup2\n        /* \"#utility.yul\":6469:6499   */\n      tag_232\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":6372:6505   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6511:6979   */\n    tag_65:\n        /* \"#utility.yul\":6576:6582   */\n      0x00\n        /* \"#utility.yul\":6584:6590   */\n      dup1\n        /* \"#utility.yul\":6633:6635   */\n      0x40\n        /* \"#utility.yul\":6621:6630   */\n      dup4\n        /* \"#utility.yul\":6612:6619   */\n      dup6\n        /* \"#utility.yul\":6608:6631   */\n      sub\n        /* \"#utility.yul\":6604:6636   */\n      slt\n        /* \"#utility.yul\":6601:6720   */\n      iszero\n      tag_331\n      jumpi\n        /* \"#utility.yul\":6639:6718   */\n      tag_332\n      tag_211\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":6601:6720   */\n    tag_331:\n        /* \"#utility.yul\":6759:6760   */\n      0x00\n        /* \"#utility.yul\":6784:6837   */\n      tag_333\n        /* \"#utility.yul\":6829:6836   */\n      dup6\n        /* \"#utility.yul\":6820:6826   */\n      dup3\n        /* \"#utility.yul\":6809:6818   */\n      dup7\n        /* \"#utility.yul\":6805:6827   */\n      add\n        /* \"#utility.yul\":6784:6837   */\n      tag_230\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":6774:6837   */\n      swap3\n      pop\n        /* \"#utility.yul\":6730:6847   */\n      pop\n        /* \"#utility.yul\":6886:6888   */\n      0x20\n        /* \"#utility.yul\":6912:6962   */\n      tag_334\n        /* \"#utility.yul\":6954:6961   */\n      dup6\n        /* \"#utility.yul\":6945:6951   */\n      dup3\n        /* \"#utility.yul\":6934:6943   */\n      dup7\n        /* \"#utility.yul\":6930:6952   */\n      add\n        /* \"#utility.yul\":6912:6962   */\n      tag_233\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":6902:6962   */\n      swap2\n      pop\n        /* \"#utility.yul\":6857:6972   */\n      pop\n        /* \"#utility.yul\":6511:6979   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6985:7102   */\n    tag_234:\n        /* \"#utility.yul\":7094:7095   */\n      0x00\n        /* \"#utility.yul\":7091:7092   */\n      dup1\n        /* \"#utility.yul\":7084:7096   */\n      revert\n        /* \"#utility.yul\":7108:7225   */\n    tag_235:\n        /* \"#utility.yul\":7217:7218   */\n      0x00\n        /* \"#utility.yul\":7214:7215   */\n      dup1\n        /* \"#utility.yul\":7207:7219   */\n      revert\n        /* \"#utility.yul\":7231:7411   */\n    tag_236:\n        /* \"#utility.yul\":7279:7356   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7276:7277   */\n      0x00\n        /* \"#utility.yul\":7269:7357   */\n      mstore\n        /* \"#utility.yul\":7376:7380   */\n      0x41\n        /* \"#utility.yul\":7373:7374   */\n      0x04\n        /* \"#utility.yul\":7366:7381   */\n      mstore\n        /* \"#utility.yul\":7400:7404   */\n      0x24\n        /* \"#utility.yul\":7397:7398   */\n      0x00\n        /* \"#utility.yul\":7390:7405   */\n      revert\n        /* \"#utility.yul\":7417:7698   */\n    tag_237:\n        /* \"#utility.yul\":7500:7527   */\n      tag_339\n        /* \"#utility.yul\":7522:7526   */\n      dup3\n        /* \"#utility.yul\":7500:7527   */\n      tag_221\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":7492:7498   */\n      dup2\n        /* \"#utility.yul\":7488:7528   */\n      add\n        /* \"#utility.yul\":7630:7636   */\n      dup2\n        /* \"#utility.yul\":7618:7628   */\n      dup2\n        /* \"#utility.yul\":7615:7637   */\n      lt\n        /* \"#utility.yul\":7594:7612   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7582:7592   */\n      dup3\n        /* \"#utility.yul\":7579:7613   */\n      gt\n        /* \"#utility.yul\":7576:7638   */\n      or\n        /* \"#utility.yul\":7573:7661   */\n      iszero\n      tag_340\n      jumpi\n        /* \"#utility.yul\":7641:7659   */\n      tag_341\n      tag_236\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":7573:7661   */\n    tag_340:\n        /* \"#utility.yul\":7681:7691   */\n      dup1\n        /* \"#utility.yul\":7677:7679   */\n      0x40\n        /* \"#utility.yul\":7670:7692   */\n      mstore\n        /* \"#utility.yul\":7460:7698   */\n      pop\n        /* \"#utility.yul\":7417:7698   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7704:7833   */\n    tag_238:\n        /* \"#utility.yul\":7738:7744   */\n      0x00\n        /* \"#utility.yul\":7765:7785   */\n      tag_343\n      tag_210\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":7755:7785   */\n      swap1\n      pop\n        /* \"#utility.yul\":7794:7827   */\n      tag_344\n        /* \"#utility.yul\":7822:7826   */\n      dup3\n        /* \"#utility.yul\":7814:7820   */\n      dup3\n        /* \"#utility.yul\":7794:7827   */\n      tag_237\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":7704:7833   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7839:8146   */\n    tag_239:\n        /* \"#utility.yul\":7900:7904   */\n      0x00\n        /* \"#utility.yul\":7990:8008   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7982:7988   */\n      dup3\n        /* \"#utility.yul\":7979:8009   */\n      gt\n        /* \"#utility.yul\":7976:8032   */\n      iszero\n      tag_346\n      jumpi\n        /* \"#utility.yul\":8012:8030   */\n      tag_347\n      tag_236\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":7976:8032   */\n    tag_346:\n        /* \"#utility.yul\":8050:8079   */\n      tag_348\n        /* \"#utility.yul\":8072:8078   */\n      dup3\n        /* \"#utility.yul\":8050:8079   */\n      tag_221\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":8042:8079   */\n      swap1\n      pop\n        /* \"#utility.yul\":8134:8138   */\n      0x20\n        /* \"#utility.yul\":8128:8132   */\n      dup2\n        /* \"#utility.yul\":8124:8139   */\n      add\n        /* \"#utility.yul\":8116:8139   */\n      swap1\n      pop\n        /* \"#utility.yul\":7839:8146   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8152:8306   */\n    tag_240:\n        /* \"#utility.yul\":8236:8242   */\n      dup3\n        /* \"#utility.yul\":8231:8234   */\n      dup2\n        /* \"#utility.yul\":8226:8229   */\n      dup4\n        /* \"#utility.yul\":8213:8243   */\n      calldatacopy\n        /* \"#utility.yul\":8298:8299   */\n      0x00\n        /* \"#utility.yul\":8289:8295   */\n      dup4\n        /* \"#utility.yul\":8284:8287   */\n      dup4\n        /* \"#utility.yul\":8280:8296   */\n      add\n        /* \"#utility.yul\":8273:8300   */\n      mstore\n        /* \"#utility.yul\":8152:8306   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8312:8722   */\n    tag_241:\n        /* \"#utility.yul\":8389:8394   */\n      0x00\n        /* \"#utility.yul\":8414:8479   */\n      tag_351\n        /* \"#utility.yul\":8430:8478   */\n      tag_352\n        /* \"#utility.yul\":8471:8477   */\n      dup5\n        /* \"#utility.yul\":8430:8478   */\n      tag_239\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":8414:8479   */\n      tag_238\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":8405:8479   */\n      swap1\n      pop\n        /* \"#utility.yul\":8502:8508   */\n      dup3\n        /* \"#utility.yul\":8495:8500   */\n      dup2\n        /* \"#utility.yul\":8488:8509   */\n      mstore\n        /* \"#utility.yul\":8540:8544   */\n      0x20\n        /* \"#utility.yul\":8533:8538   */\n      dup2\n        /* \"#utility.yul\":8529:8545   */\n      add\n        /* \"#utility.yul\":8578:8581   */\n      dup5\n        /* \"#utility.yul\":8569:8575   */\n      dup5\n        /* \"#utility.yul\":8564:8567   */\n      dup5\n        /* \"#utility.yul\":8560:8576   */\n      add\n        /* \"#utility.yul\":8557:8582   */\n      gt\n        /* \"#utility.yul\":8554:8666   */\n      iszero\n      tag_353\n      jumpi\n        /* \"#utility.yul\":8585:8664   */\n      tag_354\n      tag_235\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":8554:8666   */\n    tag_353:\n        /* \"#utility.yul\":8675:8716   */\n      tag_355\n        /* \"#utility.yul\":8709:8715   */\n      dup5\n        /* \"#utility.yul\":8704:8707   */\n      dup3\n        /* \"#utility.yul\":8699:8702   */\n      dup6\n        /* \"#utility.yul\":8675:8716   */\n      tag_240\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":8395:8722   */\n      pop\n        /* \"#utility.yul\":8312:8722   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8741:9079   */\n    tag_242:\n        /* \"#utility.yul\":8796:8801   */\n      0x00\n        /* \"#utility.yul\":8845:8848   */\n      dup3\n        /* \"#utility.yul\":8838:8842   */\n      0x1f\n        /* \"#utility.yul\":8830:8836   */\n      dup4\n        /* \"#utility.yul\":8826:8843   */\n      add\n        /* \"#utility.yul\":8822:8849   */\n      slt\n        /* \"#utility.yul\":8812:8934   */\n      tag_357\n      jumpi\n        /* \"#utility.yul\":8853:8932   */\n      tag_358\n      tag_234\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":8812:8934   */\n    tag_357:\n        /* \"#utility.yul\":8970:8976   */\n      dup2\n        /* \"#utility.yul\":8957:8977   */\n      calldataload\n        /* \"#utility.yul\":8995:9073   */\n      tag_359\n        /* \"#utility.yul\":9069:9072   */\n      dup5\n        /* \"#utility.yul\":9061:9067   */\n      dup3\n        /* \"#utility.yul\":9054:9058   */\n      0x20\n        /* \"#utility.yul\":9046:9052   */\n      dup7\n        /* \"#utility.yul\":9042:9059   */\n      add\n        /* \"#utility.yul\":8995:9073   */\n      tag_241\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":8986:9073   */\n      swap2\n      pop\n        /* \"#utility.yul\":8802:9079   */\n      pop\n        /* \"#utility.yul\":8741:9079   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9085:10028   */\n    tag_69:\n        /* \"#utility.yul\":9180:9186   */\n      0x00\n        /* \"#utility.yul\":9188:9194   */\n      dup1\n        /* \"#utility.yul\":9196:9202   */\n      0x00\n        /* \"#utility.yul\":9204:9210   */\n      dup1\n        /* \"#utility.yul\":9253:9256   */\n      0x80\n        /* \"#utility.yul\":9241:9250   */\n      dup6\n        /* \"#utility.yul\":9232:9239   */\n      dup8\n        /* \"#utility.yul\":9228:9251   */\n      sub\n        /* \"#utility.yul\":9224:9257   */\n      slt\n        /* \"#utility.yul\":9221:9341   */\n      iszero\n      tag_361\n      jumpi\n        /* \"#utility.yul\":9260:9339   */\n      tag_362\n      tag_211\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":9221:9341   */\n    tag_361:\n        /* \"#utility.yul\":9380:9381   */\n      0x00\n        /* \"#utility.yul\":9405:9458   */\n      tag_363\n        /* \"#utility.yul\":9450:9457   */\n      dup8\n        /* \"#utility.yul\":9441:9447   */\n      dup3\n        /* \"#utility.yul\":9430:9439   */\n      dup9\n        /* \"#utility.yul\":9426:9448   */\n      add\n        /* \"#utility.yul\":9405:9458   */\n      tag_230\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":9395:9458   */\n      swap5\n      pop\n        /* \"#utility.yul\":9351:9468   */\n      pop\n        /* \"#utility.yul\":9507:9509   */\n      0x20\n        /* \"#utility.yul\":9533:9586   */\n      tag_364\n        /* \"#utility.yul\":9578:9585   */\n      dup8\n        /* \"#utility.yul\":9569:9575   */\n      dup3\n        /* \"#utility.yul\":9558:9567   */\n      dup9\n        /* \"#utility.yul\":9554:9576   */\n      add\n        /* \"#utility.yul\":9533:9586   */\n      tag_230\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":9523:9586   */\n      swap4\n      pop\n        /* \"#utility.yul\":9478:9596   */\n      pop\n        /* \"#utility.yul\":9635:9637   */\n      0x40\n        /* \"#utility.yul\":9661:9714   */\n      tag_365\n        /* \"#utility.yul\":9706:9713   */\n      dup8\n        /* \"#utility.yul\":9697:9703   */\n      dup3\n        /* \"#utility.yul\":9686:9695   */\n      dup9\n        /* \"#utility.yul\":9682:9704   */\n      add\n        /* \"#utility.yul\":9661:9714   */\n      tag_225\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":9651:9714   */\n      swap3\n      pop\n        /* \"#utility.yul\":9606:9724   */\n      pop\n        /* \"#utility.yul\":9791:9793   */\n      0x60\n        /* \"#utility.yul\":9780:9789   */\n      dup6\n        /* \"#utility.yul\":9776:9794   */\n      add\n        /* \"#utility.yul\":9763:9795   */\n      calldataload\n        /* \"#utility.yul\":9822:9840   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9814:9820   */\n      dup2\n        /* \"#utility.yul\":9811:9841   */\n      gt\n        /* \"#utility.yul\":9808:9925   */\n      iszero\n      tag_366\n      jumpi\n        /* \"#utility.yul\":9844:9923   */\n      tag_367\n      tag_212\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":9808:9925   */\n    tag_366:\n        /* \"#utility.yul\":9949:10011   */\n      tag_368\n        /* \"#utility.yul\":10003:10010   */\n      dup8\n        /* \"#utility.yul\":9994:10000   */\n      dup3\n        /* \"#utility.yul\":9983:9992   */\n      dup9\n        /* \"#utility.yul\":9979:10001   */\n      add\n        /* \"#utility.yul\":9949:10011   */\n      tag_242\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":9939:10011   */\n      swap2\n      pop\n        /* \"#utility.yul\":9734:10021   */\n      pop\n        /* \"#utility.yul\":9085:10028   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10034:10508   */\n    tag_77:\n        /* \"#utility.yul\":10102:10108   */\n      0x00\n        /* \"#utility.yul\":10110:10116   */\n      dup1\n        /* \"#utility.yul\":10159:10161   */\n      0x40\n        /* \"#utility.yul\":10147:10156   */\n      dup4\n        /* \"#utility.yul\":10138:10145   */\n      dup6\n        /* \"#utility.yul\":10134:10157   */\n      sub\n        /* \"#utility.yul\":10130:10162   */\n      slt\n        /* \"#utility.yul\":10127:10246   */\n      iszero\n      tag_370\n      jumpi\n        /* \"#utility.yul\":10165:10244   */\n      tag_371\n      tag_211\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":10127:10246   */\n    tag_370:\n        /* \"#utility.yul\":10285:10286   */\n      0x00\n        /* \"#utility.yul\":10310:10363   */\n      tag_372\n        /* \"#utility.yul\":10355:10362   */\n      dup6\n        /* \"#utility.yul\":10346:10352   */\n      dup3\n        /* \"#utility.yul\":10335:10344   */\n      dup7\n        /* \"#utility.yul\":10331:10353   */\n      add\n        /* \"#utility.yul\":10310:10363   */\n      tag_230\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":10300:10363   */\n      swap3\n      pop\n        /* \"#utility.yul\":10256:10373   */\n      pop\n        /* \"#utility.yul\":10412:10414   */\n      0x20\n        /* \"#utility.yul\":10438:10491   */\n      tag_373\n        /* \"#utility.yul\":10483:10490   */\n      dup6\n        /* \"#utility.yul\":10474:10480   */\n      dup3\n        /* \"#utility.yul\":10463:10472   */\n      dup7\n        /* \"#utility.yul\":10459:10481   */\n      add\n        /* \"#utility.yul\":10438:10491   */\n      tag_230\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":10428:10491   */\n      swap2\n      pop\n        /* \"#utility.yul\":10383:10501   */\n      pop\n        /* \"#utility.yul\":10034:10508   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10514:10694   */\n    tag_243:\n        /* \"#utility.yul\":10562:10639   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10559:10560   */\n      0x00\n        /* \"#utility.yul\":10552:10640   */\n      mstore\n        /* \"#utility.yul\":10659:10663   */\n      0x22\n        /* \"#utility.yul\":10656:10657   */\n      0x04\n        /* \"#utility.yul\":10649:10664   */\n      mstore\n        /* \"#utility.yul\":10683:10687   */\n      0x24\n        /* \"#utility.yul\":10680:10681   */\n      0x00\n        /* \"#utility.yul\":10673:10688   */\n      revert\n        /* \"#utility.yul\":10700:11020   */\n    tag_85:\n        /* \"#utility.yul\":10744:10750   */\n      0x00\n        /* \"#utility.yul\":10781:10782   */\n      0x02\n        /* \"#utility.yul\":10775:10779   */\n      dup3\n        /* \"#utility.yul\":10771:10783   */\n      div\n        /* \"#utility.yul\":10761:10783   */\n      swap1\n      pop\n        /* \"#utility.yul\":10828:10829   */\n      0x01\n        /* \"#utility.yul\":10822:10826   */\n      dup3\n        /* \"#utility.yul\":10818:10830   */\n      and\n        /* \"#utility.yul\":10849:10867   */\n      dup1\n        /* \"#utility.yul\":10839:10920   */\n      tag_376\n      jumpi\n        /* \"#utility.yul\":10905:10909   */\n      0x7f\n        /* \"#utility.yul\":10897:10903   */\n      dup3\n        /* \"#utility.yul\":10893:10910   */\n      and\n        /* \"#utility.yul\":10883:10910   */\n      swap2\n      pop\n        /* \"#utility.yul\":10839:10920   */\n    tag_376:\n        /* \"#utility.yul\":10967:10969   */\n      0x20\n        /* \"#utility.yul\":10959:10965   */\n      dup3\n        /* \"#utility.yul\":10956:10970   */\n      lt\n        /* \"#utility.yul\":10936:10954   */\n      dup2\n        /* \"#utility.yul\":10933:10971   */\n      sub\n        /* \"#utility.yul\":10930:11014   */\n      tag_377\n      jumpi\n        /* \"#utility.yul\":10986:11004   */\n      tag_378\n      tag_243\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":10930:11014   */\n    tag_377:\n        /* \"#utility.yul\":10751:11020   */\n      pop\n        /* \"#utility.yul\":10700:11020   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11026:11174   */\n    tag_244:\n        /* \"#utility.yul\":11128:11139   */\n      0x00\n        /* \"#utility.yul\":11165:11168   */\n      dup2\n        /* \"#utility.yul\":11150:11168   */\n      swap1\n      pop\n        /* \"#utility.yul\":11026:11174   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11180:11557   */\n    tag_245:\n        /* \"#utility.yul\":11286:11289   */\n      0x00\n        /* \"#utility.yul\":11314:11353   */\n      tag_381\n        /* \"#utility.yul\":11347:11352   */\n      dup3\n        /* \"#utility.yul\":11314:11353   */\n      tag_218\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":11369:11458   */\n      tag_382\n        /* \"#utility.yul\":11451:11457   */\n      dup2\n        /* \"#utility.yul\":11446:11449   */\n      dup6\n        /* \"#utility.yul\":11369:11458   */\n      tag_244\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":11362:11458   */\n      swap4\n      pop\n        /* \"#utility.yul\":11467:11519   */\n      tag_383\n        /* \"#utility.yul\":11512:11518   */\n      dup2\n        /* \"#utility.yul\":11507:11510   */\n      dup6\n        /* \"#utility.yul\":11500:11504   */\n      0x20\n        /* \"#utility.yul\":11493:11498   */\n      dup7\n        /* \"#utility.yul\":11489:11505   */\n      add\n        /* \"#utility.yul\":11467:11519   */\n      tag_220\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":11544:11550   */\n      dup1\n        /* \"#utility.yul\":11539:11542   */\n      dup5\n        /* \"#utility.yul\":11535:11551   */\n      add\n        /* \"#utility.yul\":11528:11551   */\n      swap2\n      pop\n        /* \"#utility.yul\":11290:11557   */\n      pop\n        /* \"#utility.yul\":11180:11557   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11563:11998   */\n    tag_165:\n        /* \"#utility.yul\":11743:11746   */\n      0x00\n        /* \"#utility.yul\":11765:11860   */\n      tag_385\n        /* \"#utility.yul\":11856:11859   */\n      dup3\n        /* \"#utility.yul\":11847:11853   */\n      dup6\n        /* \"#utility.yul\":11765:11860   */\n      tag_245\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":11758:11860   */\n      swap2\n      pop\n        /* \"#utility.yul\":11877:11972   */\n      tag_386\n        /* \"#utility.yul\":11968:11971   */\n      dup3\n        /* \"#utility.yul\":11959:11965   */\n      dup5\n        /* \"#utility.yul\":11877:11972   */\n      tag_245\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":11870:11972   */\n      swap2\n      pop\n        /* \"#utility.yul\":11989:11992   */\n      dup2\n        /* \"#utility.yul\":11982:11992   */\n      swap1\n      pop\n        /* \"#utility.yul\":11563:11998   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12004:12102   */\n    tag_246:\n        /* \"#utility.yul\":12055:12061   */\n      0x00\n        /* \"#utility.yul\":12089:12094   */\n      dup2\n        /* \"#utility.yul\":12083:12095   */\n      mload\n        /* \"#utility.yul\":12073:12095   */\n      swap1\n      pop\n        /* \"#utility.yul\":12004:12102   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12108:12276   */\n    tag_247:\n        /* \"#utility.yul\":12191:12202   */\n      0x00\n        /* \"#utility.yul\":12225:12231   */\n      dup3\n        /* \"#utility.yul\":12220:12223   */\n      dup3\n        /* \"#utility.yul\":12213:12232   */\n      mstore\n        /* \"#utility.yul\":12265:12269   */\n      0x20\n        /* \"#utility.yul\":12260:12263   */\n      dup3\n        /* \"#utility.yul\":12256:12270   */\n      add\n        /* \"#utility.yul\":12241:12270   */\n      swap1\n      pop\n        /* \"#utility.yul\":12108:12276   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12282:12642   */\n    tag_248:\n        /* \"#utility.yul\":12368:12371   */\n      0x00\n        /* \"#utility.yul\":12396:12434   */\n      tag_390\n        /* \"#utility.yul\":12428:12433   */\n      dup3\n        /* \"#utility.yul\":12396:12434   */\n      tag_246\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":12450:12520   */\n      tag_391\n        /* \"#utility.yul\":12513:12519   */\n      dup2\n        /* \"#utility.yul\":12508:12511   */\n      dup6\n        /* \"#utility.yul\":12450:12520   */\n      tag_247\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":12443:12520   */\n      swap4\n      pop\n        /* \"#utility.yul\":12529:12581   */\n      tag_392\n        /* \"#utility.yul\":12574:12580   */\n      dup2\n        /* \"#utility.yul\":12569:12572   */\n      dup6\n        /* \"#utility.yul\":12562:12566   */\n      0x20\n        /* \"#utility.yul\":12555:12560   */\n      dup7\n        /* \"#utility.yul\":12551:12567   */\n      add\n        /* \"#utility.yul\":12529:12581   */\n      tag_220\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":12606:12635   */\n      tag_393\n        /* \"#utility.yul\":12628:12634   */\n      dup2\n        /* \"#utility.yul\":12606:12635   */\n      tag_221\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":12601:12604   */\n      dup5\n        /* \"#utility.yul\":12597:12636   */\n      add\n        /* \"#utility.yul\":12590:12636   */\n      swap2\n      pop\n        /* \"#utility.yul\":12372:12642   */\n      pop\n        /* \"#utility.yul\":12282:12642   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12648:13288   */\n    tag_191:\n        /* \"#utility.yul\":12843:12847   */\n      0x00\n        /* \"#utility.yul\":12881:12884   */\n      0x80\n        /* \"#utility.yul\":12870:12879   */\n      dup3\n        /* \"#utility.yul\":12866:12885   */\n      add\n        /* \"#utility.yul\":12858:12885   */\n      swap1\n      pop\n        /* \"#utility.yul\":12895:12966   */\n      tag_395\n        /* \"#utility.yul\":12963:12964   */\n      0x00\n        /* \"#utility.yul\":12952:12961   */\n      dup4\n        /* \"#utility.yul\":12948:12965   */\n      add\n        /* \"#utility.yul\":12939:12945   */\n      dup8\n        /* \"#utility.yul\":12895:12966   */\n      tag_228\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":12976:13048   */\n      tag_396\n        /* \"#utility.yul\":13044:13046   */\n      0x20\n        /* \"#utility.yul\":13033:13042   */\n      dup4\n        /* \"#utility.yul\":13029:13047   */\n      add\n        /* \"#utility.yul\":13020:13026   */\n      dup7\n        /* \"#utility.yul\":12976:13048   */\n      tag_228\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":13058:13130   */\n      tag_397\n        /* \"#utility.yul\":13126:13128   */\n      0x40\n        /* \"#utility.yul\":13115:13124   */\n      dup4\n        /* \"#utility.yul\":13111:13129   */\n      add\n        /* \"#utility.yul\":13102:13108   */\n      dup6\n        /* \"#utility.yul\":13058:13130   */\n      tag_231\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":13177:13186   */\n      dup2\n        /* \"#utility.yul\":13171:13175   */\n      dup2\n        /* \"#utility.yul\":13167:13187   */\n      sub\n        /* \"#utility.yul\":13162:13164   */\n      0x60\n        /* \"#utility.yul\":13151:13160   */\n      dup4\n        /* \"#utility.yul\":13147:13165   */\n      add\n        /* \"#utility.yul\":13140:13188   */\n      mstore\n        /* \"#utility.yul\":13205:13281   */\n      tag_398\n        /* \"#utility.yul\":13276:13280   */\n      dup2\n        /* \"#utility.yul\":13267:13273   */\n      dup5\n        /* \"#utility.yul\":13205:13281   */\n      tag_248\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":13197:13281   */\n      swap1\n      pop\n        /* \"#utility.yul\":12648:13288   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13294:13435   */\n    tag_249:\n        /* \"#utility.yul\":13350:13355   */\n      0x00\n        /* \"#utility.yul\":13381:13387   */\n      dup2\n        /* \"#utility.yul\":13375:13388   */\n      mload\n        /* \"#utility.yul\":13366:13388   */\n      swap1\n      pop\n        /* \"#utility.yul\":13397:13429   */\n      tag_400\n        /* \"#utility.yul\":13423:13428   */\n      dup2\n        /* \"#utility.yul\":13397:13429   */\n      tag_214\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":13294:13435   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13441:13790   */\n    tag_194:\n        /* \"#utility.yul\":13510:13516   */\n      0x00\n        /* \"#utility.yul\":13559:13561   */\n      0x20\n        /* \"#utility.yul\":13547:13556   */\n      dup3\n        /* \"#utility.yul\":13538:13545   */\n      dup5\n        /* \"#utility.yul\":13534:13557   */\n      sub\n        /* \"#utility.yul\":13530:13562   */\n      slt\n        /* \"#utility.yul\":13527:13646   */\n      iszero\n      tag_402\n      jumpi\n        /* \"#utility.yul\":13565:13644   */\n      tag_403\n      tag_211\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":13527:13646   */\n    tag_402:\n        /* \"#utility.yul\":13685:13686   */\n      0x00\n        /* \"#utility.yul\":13710:13773   */\n      tag_404\n        /* \"#utility.yul\":13765:13772   */\n      dup5\n        /* \"#utility.yul\":13756:13762   */\n      dup3\n        /* \"#utility.yul\":13745:13754   */\n      dup6\n        /* \"#utility.yul\":13741:13763   */\n      add\n        /* \"#utility.yul\":13710:13773   */\n      tag_249\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":13700:13773   */\n      swap2\n      pop\n        /* \"#utility.yul\":13656:13783   */\n      pop\n        /* \"#utility.yul\":13441:13790   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122087fc46e63b2acdcb9ab98694ed6fb1c4aebaaf4b0f638cf15be2fea23c1bc30964736f6c634300080e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_134": {
									"entryPoint": null,
									"id": 134,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_startTokenId_143": {
									"entryPoint": 135,
									"id": 143,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 603,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 678,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 729,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"allocate_memory": {
									"entryPoint": 464,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 316,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 495,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 549,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 909,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 410,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 862,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 363,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 336,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 341,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 331,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 326,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 346,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4093:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:2"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:2",
														"type": ""
													}
												],
												"src": "7:75:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:2"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:2"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "423:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "440:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "443:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "433:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "433:12:2"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "546:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "563:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "566:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "556:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "556:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "556:12:2"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "457:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "628:54:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "638:38:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "656:5:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "663:2:2",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "652:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "652:14:2"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "672:2:2",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "668:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "668:7:2"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "648:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "648:28:2"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "638:6:2"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "611:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "621:6:2",
														"type": ""
													}
												],
												"src": "580:102:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "716:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "733:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "736:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "726:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "726:88:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "726:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "830:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "833:4:2",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "823:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "823:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "854:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "857:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "847:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "847:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "847:15:2"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "688:180:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "917:238:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "927:58:2",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "949:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "979:4:2"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "957:21:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "957:27:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "945:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "945:40:2"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "931:10:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1096:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1098:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1098:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1098:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1039:10:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1051:18:2",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1036:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1036:34:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1075:10:2"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1087:6:2"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1072:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1072:22:2"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1033:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1033:62:2"
															},
															"nodeType": "YulIf",
															"src": "1030:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1134:2:2",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1138:10:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1127:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1127:22:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1127:22:2"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "903:6:2",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "911:4:2",
														"type": ""
													}
												],
												"src": "874:281:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1202:88:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1212:30:2",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "1222:18:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1222:20:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1271:6:2"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1279:4:2"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "1251:19:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1251:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1251:33:2"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1186:4:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1195:6:2",
														"type": ""
													}
												],
												"src": "1161:129:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1363:241:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1468:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1470:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1470:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1470:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1440:6:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1448:18:2",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1437:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1437:30:2"
															},
															"nodeType": "YulIf",
															"src": "1434:56:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1500:37:2",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1530:6:2"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "1508:21:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1508:29:2"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1500:4:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1574:23:2",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1586:4:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1592:4:2",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1582:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1582:15:2"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1574:4:2"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1347:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1358:4:2",
														"type": ""
													}
												],
												"src": "1296:308:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1659:258:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1669:10:2",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1678:1:2",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1673:1:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1738:63:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "1763:3:2"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "1768:1:2"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1759:3:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1759:11:2"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "1782:3:2"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1787:1:2"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1778:3:2"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1778:11:2"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1772:5:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1772:18:2"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1752:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1752:39:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1752:39:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1699:1:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1702:6:2"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1696:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1696:13:2"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1710:19:2",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1712:15:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1721:1:2"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1724:2:2",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1717:3:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1717:10:2"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1712:1:2"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1692:3:2",
																"statements": []
															},
															"src": "1688:113:2"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1835:76:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "1885:3:2"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "1890:6:2"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1881:3:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1881:16:2"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1899:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1874:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1874:27:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1874:27:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1816:1:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1819:6:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1813:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1813:13:2"
															},
															"nodeType": "YulIf",
															"src": "1810:101:2"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1641:3:2",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "1646:3:2",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1651:6:2",
														"type": ""
													}
												],
												"src": "1610:307:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2018:326:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2028:75:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2095:6:2"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "2053:41:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2053:49:2"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "2037:15:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2037:66:2"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "2028:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "2119:5:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2126:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2112:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2112:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2112:21:2"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2142:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "2157:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2164:4:2",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2153:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2153:16:2"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "2146:3:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2207:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "2209:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2209:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2209:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "2188:3:2"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2193:6:2"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2184:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2184:16:2"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2202:3:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2181:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2181:25:2"
															},
															"nodeType": "YulIf",
															"src": "2178:112:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "2321:3:2"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "2326:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2331:6:2"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "2299:21:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2299:39:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2299:39:2"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1991:3:2",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1996:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2004:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2012:5:2",
														"type": ""
													}
												],
												"src": "1923:421:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2437:282:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2486:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "2488:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2488:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2488:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2465:6:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2473:4:2",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2461:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2461:17:2"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "2480:3:2"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2457:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2457:27:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2450:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2450:35:2"
															},
															"nodeType": "YulIf",
															"src": "2447:122:2"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2578:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2598:6:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2592:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2592:13:2"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2582:6:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2614:99:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2686:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2694:4:2",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2682:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2682:17:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2701:6:2"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2709:3:2"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "2623:58:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2623:90:2"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "2614:5:2"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2415:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2423:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2431:5:2",
														"type": ""
													}
												],
												"src": "2364:355:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2839:739:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2885:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2887:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2887:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2887:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2860:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2869:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2856:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2856:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2881:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2852:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2852:32:2"
															},
															"nodeType": "YulIf",
															"src": "2849:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "2978:291:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2993:38:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3017:9:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3028:1:2",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3013:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3013:17:2"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "3007:5:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3007:24:2"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2997:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3078:83:2",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "3080:77:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3080:79:2"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3080:79:2"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3050:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3058:18:2",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3047:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3047:30:2"
																	},
																	"nodeType": "YulIf",
																	"src": "3044:117:2"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3175:84:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3231:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3242:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3227:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3227:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3251:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3185:41:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3185:74:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3175:6:2"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3279:292:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3294:39:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3318:9:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3329:2:2",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3314:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3314:18:2"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "3308:5:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3308:25:2"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3298:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3380:83:2",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "3382:77:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3382:79:2"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3382:79:2"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3352:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3360:18:2",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3349:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3349:30:2"
																	},
																	"nodeType": "YulIf",
																	"src": "3346:117:2"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3477:84:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3533:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3544:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3529:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3529:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3553:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3487:41:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3487:74:2"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "3477:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2801:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2812:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2824:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2832:6:2",
														"type": ""
													}
												],
												"src": "2725:853:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3612:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3629:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3632:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3622:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3622:88:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3622:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3726:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3729:4:2",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3719:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3719:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3719:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3750:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3753:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3743:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3743:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3743:15:2"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "3584:180:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3821:269:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3831:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3845:4:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3851:1:2",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "3841:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3841:12:2"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "3831:6:2"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3862:38:2",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3892:4:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3898:1:2",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3888:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3888:12:2"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "3866:18:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3939:51:2",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3953:27:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "3967:6:2"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3975:4:2",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "3963:3:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3963:17:2"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "3953:6:2"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "3919:18:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3912:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3912:26:2"
															},
															"nodeType": "YulIf",
															"src": "3909:81:2"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4042:42:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "4056:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4056:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4056:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "4006:18:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4029:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4037:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "4026:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4026:14:2"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "4003:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4003:38:2"
															},
															"nodeType": "YulIf",
															"src": "4000:84:2"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "3805:4:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3814:6:2",
														"type": ""
													}
												],
												"src": "3770:320:2"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b5060405162001ce738038062001ce78339818101604052810190620000379190620002d9565b81600290805190602001906200004f9291906200008c565b508060039080519060200190620000689291906200008c565b50620000796200008760201b60201c565b6000819055505050620003c2565b600090565b8280546200009a906200038d565b90600052602060002090601f016020900481019282620000be57600085556200010a565b82601f10620000d957805160ff19168380011785556200010a565b828001600101855582156200010a579182015b8281111562000109578251825591602001919060010190620000ec565b5b5090506200011991906200011d565b5090565b5b80821115620001385760008160009055506001016200011e565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620001a5826200015a565b810181811067ffffffffffffffff82111715620001c757620001c66200016b565b5b80604052505050565b6000620001dc6200013c565b9050620001ea82826200019a565b919050565b600067ffffffffffffffff8211156200020d576200020c6200016b565b5b62000218826200015a565b9050602081019050919050565b60005b838110156200024557808201518184015260208101905062000228565b8381111562000255576000848401525b50505050565b6000620002726200026c84620001ef565b620001d0565b90508281526020810184848401111562000291576200029062000155565b5b6200029e84828562000225565b509392505050565b600082601f830112620002be57620002bd62000150565b5b8151620002d08482602086016200025b565b91505092915050565b60008060408385031215620002f357620002f262000146565b5b600083015167ffffffffffffffff8111156200031457620003136200014b565b5b6200032285828601620002a6565b925050602083015167ffffffffffffffff8111156200034657620003456200014b565b5b6200035485828601620002a6565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620003a657607f821691505b602082108103620003bc57620003bb6200035e565b5b50919050565b61191580620003d26000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb4651461025d578063b88d4fde14610279578063c87b56dd14610295578063e985e9c5146102c5576100ea565b80636352211e146101df57806370a082311461020f57806395d89b411461023f576100ea565b8063095ea7b3116100c8578063095ea7b31461016d57806318160ddd1461018957806323b872dd146101a757806342842e0e146101c3576100ea565b806301ffc9a7146100ef57806306fdde031461011f578063081812fc1461013d575b600080fd5b610109600480360381019061010491906111e5565b6102f5565b604051610116919061122d565b60405180910390f35b610127610387565b60405161013491906112e1565b60405180910390f35b61015760048036038101906101529190611339565b610419565b60405161016491906113a7565b60405180910390f35b610187600480360381019061018291906113ee565b610498565b005b6101916105dc565b60405161019e919061143d565b60405180910390f35b6101c160048036038101906101bc9190611458565b6105f3565b005b6101dd60048036038101906101d89190611458565b610915565b005b6101f960048036038101906101f49190611339565b610935565b60405161020691906113a7565b60405180910390f35b610229600480360381019061022491906114ab565b610947565b604051610236919061143d565b60405180910390f35b6102476109ff565b60405161025491906112e1565b60405180910390f35b61027760048036038101906102729190611504565b610a91565b005b610293600480360381019061028e9190611679565b610c08565b005b6102af60048036038101906102aa9190611339565b610c7b565b6040516102bc91906112e1565b60405180910390f35b6102df60048036038101906102da91906116fc565b610d19565b6040516102ec919061122d565b60405180910390f35b60006301ffc9a760e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061035057506380ac58cd60e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806103805750635b5e139f60e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b6060600280546103969061176b565b80601f01602080910402602001604051908101604052809291908181526020018280546103c29061176b565b801561040f5780601f106103e45761010080835404028352916020019161040f565b820191906000526020600020905b8154815290600101906020018083116103f257829003601f168201915b5050505050905090565b600061042482610dad565b61045a576040517fcf4700e400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6006600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006104a382610935565b90508073ffffffffffffffffffffffffffffffffffffffff166104c4610e0c565b73ffffffffffffffffffffffffffffffffffffffff1614610527576104f0816104eb610e0c565b610d19565b610526576040517fcfb3b94200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b826006600084815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b60006105e6610e14565b6001546000540303905090565b60006105fe82610e19565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610665576040517fa114810000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008061067184610ee5565b915091506106878187610682610e0c565b610f0c565b6106d35761069c86610697610e0c565b610d19565b6106d2576040517f59c896be00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603610739576040517fea553b3400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6107468686866001610f50565b801561075157600082555b600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600081546001900391905081905550600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600081546001019190508190555061081f856107fb888887610f56565b7c020000000000000000000000000000000000000000000000000000000017610f7e565b600460008681526020019081526020016000208190555060007c02000000000000000000000000000000000000000000000000000000008416036108a557600060018501905060006004600083815260200190815260200160002054036108a35760005481146108a2578360046000838152602001908152602001600020819055505b5b505b838573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a461090d8686866001610fa9565b505050505050565b61093083838360405180602001604052806000815250610c08565b505050565b600061094082610e19565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036109ae576040517f8f4eb60400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b67ffffffffffffffff600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054169050919050565b606060038054610a0e9061176b565b80601f0160208091040260200160405190810160405280929190818152602001828054610a3a9061176b565b8015610a875780601f10610a5c57610100808354040283529160200191610a87565b820191906000526020600020905b815481529060010190602001808311610a6a57829003601f168201915b5050505050905090565b610a99610e0c565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610afd576040517fb06307db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060076000610b0a610e0c565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff16610bb7610e0c565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610bfc919061122d565b60405180910390a35050565b610c138484846105f3565b60008373ffffffffffffffffffffffffffffffffffffffff163b14610c7557610c3e84848484610faf565b610c74576040517fd1a57ed600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b50505050565b6060610c8682610dad565b610cbc576040517fa14c4b5000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610cc66110ff565b90506000815103610ce65760405180602001604052806000815250610d11565b80610cf084611116565b604051602001610d019291906117d8565b6040516020818303038152906040525b915050919050565b6000600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600081610db8610e14565b11158015610dc7575060005482105b8015610e05575060007c0100000000000000000000000000000000000000000000000000000000600460008581526020019081526020016000205416145b9050919050565b600033905090565b600090565b60008082905080610e28610e14565b11610eae57600054811015610ead5760006004600083815260200190815260200160002054905060007c0100000000000000000000000000000000000000000000000000000000821603610eab575b60008103610ea1576004600083600190039350838152602001908152602001600020549050610e77565b8092505050610ee0565b505b5b6040517fdf2d9b4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b919050565b60008060006006600085815260200190815260200160002090508092508254915050915091565b600073ffffffffffffffffffffffffffffffffffffffff8316925073ffffffffffffffffffffffffffffffffffffffff821691508382148383141790509392505050565b50505050565b60008060e883901c905060e8610f6d868684611170565b62ffffff16901b9150509392505050565b600073ffffffffffffffffffffffffffffffffffffffff83169250814260a01b178317905092915050565b50505050565b60008373ffffffffffffffffffffffffffffffffffffffff1663150b7a02610fd5610e0c565b8786866040518563ffffffff1660e01b8152600401610ff79493929190611851565b6020604051808303816000875af192505050801561103357506040513d601f19601f8201168201806040525081019061103091906118b2565b60015b6110ac573d8060008114611063576040519150601f19603f3d011682016040523d82523d6000602084013e611068565b606091505b5060008151036110a4576040517fd1a57ed600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050949350505050565b606060405180602001604052806000815250905090565b60606080604051019050806040528082600183039250600a81066030018353600a810490505b801561115c57600183039250600a81066030018353600a8104905061113c565b508181036020830392508083525050919050565b60009392505050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6111c28161118d565b81146111cd57600080fd5b50565b6000813590506111df816111b9565b92915050565b6000602082840312156111fb576111fa611183565b5b6000611209848285016111d0565b91505092915050565b60008115159050919050565b61122781611212565b82525050565b6000602082019050611242600083018461121e565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611282578082015181840152602081019050611267565b83811115611291576000848401525b50505050565b6000601f19601f8301169050919050565b60006112b382611248565b6112bd8185611253565b93506112cd818560208601611264565b6112d681611297565b840191505092915050565b600060208201905081810360008301526112fb81846112a8565b905092915050565b6000819050919050565b61131681611303565b811461132157600080fd5b50565b6000813590506113338161130d565b92915050565b60006020828403121561134f5761134e611183565b5b600061135d84828501611324565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061139182611366565b9050919050565b6113a181611386565b82525050565b60006020820190506113bc6000830184611398565b92915050565b6113cb81611386565b81146113d657600080fd5b50565b6000813590506113e8816113c2565b92915050565b6000806040838503121561140557611404611183565b5b6000611413858286016113d9565b925050602061142485828601611324565b9150509250929050565b61143781611303565b82525050565b6000602082019050611452600083018461142e565b92915050565b60008060006060848603121561147157611470611183565b5b600061147f868287016113d9565b9350506020611490868287016113d9565b92505060406114a186828701611324565b9150509250925092565b6000602082840312156114c1576114c0611183565b5b60006114cf848285016113d9565b91505092915050565b6114e181611212565b81146114ec57600080fd5b50565b6000813590506114fe816114d8565b92915050565b6000806040838503121561151b5761151a611183565b5b6000611529858286016113d9565b925050602061153a858286016114ef565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61158682611297565b810181811067ffffffffffffffff821117156115a5576115a461154e565b5b80604052505050565b60006115b8611179565b90506115c4828261157d565b919050565b600067ffffffffffffffff8211156115e4576115e361154e565b5b6115ed82611297565b9050602081019050919050565b82818337600083830152505050565b600061161c611617846115c9565b6115ae565b90508281526020810184848401111561163857611637611549565b5b6116438482856115fa565b509392505050565b600082601f8301126116605761165f611544565b5b8135611670848260208601611609565b91505092915050565b6000806000806080858703121561169357611692611183565b5b60006116a1878288016113d9565b94505060206116b2878288016113d9565b93505060406116c387828801611324565b925050606085013567ffffffffffffffff8111156116e4576116e3611188565b5b6116f08782880161164b565b91505092959194509250565b6000806040838503121561171357611712611183565b5b6000611721858286016113d9565b9250506020611732858286016113d9565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061178357607f821691505b6020821081036117965761179561173c565b5b50919050565b600081905092915050565b60006117b282611248565b6117bc818561179c565b93506117cc818560208601611264565b80840191505092915050565b60006117e482856117a7565b91506117f082846117a7565b91508190509392505050565b600081519050919050565b600082825260208201905092915050565b6000611823826117fc565b61182d8185611807565b935061183d818560208601611264565b61184681611297565b840191505092915050565b60006080820190506118666000830187611398565b6118736020830186611398565b611880604083018561142e565b81810360608301526118928184611818565b905095945050505050565b6000815190506118ac816111b9565b92915050565b6000602082840312156118c8576118c7611183565b5b60006118d68482850161189d565b9150509291505056fea264697066735822122087fc46e63b2acdcb9ab98694ed6fb1c4aebaaf4b0f638cf15be2fea23c1bc30964736f6c634300080e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1CE7 CODESIZE SUB DUP1 PUSH3 0x1CE7 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x2D9 JUMP JUMPDEST DUP2 PUSH1 0x2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x4F SWAP3 SWAP2 SWAP1 PUSH3 0x8C JUMP JUMPDEST POP DUP1 PUSH1 0x3 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x68 SWAP3 SWAP2 SWAP1 PUSH3 0x8C JUMP JUMPDEST POP PUSH3 0x79 PUSH3 0x87 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 SSTORE POP POP POP PUSH3 0x3C2 JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x9A SWAP1 PUSH3 0x38D JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0xBE JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x10A JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xD9 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x10A JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x10A JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x109 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xEC JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x119 SWAP2 SWAP1 PUSH3 0x11D JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x138 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x11E JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0x1A5 DUP3 PUSH3 0x15A JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x1C7 JUMPI PUSH3 0x1C6 PUSH3 0x16B JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1DC PUSH3 0x13C JUMP JUMPDEST SWAP1 POP PUSH3 0x1EA DUP3 DUP3 PUSH3 0x19A JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x20D JUMPI PUSH3 0x20C PUSH3 0x16B JUMP JUMPDEST JUMPDEST PUSH3 0x218 DUP3 PUSH3 0x15A JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x245 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x228 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH3 0x255 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x272 PUSH3 0x26C DUP5 PUSH3 0x1EF JUMP JUMPDEST PUSH3 0x1D0 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x291 JUMPI PUSH3 0x290 PUSH3 0x155 JUMP JUMPDEST JUMPDEST PUSH3 0x29E DUP5 DUP3 DUP6 PUSH3 0x225 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x2BE JUMPI PUSH3 0x2BD PUSH3 0x150 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x2D0 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x25B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x2F3 JUMPI PUSH3 0x2F2 PUSH3 0x146 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x314 JUMPI PUSH3 0x313 PUSH3 0x14B JUMP JUMPDEST JUMPDEST PUSH3 0x322 DUP6 DUP3 DUP7 ADD PUSH3 0x2A6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x346 JUMPI PUSH3 0x345 PUSH3 0x14B JUMP JUMPDEST JUMPDEST PUSH3 0x354 DUP6 DUP3 DUP7 ADD PUSH3 0x2A6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x3A6 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x3BC JUMPI PUSH3 0x3BB PUSH3 0x35E JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1915 DUP1 PUSH3 0x3D2 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x25D JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x279 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x295 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x2C5 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x1DF JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x20F JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x23F JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x16D JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x189 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1A7 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1C3 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x13D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x109 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x104 SWAP2 SWAP1 PUSH2 0x11E5 JUMP JUMPDEST PUSH2 0x2F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x116 SWAP2 SWAP1 PUSH2 0x122D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x127 PUSH2 0x387 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x134 SWAP2 SWAP1 PUSH2 0x12E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x152 SWAP2 SWAP1 PUSH2 0x1339 JUMP JUMPDEST PUSH2 0x419 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x164 SWAP2 SWAP1 PUSH2 0x13A7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x187 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x182 SWAP2 SWAP1 PUSH2 0x13EE JUMP JUMPDEST PUSH2 0x498 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x191 PUSH2 0x5DC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19E SWAP2 SWAP1 PUSH2 0x143D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BC SWAP2 SWAP1 PUSH2 0x1458 JUMP JUMPDEST PUSH2 0x5F3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1DD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D8 SWAP2 SWAP1 PUSH2 0x1458 JUMP JUMPDEST PUSH2 0x915 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F4 SWAP2 SWAP1 PUSH2 0x1339 JUMP JUMPDEST PUSH2 0x935 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x206 SWAP2 SWAP1 PUSH2 0x13A7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x229 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x224 SWAP2 SWAP1 PUSH2 0x14AB JUMP JUMPDEST PUSH2 0x947 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x236 SWAP2 SWAP1 PUSH2 0x143D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x247 PUSH2 0x9FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x254 SWAP2 SWAP1 PUSH2 0x12E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x277 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x272 SWAP2 SWAP1 PUSH2 0x1504 JUMP JUMPDEST PUSH2 0xA91 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x293 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x28E SWAP2 SWAP1 PUSH2 0x1679 JUMP JUMPDEST PUSH2 0xC08 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2AF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2AA SWAP2 SWAP1 PUSH2 0x1339 JUMP JUMPDEST PUSH2 0xC7B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BC SWAP2 SWAP1 PUSH2 0x12E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2DA SWAP2 SWAP1 PUSH2 0x16FC JUMP JUMPDEST PUSH2 0xD19 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2EC SWAP2 SWAP1 PUSH2 0x122D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x350 JUMPI POP PUSH4 0x80AC58CD PUSH1 0xE0 SHL DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x380 JUMPI POP PUSH4 0x5B5E139F PUSH1 0xE0 SHL DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x396 SWAP1 PUSH2 0x176B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3C2 SWAP1 PUSH2 0x176B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x40F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3E4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x40F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3F2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x424 DUP3 PUSH2 0xDAD JUMP JUMPDEST PUSH2 0x45A JUMPI PUSH1 0x40 MLOAD PUSH32 0xCF4700E400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A3 DUP3 PUSH2 0x935 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x4C4 PUSH2 0xE0C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x527 JUMPI PUSH2 0x4F0 DUP2 PUSH2 0x4EB PUSH2 0xE0C JUMP JUMPDEST PUSH2 0xD19 JUMP JUMPDEST PUSH2 0x526 JUMPI PUSH1 0x40 MLOAD PUSH32 0xCFB3B94200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST DUP3 PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5E6 PUSH2 0xE14 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SLOAD SUB SUB SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5FE DUP3 PUSH2 0xE19 JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x665 JUMPI PUSH1 0x40 MLOAD PUSH32 0xA114810000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x671 DUP5 PUSH2 0xEE5 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x687 DUP2 DUP8 PUSH2 0x682 PUSH2 0xE0C JUMP JUMPDEST PUSH2 0xF0C JUMP JUMPDEST PUSH2 0x6D3 JUMPI PUSH2 0x69C DUP7 PUSH2 0x697 PUSH2 0xE0C JUMP JUMPDEST PUSH2 0xD19 JUMP JUMPDEST PUSH2 0x6D2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x59C896BE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x739 JUMPI PUSH1 0x40 MLOAD PUSH32 0xEA553B3400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x746 DUP7 DUP7 DUP7 PUSH1 0x1 PUSH2 0xF50 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x751 JUMPI PUSH1 0x0 DUP3 SSTORE JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD PUSH1 0x1 SWAP1 SUB SWAP2 SWAP1 POP DUP2 SWAP1 SSTORE POP PUSH1 0x5 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD PUSH1 0x1 ADD SWAP2 SWAP1 POP DUP2 SWAP1 SSTORE POP PUSH2 0x81F DUP6 PUSH2 0x7FB DUP9 DUP9 DUP8 PUSH2 0xF56 JUMP JUMPDEST PUSH29 0x200000000000000000000000000000000000000000000000000000000 OR PUSH2 0xF7E JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH29 0x200000000000000000000000000000000000000000000000000000000 DUP5 AND SUB PUSH2 0x8A5 JUMPI PUSH1 0x0 PUSH1 0x1 DUP6 ADD SWAP1 POP PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SUB PUSH2 0x8A3 JUMPI PUSH1 0x0 SLOAD DUP2 EQ PUSH2 0x8A2 JUMPI DUP4 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST POP JUMPDEST DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x90D DUP7 DUP7 DUP7 PUSH1 0x1 PUSH2 0xFA9 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x930 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xC08 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x940 DUP3 PUSH2 0xE19 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9AE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8F4EB60400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0xA0E SWAP1 PUSH2 0x176B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xA3A SWAP1 PUSH2 0x176B JUMP JUMPDEST DUP1 ISZERO PUSH2 0xA87 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA5C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA87 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA6A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xA99 PUSH2 0xE0C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAFD JUMPI PUSH1 0x40 MLOAD PUSH32 0xB06307DB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x7 PUSH1 0x0 PUSH2 0xB0A PUSH2 0xE0C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xBB7 PUSH2 0xE0C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xBFC SWAP2 SWAP1 PUSH2 0x122D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xC13 DUP5 DUP5 DUP5 PUSH2 0x5F3 JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ PUSH2 0xC75 JUMPI PUSH2 0xC3E DUP5 DUP5 DUP5 DUP5 PUSH2 0xFAF JUMP JUMPDEST PUSH2 0xC74 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD1A57ED600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xC86 DUP3 PUSH2 0xDAD JUMP JUMPDEST PUSH2 0xCBC JUMPI PUSH1 0x40 MLOAD PUSH32 0xA14C4B5000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xCC6 PUSH2 0x10FF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0xCE6 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xD11 JUMP JUMPDEST DUP1 PUSH2 0xCF0 DUP5 PUSH2 0x1116 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xD01 SWAP3 SWAP2 SWAP1 PUSH2 0x17D8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0xDB8 PUSH2 0xE14 JUMP JUMPDEST GT ISZERO DUP1 ISZERO PUSH2 0xDC7 JUMPI POP PUSH1 0x0 SLOAD DUP3 LT JUMPDEST DUP1 ISZERO PUSH2 0xE05 JUMPI POP PUSH1 0x0 PUSH29 0x100000000000000000000000000000000000000000000000000000000 PUSH1 0x4 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD AND EQ JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP1 POP DUP1 PUSH2 0xE28 PUSH2 0xE14 JUMP JUMPDEST GT PUSH2 0xEAE JUMPI PUSH1 0x0 SLOAD DUP2 LT ISZERO PUSH2 0xEAD JUMPI PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 PUSH29 0x100000000000000000000000000000000000000000000000000000000 DUP3 AND SUB PUSH2 0xEAB JUMPI JUMPDEST PUSH1 0x0 DUP2 SUB PUSH2 0xEA1 JUMPI PUSH1 0x4 PUSH1 0x0 DUP4 PUSH1 0x1 SWAP1 SUB SWAP4 POP DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH2 0xE77 JUMP JUMPDEST DUP1 SWAP3 POP POP POP PUSH2 0xEE0 JUMP JUMPDEST POP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xDF2D9B4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 SWAP3 POP DUP3 SLOAD SWAP2 POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP3 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP2 POP DUP4 DUP3 EQ DUP4 DUP4 EQ OR SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xE8 DUP4 SWAP1 SHR SWAP1 POP PUSH1 0xE8 PUSH2 0xF6D DUP7 DUP7 DUP5 PUSH2 0x1170 JUMP JUMPDEST PUSH3 0xFFFFFF AND SWAP1 SHL SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP3 POP DUP2 TIMESTAMP PUSH1 0xA0 SHL OR DUP4 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0xFD5 PUSH2 0xE0C JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFF7 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1851 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1033 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1030 SWAP2 SWAP1 PUSH2 0x18B2 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x10AC JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1063 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1068 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x10A4 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD1A57ED600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x80 PUSH1 0x40 MLOAD ADD SWAP1 POP DUP1 PUSH1 0x40 MSTORE DUP1 DUP3 PUSH1 0x1 DUP4 SUB SWAP3 POP PUSH1 0xA DUP2 MOD PUSH1 0x30 ADD DUP4 MSTORE8 PUSH1 0xA DUP2 DIV SWAP1 POP JUMPDEST DUP1 ISZERO PUSH2 0x115C JUMPI PUSH1 0x1 DUP4 SUB SWAP3 POP PUSH1 0xA DUP2 MOD PUSH1 0x30 ADD DUP4 MSTORE8 PUSH1 0xA DUP2 DIV SWAP1 POP PUSH2 0x113C JUMP JUMPDEST POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 SUB SWAP3 POP DUP1 DUP4 MSTORE POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11C2 DUP2 PUSH2 0x118D JUMP JUMPDEST DUP2 EQ PUSH2 0x11CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x11DF DUP2 PUSH2 0x11B9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11FB JUMPI PUSH2 0x11FA PUSH2 0x1183 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1209 DUP5 DUP3 DUP6 ADD PUSH2 0x11D0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1227 DUP2 PUSH2 0x1212 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1242 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x121E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1282 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1267 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1291 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12B3 DUP3 PUSH2 0x1248 JUMP JUMPDEST PUSH2 0x12BD DUP2 DUP6 PUSH2 0x1253 JUMP JUMPDEST SWAP4 POP PUSH2 0x12CD DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1264 JUMP JUMPDEST PUSH2 0x12D6 DUP2 PUSH2 0x1297 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x12FB DUP2 DUP5 PUSH2 0x12A8 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1316 DUP2 PUSH2 0x1303 JUMP JUMPDEST DUP2 EQ PUSH2 0x1321 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1333 DUP2 PUSH2 0x130D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x134F JUMPI PUSH2 0x134E PUSH2 0x1183 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x135D DUP5 DUP3 DUP6 ADD PUSH2 0x1324 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1391 DUP3 PUSH2 0x1366 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13A1 DUP2 PUSH2 0x1386 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13BC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1398 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x13CB DUP2 PUSH2 0x1386 JUMP JUMPDEST DUP2 EQ PUSH2 0x13D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x13E8 DUP2 PUSH2 0x13C2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1405 JUMPI PUSH2 0x1404 PUSH2 0x1183 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1413 DUP6 DUP3 DUP7 ADD PUSH2 0x13D9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1424 DUP6 DUP3 DUP7 ADD PUSH2 0x1324 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1437 DUP2 PUSH2 0x1303 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1452 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x142E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1471 JUMPI PUSH2 0x1470 PUSH2 0x1183 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x147F DUP7 DUP3 DUP8 ADD PUSH2 0x13D9 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1490 DUP7 DUP3 DUP8 ADD PUSH2 0x13D9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x14A1 DUP7 DUP3 DUP8 ADD PUSH2 0x1324 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14C1 JUMPI PUSH2 0x14C0 PUSH2 0x1183 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x14CF DUP5 DUP3 DUP6 ADD PUSH2 0x13D9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x14E1 DUP2 PUSH2 0x1212 JUMP JUMPDEST DUP2 EQ PUSH2 0x14EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x14FE DUP2 PUSH2 0x14D8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x151B JUMPI PUSH2 0x151A PUSH2 0x1183 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1529 DUP6 DUP3 DUP7 ADD PUSH2 0x13D9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x153A DUP6 DUP3 DUP7 ADD PUSH2 0x14EF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1586 DUP3 PUSH2 0x1297 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x15A5 JUMPI PUSH2 0x15A4 PUSH2 0x154E JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15B8 PUSH2 0x1179 JUMP JUMPDEST SWAP1 POP PUSH2 0x15C4 DUP3 DUP3 PUSH2 0x157D JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x15E4 JUMPI PUSH2 0x15E3 PUSH2 0x154E JUMP JUMPDEST JUMPDEST PUSH2 0x15ED DUP3 PUSH2 0x1297 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x161C PUSH2 0x1617 DUP5 PUSH2 0x15C9 JUMP JUMPDEST PUSH2 0x15AE JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1638 JUMPI PUSH2 0x1637 PUSH2 0x1549 JUMP JUMPDEST JUMPDEST PUSH2 0x1643 DUP5 DUP3 DUP6 PUSH2 0x15FA JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1660 JUMPI PUSH2 0x165F PUSH2 0x1544 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1670 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1609 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1693 JUMPI PUSH2 0x1692 PUSH2 0x1183 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x16A1 DUP8 DUP3 DUP9 ADD PUSH2 0x13D9 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x16B2 DUP8 DUP3 DUP9 ADD PUSH2 0x13D9 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x16C3 DUP8 DUP3 DUP9 ADD PUSH2 0x1324 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x16E4 JUMPI PUSH2 0x16E3 PUSH2 0x1188 JUMP JUMPDEST JUMPDEST PUSH2 0x16F0 DUP8 DUP3 DUP9 ADD PUSH2 0x164B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1713 JUMPI PUSH2 0x1712 PUSH2 0x1183 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1721 DUP6 DUP3 DUP7 ADD PUSH2 0x13D9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1732 DUP6 DUP3 DUP7 ADD PUSH2 0x13D9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1783 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1796 JUMPI PUSH2 0x1795 PUSH2 0x173C JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17B2 DUP3 PUSH2 0x1248 JUMP JUMPDEST PUSH2 0x17BC DUP2 DUP6 PUSH2 0x179C JUMP JUMPDEST SWAP4 POP PUSH2 0x17CC DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1264 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17E4 DUP3 DUP6 PUSH2 0x17A7 JUMP JUMPDEST SWAP2 POP PUSH2 0x17F0 DUP3 DUP5 PUSH2 0x17A7 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1823 DUP3 PUSH2 0x17FC JUMP JUMPDEST PUSH2 0x182D DUP2 DUP6 PUSH2 0x1807 JUMP JUMPDEST SWAP4 POP PUSH2 0x183D DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1264 JUMP JUMPDEST PUSH2 0x1846 DUP2 PUSH2 0x1297 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1866 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1398 JUMP JUMPDEST PUSH2 0x1873 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1398 JUMP JUMPDEST PUSH2 0x1880 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x142E JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1892 DUP2 DUP5 PUSH2 0x1818 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x18AC DUP2 PUSH2 0x11B9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18C8 JUMPI PUSH2 0x18C7 PUSH2 0x1183 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x18D6 DUP5 DUP3 DUP6 ADD PUSH2 0x189D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP8 0xFC CHAINID 0xE6 EXTCODESIZE 0x2A 0xCD 0xCB SWAP11 0xB9 DUP7 SWAP5 0xED PUSH16 0xB1C4AEBAAF4B0F638CF15BE2FEA23C1B 0xC3 MULMOD PUSH5 0x736F6C6343 STOP ADDMOD 0xE STOP CALLER ",
							"sourceMap": "916:35157:0:-:0;;;4215:158;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4290:5;4282;:13;;;;;;;;;;;;:::i;:::-;;4316:7;4306;:17;;;;;;;;;;;;:::i;:::-;;4350:15;:13;;;:15;;:::i;:::-;4334:13;:31;;;;4215:158;;916:35157;;4515:92;4571:7;4515:92;:::o;916:35157::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:75:2:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:307::-;1678:1;1688:113;1702:6;1699:1;1696:13;1688:113;;;1787:1;1782:3;1778:11;1772:18;1768:1;1763:3;1759:11;1752:39;1724:2;1721:1;1717:10;1712:15;;1688:113;;;1819:6;1816:1;1813:13;1810:101;;;1899:1;1890:6;1885:3;1881:16;1874:27;1810:101;1659:258;1610:307;;;:::o;1923:421::-;2012:5;2037:66;2053:49;2095:6;2053:49;:::i;:::-;2037:66;:::i;:::-;2028:75;;2126:6;2119:5;2112:21;2164:4;2157:5;2153:16;2202:3;2193:6;2188:3;2184:16;2181:25;2178:112;;;2209:79;;:::i;:::-;2178:112;2299:39;2331:6;2326:3;2321;2299:39;:::i;:::-;2018:326;1923:421;;;;;:::o;2364:355::-;2431:5;2480:3;2473:4;2465:6;2461:17;2457:27;2447:122;;2488:79;;:::i;:::-;2447:122;2598:6;2592:13;2623:90;2709:3;2701:6;2694:4;2686:6;2682:17;2623:90;:::i;:::-;2614:99;;2437:282;2364:355;;;;:::o;2725:853::-;2824:6;2832;2881:2;2869:9;2860:7;2856:23;2852:32;2849:119;;;2887:79;;:::i;:::-;2849:119;3028:1;3017:9;3013:17;3007:24;3058:18;3050:6;3047:30;3044:117;;;3080:79;;:::i;:::-;3044:117;3185:74;3251:7;3242:6;3231:9;3227:22;3185:74;:::i;:::-;3175:84;;2978:291;3329:2;3318:9;3314:18;3308:25;3360:18;3352:6;3349:30;3346:117;;;3382:79;;:::i;:::-;3346:117;3487:74;3553:7;3544:6;3533:9;3529:22;3487:74;:::i;:::-;3477:84;;3279:292;2725:853;;;;;:::o;3584:180::-;3632:77;3629:1;3622:88;3729:4;3726:1;3719:15;3753:4;3750:1;3743:15;3770:320;3814:6;3851:1;3845:4;3841:12;3831:22;;3898:1;3892:4;3888:12;3919:18;3909:81;;3975:4;3967:6;3963:17;3953:27;;3909:81;4037:2;4029:6;4026:14;4006:18;4003:38;4000:84;;4056:18;;:::i;:::-;4000:84;3821:269;3770:320;;;:::o;916:35157:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfers_1624": {
									"entryPoint": 4009,
									"id": 1624,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_baseURI_595": {
									"entryPoint": 4351,
									"id": 595,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_beforeTokenTransfers_1611": {
									"entryPoint": 3920,
									"id": 1611,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkContractOnERC721Received_1508": {
									"entryPoint": 4015,
									"id": 1508,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@_exists_808": {
									"entryPoint": 3501,
									"id": 808,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_extraData_1598": {
									"entryPoint": 4464,
									"id": 1598,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_getApprovedAddress_1130": {
									"entryPoint": 3813,
									"id": 1130,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@_isOwnerOrApproved_1144": {
									"entryPoint": 3852,
									"id": 1144,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_msgSenderERC721A_1634": {
									"entryPoint": 3596,
									"id": 1634,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nextExtraData_1585": {
									"entryPoint": 3926,
									"id": 1585,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_packOwnershipData_503": {
									"entryPoint": 3966,
									"id": 503,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_packedOwnershipOf_383": {
									"entryPoint": 3609,
									"id": 383,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_startTokenId_143": {
									"entryPoint": 3604,
									"id": 143,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_toString_1644": {
									"entryPoint": 4374,
									"id": 1644,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@approve_650": {
									"entryPoint": 1176,
									"id": 650,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_238": {
									"entryPoint": 2375,
									"id": 238,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getApproved_673": {
									"entryPoint": 1049,
									"id": 673,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isApprovedForAll_725": {
									"entryPoint": 3353,
									"id": 725,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_533": {
									"entryPoint": 903,
									"id": 533,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownerOf_523": {
									"entryPoint": 2357,
									"id": 523,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@safeTransferFrom_744": {
									"entryPoint": 2325,
									"id": 744,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_782": {
									"entryPoint": 3080,
									"id": 782,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setApprovalForAll_707": {
									"entryPoint": 2705,
									"id": 707,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_212": {
									"entryPoint": 757,
									"id": 212,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_543": {
									"entryPoint": 2559,
									"id": 543,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@tokenURI_586": {
									"entryPoint": 3195,
									"id": 586,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@totalSupply_168": {
									"entryPoint": 1500,
									"id": 168,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_1289": {
									"entryPoint": 1523,
									"id": 1289,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 5641,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 5081,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 5359,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 4560,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4_fromMemory": {
									"entryPoint": 6301,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 5707,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 4900,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5291,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 5884,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 5208,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 5753,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 5380,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 5102,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 4581,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 6322,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 4921,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 5016,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 4638,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 6168,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4776,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 6055,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 5166,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 6104,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 5031,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 6225,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 4653,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4833,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 5181,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 5550,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 4473,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 5577,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 6140,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 4680,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 6151,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 4691,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 6044,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 4998,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 4626,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 4493,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 4966,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4867,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory": {
									"entryPoint": 5626,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory": {
									"entryPoint": 4708,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 5995,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 5501,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 5948,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 5454,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 5444,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 5449,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 4488,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4483,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 4759,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 5058,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 5336,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 4537,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 4877,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:13793:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:2"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:2",
														"type": ""
													}
												],
												"src": "7:75:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:2"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:2"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "378:105:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "388:89:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "410:66:2",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "399:78:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "360:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "370:7:2",
														"type": ""
													}
												],
												"src": "334:149:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "531:78:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "587:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "596:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "599:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "544:42:2"
															},
															"nodeType": "YulIf",
															"src": "541:62:2"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "524:5:2",
														"type": ""
													}
												],
												"src": "489:120:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "666:86:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "676:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "685:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "714:32:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "714:32:2"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "644:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "652:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "660:5:2",
														"type": ""
													}
												],
												"src": "615:137:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "823:262:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "869:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "865:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "836:32:2"
															},
															"nodeType": "YulIf",
															"src": "833:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "962:116:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "991:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "981:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1006:62:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "793:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "804:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "816:6:2",
														"type": ""
													}
												],
												"src": "758:327:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1133:48:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1143:32:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:2"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1154:21:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1115:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1125:7:2",
														"type": ""
													}
												],
												"src": "1091:90:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1246:50:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1256:34:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:2"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1234:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1241:3:2",
														"type": ""
													}
												],
												"src": "1187:109:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1394:118:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1404:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1412:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1440:65:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1366:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1378:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1389:4:2",
														"type": ""
													}
												],
												"src": "1302:210:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1577:40:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1588:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1604:5:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1598:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1598:12:2"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1588:6:2"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1560:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1570:6:2",
														"type": ""
													}
												],
												"src": "1518:99:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1719:73:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1736:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1741:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1729:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1729:19:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1729:19:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1757:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1776:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1781:4:2",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1772:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1772:14:2"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "1757:11:2"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1691:3:2",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1696:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "1707:11:2",
														"type": ""
													}
												],
												"src": "1623:169:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1847:258:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1857:10:2",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1866:1:2",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1861:1:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1926:63:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "1951:3:2"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "1956:1:2"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1947:3:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1947:11:2"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "1970:3:2"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1975:1:2"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1966:3:2"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1966:11:2"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1960:5:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1960:18:2"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1940:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1940:39:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1940:39:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1887:1:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1890:6:2"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1884:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1884:13:2"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1898:19:2",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1900:15:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1909:1:2"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1912:2:2",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1905:3:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1905:10:2"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1900:1:2"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1880:3:2",
																"statements": []
															},
															"src": "1876:113:2"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2023:76:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "2073:3:2"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "2078:6:2"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2069:3:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2069:16:2"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2087:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2062:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2062:27:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2062:27:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "2004:1:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2007:6:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2001:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2001:13:2"
															},
															"nodeType": "YulIf",
															"src": "1998:101:2"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1829:3:2",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "1834:3:2",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1839:6:2",
														"type": ""
													}
												],
												"src": "1798:307:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2159:54:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2169:38:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2187:5:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2194:2:2",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2183:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2183:14:2"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2203:2:2",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "2199:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2199:7:2"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2179:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2179:28:2"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "2169:6:2"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2142:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "2152:6:2",
														"type": ""
													}
												],
												"src": "2111:102:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2311:272:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2321:53:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2368:5:2"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "2335:32:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2335:39:2"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2325:6:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2383:78:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2449:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2454:6:2"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2390:58:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2390:71:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2383:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2496:5:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2503:4:2",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2492:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2492:16:2"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2510:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2515:6:2"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "2470:21:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2470:52:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2470:52:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2531:46:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2542:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2569:6:2"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "2547:21:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2547:29:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2538:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2538:39:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2531:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2292:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2299:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2307:3:2",
														"type": ""
													}
												],
												"src": "2219:364:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2707:195:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2717:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2729:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2740:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2725:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2725:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2717:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2764:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2775:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2760:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2760:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "2783:4:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2789:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2779:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2779:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2753:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2753:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2753:47:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2809:86:2",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2881:6:2"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "2890:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2817:63:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2817:78:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2809:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2679:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2691:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2702:4:2",
														"type": ""
													}
												],
												"src": "2589:313:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2953:32:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2963:16:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2974:5:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2963:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2935:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2945:7:2",
														"type": ""
													}
												],
												"src": "2908:77:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3034:79:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3091:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3100:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3103:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3093:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3093:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3093:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3057:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3082:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "3064:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3064:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3054:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3054:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3047:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3047:43:2"
															},
															"nodeType": "YulIf",
															"src": "3044:63:2"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3027:5:2",
														"type": ""
													}
												],
												"src": "2991:122:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3171:87:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3181:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3203:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3190:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3190:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3181:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3246:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3219:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3219:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3219:33:2"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3149:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3157:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3165:5:2",
														"type": ""
													}
												],
												"src": "3119:139:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3330:263:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3376:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3378:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3378:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3378:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3351:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3360:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3347:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3347:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3372:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3343:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3343:32:2"
															},
															"nodeType": "YulIf",
															"src": "3340:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "3469:117:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3484:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3498:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3488:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3513:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3548:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3559:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3544:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3544:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3568:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3523:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3523:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3513:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3300:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3311:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3323:6:2",
														"type": ""
													}
												],
												"src": "3264:329:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3644:81:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3654:65:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3669:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3676:42:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3665:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3665:54:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3654:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3626:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3636:7:2",
														"type": ""
													}
												],
												"src": "3599:126:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3776:51:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3786:35:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3815:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "3797:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3797:24:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3786:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3758:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3768:7:2",
														"type": ""
													}
												],
												"src": "3731:96:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3898:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3915:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3938:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3920:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3920:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3908:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3908:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3908:37:2"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3886:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3893:3:2",
														"type": ""
													}
												],
												"src": "3833:118:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4055:124:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4065:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4077:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4088:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4073:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4073:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4065:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4145:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4158:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4169:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4154:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4154:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4101:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4101:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4101:71:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4027:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4039:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4050:4:2",
														"type": ""
													}
												],
												"src": "3957:222:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4228:79:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4285:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4294:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4297:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4287:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4287:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4287:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4251:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4276:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "4258:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4258:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4248:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4248:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4241:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4241:43:2"
															},
															"nodeType": "YulIf",
															"src": "4238:63:2"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4221:5:2",
														"type": ""
													}
												],
												"src": "4185:122:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4365:87:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4375:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4397:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4384:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4384:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "4375:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4440:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "4413:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4413:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4413:33:2"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4343:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4351:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4359:5:2",
														"type": ""
													}
												],
												"src": "4313:139:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4541:391:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4587:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4589:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4589:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4589:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4562:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4571:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4558:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4558:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4583:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4554:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4554:32:2"
															},
															"nodeType": "YulIf",
															"src": "4551:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "4680:117:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4695:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4709:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4699:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4724:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4759:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4770:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4755:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4755:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4779:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4734:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4734:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4724:6:2"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4807:118:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4822:16:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4836:2:2",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4826:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4852:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4887:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4898:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4883:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4883:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4907:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4862:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4862:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4852:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4503:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4514:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4526:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4534:6:2",
														"type": ""
													}
												],
												"src": "4458:474:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5003:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5020:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5043:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5025:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5025:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5013:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5013:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5013:37:2"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4991:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4998:3:2",
														"type": ""
													}
												],
												"src": "4938:118:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5160:124:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5170:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5182:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5193:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5178:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5178:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5170:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5250:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5263:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5274:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5259:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5259:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5206:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5206:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5206:71:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5132:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5144:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5155:4:2",
														"type": ""
													}
												],
												"src": "5062:222:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5390:519:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5436:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5438:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5438:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5438:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5411:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5420:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5407:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5407:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5432:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5403:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5403:32:2"
															},
															"nodeType": "YulIf",
															"src": "5400:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "5529:117:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5544:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5558:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5548:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5573:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5608:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5619:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5604:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5604:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5628:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5583:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5583:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5573:6:2"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5656:118:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5671:16:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5685:2:2",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5675:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5701:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5736:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5747:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5732:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5732:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5756:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5711:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5711:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "5701:6:2"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5784:118:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5799:16:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5813:2:2",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5803:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5829:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5864:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5875:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5860:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5860:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5884:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5839:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5839:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "5829:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5344:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5355:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5367:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5375:6:2",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5383:6:2",
														"type": ""
													}
												],
												"src": "5290:619:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5981:263:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6027:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "6029:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6029:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6029:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6002:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6011:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5998:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5998:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6023:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5994:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5994:32:2"
															},
															"nodeType": "YulIf",
															"src": "5991:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "6120:117:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6135:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6149:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6139:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6164:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6199:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6210:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6195:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6195:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6219:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6174:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6174:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6164:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5951:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5962:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5974:6:2",
														"type": ""
													}
												],
												"src": "5915:329:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6290:76:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6344:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6353:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6356:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6346:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6346:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6346:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6313:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6335:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "6320:14:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6320:21:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "6310:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6310:32:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6303:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6303:40:2"
															},
															"nodeType": "YulIf",
															"src": "6300:60:2"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6283:5:2",
														"type": ""
													}
												],
												"src": "6250:116:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6421:84:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6431:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6453:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6440:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6440:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "6431:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6493:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "6469:23:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6469:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6469:30:2"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "6399:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6407:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6415:5:2",
														"type": ""
													}
												],
												"src": "6372:133:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6591:388:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6637:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "6639:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6639:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6639:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6612:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6621:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6608:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6608:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6633:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6604:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6604:32:2"
															},
															"nodeType": "YulIf",
															"src": "6601:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "6730:117:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6745:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6759:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6749:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6774:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6809:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6820:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6805:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6805:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6829:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6784:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6784:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6774:6:2"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6857:115:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6872:16:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6886:2:2",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6876:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6902:60:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6934:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6945:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6930:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6930:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6954:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "6912:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6912:50:2"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "6902:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6553:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6564:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6576:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6584:6:2",
														"type": ""
													}
												],
												"src": "6511:468:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7074:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7091:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7094:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7084:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7084:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7084:12:2"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "6985:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7197:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7214:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7217:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7207:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7207:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7207:12:2"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "7108:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7259:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7276:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7279:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7269:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7269:88:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7269:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7373:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7376:4:2",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7366:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7366:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7366:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7397:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7400:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7390:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7390:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7390:15:2"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "7231:180:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7460:238:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7470:58:2",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "7492:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "7522:4:2"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "7500:21:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7500:27:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7488:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7488:40:2"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "7474:10:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7639:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "7641:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7641:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7641:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "7582:10:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7594:18:2",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "7579:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7579:34:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "7618:10:2"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7630:6:2"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "7615:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7615:22:2"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7576:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7576:62:2"
															},
															"nodeType": "YulIf",
															"src": "7573:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7677:2:2",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "7681:10:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7670:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7670:22:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7670:22:2"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7446:6:2",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "7454:4:2",
														"type": ""
													}
												],
												"src": "7417:281:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7745:88:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7755:30:2",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "7765:18:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7765:20:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "7755:6:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "7814:6:2"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "7822:4:2"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "7794:19:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7794:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7794:33:2"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "7729:4:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7738:6:2",
														"type": ""
													}
												],
												"src": "7704:129:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7905:241:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8010:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "8012:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8012:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8012:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7982:6:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7990:18:2",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7979:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7979:30:2"
															},
															"nodeType": "YulIf",
															"src": "7976:56:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8042:37:2",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8072:6:2"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "8050:21:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8050:29:2"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "8042:4:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8116:23:2",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "8128:4:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8134:4:2",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8124:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8124:15:2"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "8116:4:2"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7889:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "7900:4:2",
														"type": ""
													}
												],
												"src": "7839:307:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8203:103:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "8226:3:2"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "8231:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8236:6:2"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "8213:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8213:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8213:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "8284:3:2"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8289:6:2"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8280:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8280:16:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8298:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8273:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8273:27:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8273:27:2"
														}
													]
												},
												"name": "copy_calldata_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "8185:3:2",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "8190:3:2",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8195:6:2",
														"type": ""
													}
												],
												"src": "8152:154:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8395:327:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8405:74:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8471:6:2"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "8430:40:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8430:48:2"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "8414:15:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8414:65:2"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "8405:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "8495:5:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8502:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8488:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8488:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8488:21:2"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8518:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "8533:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8540:4:2",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8529:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8529:16:2"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "8522:3:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8583:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "8585:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8585:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8585:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "8564:3:2"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8569:6:2"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8560:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8560:16:2"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "8578:3:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8557:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8557:25:2"
															},
															"nodeType": "YulIf",
															"src": "8554:112:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "8699:3:2"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "8704:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8709:6:2"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "8675:23:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8675:41:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8675:41:2"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "8368:3:2",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8373:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8381:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "8389:5:2",
														"type": ""
													}
												],
												"src": "8312:410:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8802:277:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8851:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "8853:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8853:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8853:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8830:6:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8838:4:2",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8826:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8826:17:2"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "8845:3:2"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "8822:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8822:27:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8815:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8815:35:2"
															},
															"nodeType": "YulIf",
															"src": "8812:122:2"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8943:34:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "8970:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8957:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8957:20:2"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "8947:6:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8986:87:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "9046:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9054:4:2",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9042:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9042:17:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9061:6:2"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "9069:3:2"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "8995:46:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8995:78:2"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "8986:5:2"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "8780:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8788:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "8796:5:2",
														"type": ""
													}
												],
												"src": "8741:338:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9211:817:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9258:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "9260:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9260:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9260:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9232:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9241:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9228:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9228:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9253:3:2",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "9224:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9224:33:2"
															},
															"nodeType": "YulIf",
															"src": "9221:120:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "9351:117:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9366:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9380:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9370:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9395:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9430:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9441:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9426:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9426:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9450:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "9405:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9405:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "9395:6:2"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9478:118:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9493:16:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9507:2:2",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9497:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9523:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9558:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9569:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9554:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9554:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9578:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "9533:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9533:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "9523:6:2"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9606:118:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9621:16:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9635:2:2",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9625:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9651:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9686:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9697:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9682:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9682:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9706:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "9661:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9661:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "9651:6:2"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9734:287:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9749:46:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9780:9:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9791:2:2",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9776:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9776:18:2"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "9763:12:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9763:32:2"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9753:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "9842:83:2",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "9844:77:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9844:79:2"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "9844:79:2"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "9814:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9822:18:2",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "9811:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9811:30:2"
																	},
																	"nodeType": "YulIf",
																	"src": "9808:117:2"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9939:72:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9983:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9994:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9979:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9979:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10003:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "9949:29:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9949:62:2"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "9939:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9157:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "9168:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9180:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9188:6:2",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "9196:6:2",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "9204:6:2",
														"type": ""
													}
												],
												"src": "9085:943:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10117:391:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10163:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "10165:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10165:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10165:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10138:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10147:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10134:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10134:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10159:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "10130:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "10130:32:2"
															},
															"nodeType": "YulIf",
															"src": "10127:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "10256:117:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10271:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10285:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "10275:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "10300:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10335:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10346:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10331:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10331:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10355:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "10310:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10310:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "10300:6:2"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "10383:118:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10398:16:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10412:2:2",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "10402:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "10428:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10463:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10474:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10459:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10459:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10483:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "10438:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10438:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "10428:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10079:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "10090:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10102:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10110:6:2",
														"type": ""
													}
												],
												"src": "10034:474:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10542:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10559:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10562:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10552:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "10552:88:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10552:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10656:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10659:4:2",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10649:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "10649:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10649:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10680:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10683:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "10673:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "10673:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10673:15:2"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "10514:180:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10751:269:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10761:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "10775:4:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10781:1:2",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "10771:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "10771:12:2"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "10761:6:2"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10792:38:2",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "10822:4:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10828:1:2",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "10818:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "10818:12:2"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "10796:18:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10869:51:2",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "10883:27:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "10897:6:2"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10905:4:2",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "10893:3:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10893:17:2"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "10883:6:2"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "10849:18:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10842:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "10842:26:2"
															},
															"nodeType": "YulIf",
															"src": "10839:81:2"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10972:42:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "10986:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10986:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10986:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "10936:18:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "10959:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10967:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "10956:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10956:14:2"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "10933:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "10933:38:2"
															},
															"nodeType": "YulIf",
															"src": "10930:84:2"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "10735:4:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10744:6:2",
														"type": ""
													}
												],
												"src": "10700:320:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11140:34:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11150:18:2",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "11165:3:2"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "11150:11:2"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11112:3:2",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "11117:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "11128:11:2",
														"type": ""
													}
												],
												"src": "11026:148:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11290:267:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11300:53:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11347:5:2"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "11314:32:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "11314:39:2"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "11304:6:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11362:96:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11446:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11451:6:2"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11369:76:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "11369:89:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11362:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "11493:5:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11500:4:2",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11489:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11489:16:2"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11507:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11512:6:2"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "11467:21:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "11467:52:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11467:52:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11528:23:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11539:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11544:6:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11535:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "11535:16:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11528:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11271:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11278:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11286:3:2",
														"type": ""
													}
												],
												"src": "11180:377:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11747:251:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11758:102:2",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11847:6:2"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11856:3:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11765:81:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "11765:95:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11758:3:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11870:102:2",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "11959:6:2"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11968:3:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11877:81:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "11877:95:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11870:3:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11982:10:2",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "11989:3:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11982:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11718:3:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "11724:6:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11732:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11743:3:2",
														"type": ""
													}
												],
												"src": "11563:435:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12062:40:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12073:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12089:5:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "12083:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "12083:12:2"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "12073:6:2"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12045:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "12055:6:2",
														"type": ""
													}
												],
												"src": "12004:98:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12203:73:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12220:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12225:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12213:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "12213:19:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12213:19:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12241:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12260:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12265:4:2",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12256:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "12256:14:2"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "12241:11:2"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12175:3:2",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "12180:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "12191:11:2",
														"type": ""
													}
												],
												"src": "12108:168:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12372:270:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12382:52:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12428:5:2"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "12396:31:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "12396:38:2"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "12386:6:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12443:77:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12508:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12513:6:2"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12450:57:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "12450:70:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "12443:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "12555:5:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12562:4:2",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12551:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12551:16:2"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12569:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12574:6:2"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "12529:21:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "12529:52:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12529:52:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12590:46:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12601:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "12628:6:2"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "12606:21:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12606:29:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12597:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "12597:39:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12590:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12353:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12360:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12368:3:2",
														"type": ""
													}
												],
												"src": "12282:360:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12848:440:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12858:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12870:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12881:3:2",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12866:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "12866:19:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12858:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "12939:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12952:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12963:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12948:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12948:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12895:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "12895:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12895:71:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "13020:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13033:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13044:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13029:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13029:18:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12976:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "12976:72:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12976:72:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "13102:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13115:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13126:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13111:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13111:18:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13058:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "13058:72:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13058:72:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13151:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13162:2:2",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13147:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13147:18:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "13171:4:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13177:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13167:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13167:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13140:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "13140:48:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13140:48:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13197:84:2",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "13267:6:2"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "13276:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13205:61:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "13205:76:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13197:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12796:9:2",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "12808:6:2",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "12816:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "12824:6:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12832:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12843:4:2",
														"type": ""
													}
												],
												"src": "12648:640:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13356:79:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13366:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "13381:6:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "13375:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "13375:13:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "13366:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13423:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "13397:25:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "13397:32:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13397:32:2"
														}
													]
												},
												"name": "abi_decode_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "13334:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13342:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13350:5:2",
														"type": ""
													}
												],
												"src": "13294:141:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13517:273:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13563:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "13565:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13565:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13565:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "13538:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13547:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13534:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13534:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13559:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "13530:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "13530:32:2"
															},
															"nodeType": "YulIf",
															"src": "13527:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "13656:127:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "13671:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13685:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "13675:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "13700:73:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "13745:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "13756:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "13741:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13741:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "13765:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "13710:30:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13710:63:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "13700:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13487:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "13498:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13510:6:2",
														"type": ""
													}
												],
												"src": "13441:349:2"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100ea5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb4651461025d578063b88d4fde14610279578063c87b56dd14610295578063e985e9c5146102c5576100ea565b80636352211e146101df57806370a082311461020f57806395d89b411461023f576100ea565b8063095ea7b3116100c8578063095ea7b31461016d57806318160ddd1461018957806323b872dd146101a757806342842e0e146101c3576100ea565b806301ffc9a7146100ef57806306fdde031461011f578063081812fc1461013d575b600080fd5b610109600480360381019061010491906111e5565b6102f5565b604051610116919061122d565b60405180910390f35b610127610387565b60405161013491906112e1565b60405180910390f35b61015760048036038101906101529190611339565b610419565b60405161016491906113a7565b60405180910390f35b610187600480360381019061018291906113ee565b610498565b005b6101916105dc565b60405161019e919061143d565b60405180910390f35b6101c160048036038101906101bc9190611458565b6105f3565b005b6101dd60048036038101906101d89190611458565b610915565b005b6101f960048036038101906101f49190611339565b610935565b60405161020691906113a7565b60405180910390f35b610229600480360381019061022491906114ab565b610947565b604051610236919061143d565b60405180910390f35b6102476109ff565b60405161025491906112e1565b60405180910390f35b61027760048036038101906102729190611504565b610a91565b005b610293600480360381019061028e9190611679565b610c08565b005b6102af60048036038101906102aa9190611339565b610c7b565b6040516102bc91906112e1565b60405180910390f35b6102df60048036038101906102da91906116fc565b610d19565b6040516102ec919061122d565b60405180910390f35b60006301ffc9a760e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061035057506380ac58cd60e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806103805750635b5e139f60e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b6060600280546103969061176b565b80601f01602080910402602001604051908101604052809291908181526020018280546103c29061176b565b801561040f5780601f106103e45761010080835404028352916020019161040f565b820191906000526020600020905b8154815290600101906020018083116103f257829003601f168201915b5050505050905090565b600061042482610dad565b61045a576040517fcf4700e400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6006600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006104a382610935565b90508073ffffffffffffffffffffffffffffffffffffffff166104c4610e0c565b73ffffffffffffffffffffffffffffffffffffffff1614610527576104f0816104eb610e0c565b610d19565b610526576040517fcfb3b94200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b826006600084815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b60006105e6610e14565b6001546000540303905090565b60006105fe82610e19565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610665576040517fa114810000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008061067184610ee5565b915091506106878187610682610e0c565b610f0c565b6106d35761069c86610697610e0c565b610d19565b6106d2576040517f59c896be00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603610739576040517fea553b3400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6107468686866001610f50565b801561075157600082555b600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600081546001900391905081905550600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600081546001019190508190555061081f856107fb888887610f56565b7c020000000000000000000000000000000000000000000000000000000017610f7e565b600460008681526020019081526020016000208190555060007c02000000000000000000000000000000000000000000000000000000008416036108a557600060018501905060006004600083815260200190815260200160002054036108a35760005481146108a2578360046000838152602001908152602001600020819055505b5b505b838573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a461090d8686866001610fa9565b505050505050565b61093083838360405180602001604052806000815250610c08565b505050565b600061094082610e19565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036109ae576040517f8f4eb60400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b67ffffffffffffffff600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054169050919050565b606060038054610a0e9061176b565b80601f0160208091040260200160405190810160405280929190818152602001828054610a3a9061176b565b8015610a875780601f10610a5c57610100808354040283529160200191610a87565b820191906000526020600020905b815481529060010190602001808311610a6a57829003601f168201915b5050505050905090565b610a99610e0c565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610afd576040517fb06307db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060076000610b0a610e0c565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff16610bb7610e0c565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610bfc919061122d565b60405180910390a35050565b610c138484846105f3565b60008373ffffffffffffffffffffffffffffffffffffffff163b14610c7557610c3e84848484610faf565b610c74576040517fd1a57ed600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b50505050565b6060610c8682610dad565b610cbc576040517fa14c4b5000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610cc66110ff565b90506000815103610ce65760405180602001604052806000815250610d11565b80610cf084611116565b604051602001610d019291906117d8565b6040516020818303038152906040525b915050919050565b6000600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600081610db8610e14565b11158015610dc7575060005482105b8015610e05575060007c0100000000000000000000000000000000000000000000000000000000600460008581526020019081526020016000205416145b9050919050565b600033905090565b600090565b60008082905080610e28610e14565b11610eae57600054811015610ead5760006004600083815260200190815260200160002054905060007c0100000000000000000000000000000000000000000000000000000000821603610eab575b60008103610ea1576004600083600190039350838152602001908152602001600020549050610e77565b8092505050610ee0565b505b5b6040517fdf2d9b4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b919050565b60008060006006600085815260200190815260200160002090508092508254915050915091565b600073ffffffffffffffffffffffffffffffffffffffff8316925073ffffffffffffffffffffffffffffffffffffffff821691508382148383141790509392505050565b50505050565b60008060e883901c905060e8610f6d868684611170565b62ffffff16901b9150509392505050565b600073ffffffffffffffffffffffffffffffffffffffff83169250814260a01b178317905092915050565b50505050565b60008373ffffffffffffffffffffffffffffffffffffffff1663150b7a02610fd5610e0c565b8786866040518563ffffffff1660e01b8152600401610ff79493929190611851565b6020604051808303816000875af192505050801561103357506040513d601f19601f8201168201806040525081019061103091906118b2565b60015b6110ac573d8060008114611063576040519150601f19603f3d011682016040523d82523d6000602084013e611068565b606091505b5060008151036110a4576040517fd1a57ed600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050949350505050565b606060405180602001604052806000815250905090565b60606080604051019050806040528082600183039250600a81066030018353600a810490505b801561115c57600183039250600a81066030018353600a8104905061113c565b508181036020830392508083525050919050565b60009392505050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6111c28161118d565b81146111cd57600080fd5b50565b6000813590506111df816111b9565b92915050565b6000602082840312156111fb576111fa611183565b5b6000611209848285016111d0565b91505092915050565b60008115159050919050565b61122781611212565b82525050565b6000602082019050611242600083018461121e565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611282578082015181840152602081019050611267565b83811115611291576000848401525b50505050565b6000601f19601f8301169050919050565b60006112b382611248565b6112bd8185611253565b93506112cd818560208601611264565b6112d681611297565b840191505092915050565b600060208201905081810360008301526112fb81846112a8565b905092915050565b6000819050919050565b61131681611303565b811461132157600080fd5b50565b6000813590506113338161130d565b92915050565b60006020828403121561134f5761134e611183565b5b600061135d84828501611324565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061139182611366565b9050919050565b6113a181611386565b82525050565b60006020820190506113bc6000830184611398565b92915050565b6113cb81611386565b81146113d657600080fd5b50565b6000813590506113e8816113c2565b92915050565b6000806040838503121561140557611404611183565b5b6000611413858286016113d9565b925050602061142485828601611324565b9150509250929050565b61143781611303565b82525050565b6000602082019050611452600083018461142e565b92915050565b60008060006060848603121561147157611470611183565b5b600061147f868287016113d9565b9350506020611490868287016113d9565b92505060406114a186828701611324565b9150509250925092565b6000602082840312156114c1576114c0611183565b5b60006114cf848285016113d9565b91505092915050565b6114e181611212565b81146114ec57600080fd5b50565b6000813590506114fe816114d8565b92915050565b6000806040838503121561151b5761151a611183565b5b6000611529858286016113d9565b925050602061153a858286016114ef565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61158682611297565b810181811067ffffffffffffffff821117156115a5576115a461154e565b5b80604052505050565b60006115b8611179565b90506115c4828261157d565b919050565b600067ffffffffffffffff8211156115e4576115e361154e565b5b6115ed82611297565b9050602081019050919050565b82818337600083830152505050565b600061161c611617846115c9565b6115ae565b90508281526020810184848401111561163857611637611549565b5b6116438482856115fa565b509392505050565b600082601f8301126116605761165f611544565b5b8135611670848260208601611609565b91505092915050565b6000806000806080858703121561169357611692611183565b5b60006116a1878288016113d9565b94505060206116b2878288016113d9565b93505060406116c387828801611324565b925050606085013567ffffffffffffffff8111156116e4576116e3611188565b5b6116f08782880161164b565b91505092959194509250565b6000806040838503121561171357611712611183565b5b6000611721858286016113d9565b9250506020611732858286016113d9565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061178357607f821691505b6020821081036117965761179561173c565b5b50919050565b600081905092915050565b60006117b282611248565b6117bc818561179c565b93506117cc818560208601611264565b80840191505092915050565b60006117e482856117a7565b91506117f082846117a7565b91508190509392505050565b600081519050919050565b600082825260208201905092915050565b6000611823826117fc565b61182d8185611807565b935061183d818560208601611264565b61184681611297565b840191505092915050565b60006080820190506118666000830187611398565b6118736020830186611398565b611880604083018561142e565b81810360608301526118928184611818565b905095945050505050565b6000815190506118ac816111b9565b92915050565b6000602082840312156118c8576118c7611183565b5b60006118d68482850161189d565b9150509291505056fea264697066735822122087fc46e63b2acdcb9ab98694ed6fb1c4aebaaf4b0f638cf15be2fea23c1bc30964736f6c634300080e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x25D JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x279 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x295 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x2C5 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x1DF JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x20F JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x23F JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x16D JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x189 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1A7 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1C3 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x13D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x109 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x104 SWAP2 SWAP1 PUSH2 0x11E5 JUMP JUMPDEST PUSH2 0x2F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x116 SWAP2 SWAP1 PUSH2 0x122D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x127 PUSH2 0x387 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x134 SWAP2 SWAP1 PUSH2 0x12E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x152 SWAP2 SWAP1 PUSH2 0x1339 JUMP JUMPDEST PUSH2 0x419 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x164 SWAP2 SWAP1 PUSH2 0x13A7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x187 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x182 SWAP2 SWAP1 PUSH2 0x13EE JUMP JUMPDEST PUSH2 0x498 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x191 PUSH2 0x5DC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19E SWAP2 SWAP1 PUSH2 0x143D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BC SWAP2 SWAP1 PUSH2 0x1458 JUMP JUMPDEST PUSH2 0x5F3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1DD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D8 SWAP2 SWAP1 PUSH2 0x1458 JUMP JUMPDEST PUSH2 0x915 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F4 SWAP2 SWAP1 PUSH2 0x1339 JUMP JUMPDEST PUSH2 0x935 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x206 SWAP2 SWAP1 PUSH2 0x13A7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x229 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x224 SWAP2 SWAP1 PUSH2 0x14AB JUMP JUMPDEST PUSH2 0x947 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x236 SWAP2 SWAP1 PUSH2 0x143D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x247 PUSH2 0x9FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x254 SWAP2 SWAP1 PUSH2 0x12E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x277 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x272 SWAP2 SWAP1 PUSH2 0x1504 JUMP JUMPDEST PUSH2 0xA91 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x293 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x28E SWAP2 SWAP1 PUSH2 0x1679 JUMP JUMPDEST PUSH2 0xC08 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2AF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2AA SWAP2 SWAP1 PUSH2 0x1339 JUMP JUMPDEST PUSH2 0xC7B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BC SWAP2 SWAP1 PUSH2 0x12E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2DA SWAP2 SWAP1 PUSH2 0x16FC JUMP JUMPDEST PUSH2 0xD19 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2EC SWAP2 SWAP1 PUSH2 0x122D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x350 JUMPI POP PUSH4 0x80AC58CD PUSH1 0xE0 SHL DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x380 JUMPI POP PUSH4 0x5B5E139F PUSH1 0xE0 SHL DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x396 SWAP1 PUSH2 0x176B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3C2 SWAP1 PUSH2 0x176B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x40F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3E4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x40F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3F2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x424 DUP3 PUSH2 0xDAD JUMP JUMPDEST PUSH2 0x45A JUMPI PUSH1 0x40 MLOAD PUSH32 0xCF4700E400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A3 DUP3 PUSH2 0x935 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x4C4 PUSH2 0xE0C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x527 JUMPI PUSH2 0x4F0 DUP2 PUSH2 0x4EB PUSH2 0xE0C JUMP JUMPDEST PUSH2 0xD19 JUMP JUMPDEST PUSH2 0x526 JUMPI PUSH1 0x40 MLOAD PUSH32 0xCFB3B94200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST DUP3 PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5E6 PUSH2 0xE14 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SLOAD SUB SUB SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5FE DUP3 PUSH2 0xE19 JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x665 JUMPI PUSH1 0x40 MLOAD PUSH32 0xA114810000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x671 DUP5 PUSH2 0xEE5 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x687 DUP2 DUP8 PUSH2 0x682 PUSH2 0xE0C JUMP JUMPDEST PUSH2 0xF0C JUMP JUMPDEST PUSH2 0x6D3 JUMPI PUSH2 0x69C DUP7 PUSH2 0x697 PUSH2 0xE0C JUMP JUMPDEST PUSH2 0xD19 JUMP JUMPDEST PUSH2 0x6D2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x59C896BE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x739 JUMPI PUSH1 0x40 MLOAD PUSH32 0xEA553B3400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x746 DUP7 DUP7 DUP7 PUSH1 0x1 PUSH2 0xF50 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x751 JUMPI PUSH1 0x0 DUP3 SSTORE JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD PUSH1 0x1 SWAP1 SUB SWAP2 SWAP1 POP DUP2 SWAP1 SSTORE POP PUSH1 0x5 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD PUSH1 0x1 ADD SWAP2 SWAP1 POP DUP2 SWAP1 SSTORE POP PUSH2 0x81F DUP6 PUSH2 0x7FB DUP9 DUP9 DUP8 PUSH2 0xF56 JUMP JUMPDEST PUSH29 0x200000000000000000000000000000000000000000000000000000000 OR PUSH2 0xF7E JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH29 0x200000000000000000000000000000000000000000000000000000000 DUP5 AND SUB PUSH2 0x8A5 JUMPI PUSH1 0x0 PUSH1 0x1 DUP6 ADD SWAP1 POP PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SUB PUSH2 0x8A3 JUMPI PUSH1 0x0 SLOAD DUP2 EQ PUSH2 0x8A2 JUMPI DUP4 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST POP JUMPDEST DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x90D DUP7 DUP7 DUP7 PUSH1 0x1 PUSH2 0xFA9 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x930 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xC08 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x940 DUP3 PUSH2 0xE19 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9AE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8F4EB60400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0xA0E SWAP1 PUSH2 0x176B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xA3A SWAP1 PUSH2 0x176B JUMP JUMPDEST DUP1 ISZERO PUSH2 0xA87 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA5C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA87 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA6A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xA99 PUSH2 0xE0C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAFD JUMPI PUSH1 0x40 MLOAD PUSH32 0xB06307DB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x7 PUSH1 0x0 PUSH2 0xB0A PUSH2 0xE0C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xBB7 PUSH2 0xE0C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xBFC SWAP2 SWAP1 PUSH2 0x122D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xC13 DUP5 DUP5 DUP5 PUSH2 0x5F3 JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ PUSH2 0xC75 JUMPI PUSH2 0xC3E DUP5 DUP5 DUP5 DUP5 PUSH2 0xFAF JUMP JUMPDEST PUSH2 0xC74 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD1A57ED600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xC86 DUP3 PUSH2 0xDAD JUMP JUMPDEST PUSH2 0xCBC JUMPI PUSH1 0x40 MLOAD PUSH32 0xA14C4B5000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xCC6 PUSH2 0x10FF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0xCE6 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xD11 JUMP JUMPDEST DUP1 PUSH2 0xCF0 DUP5 PUSH2 0x1116 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xD01 SWAP3 SWAP2 SWAP1 PUSH2 0x17D8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0xDB8 PUSH2 0xE14 JUMP JUMPDEST GT ISZERO DUP1 ISZERO PUSH2 0xDC7 JUMPI POP PUSH1 0x0 SLOAD DUP3 LT JUMPDEST DUP1 ISZERO PUSH2 0xE05 JUMPI POP PUSH1 0x0 PUSH29 0x100000000000000000000000000000000000000000000000000000000 PUSH1 0x4 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD AND EQ JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP1 POP DUP1 PUSH2 0xE28 PUSH2 0xE14 JUMP JUMPDEST GT PUSH2 0xEAE JUMPI PUSH1 0x0 SLOAD DUP2 LT ISZERO PUSH2 0xEAD JUMPI PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 PUSH29 0x100000000000000000000000000000000000000000000000000000000 DUP3 AND SUB PUSH2 0xEAB JUMPI JUMPDEST PUSH1 0x0 DUP2 SUB PUSH2 0xEA1 JUMPI PUSH1 0x4 PUSH1 0x0 DUP4 PUSH1 0x1 SWAP1 SUB SWAP4 POP DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH2 0xE77 JUMP JUMPDEST DUP1 SWAP3 POP POP POP PUSH2 0xEE0 JUMP JUMPDEST POP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xDF2D9B4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 SWAP3 POP DUP3 SLOAD SWAP2 POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP3 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP2 POP DUP4 DUP3 EQ DUP4 DUP4 EQ OR SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xE8 DUP4 SWAP1 SHR SWAP1 POP PUSH1 0xE8 PUSH2 0xF6D DUP7 DUP7 DUP5 PUSH2 0x1170 JUMP JUMPDEST PUSH3 0xFFFFFF AND SWAP1 SHL SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP3 POP DUP2 TIMESTAMP PUSH1 0xA0 SHL OR DUP4 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0xFD5 PUSH2 0xE0C JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFF7 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1851 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1033 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1030 SWAP2 SWAP1 PUSH2 0x18B2 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x10AC JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1063 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1068 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x10A4 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD1A57ED600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x80 PUSH1 0x40 MLOAD ADD SWAP1 POP DUP1 PUSH1 0x40 MSTORE DUP1 DUP3 PUSH1 0x1 DUP4 SUB SWAP3 POP PUSH1 0xA DUP2 MOD PUSH1 0x30 ADD DUP4 MSTORE8 PUSH1 0xA DUP2 DIV SWAP1 POP JUMPDEST DUP1 ISZERO PUSH2 0x115C JUMPI PUSH1 0x1 DUP4 SUB SWAP3 POP PUSH1 0xA DUP2 MOD PUSH1 0x30 ADD DUP4 MSTORE8 PUSH1 0xA DUP2 DIV SWAP1 POP PUSH2 0x113C JUMP JUMPDEST POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 SUB SWAP3 POP DUP1 DUP4 MSTORE POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11C2 DUP2 PUSH2 0x118D JUMP JUMPDEST DUP2 EQ PUSH2 0x11CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x11DF DUP2 PUSH2 0x11B9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11FB JUMPI PUSH2 0x11FA PUSH2 0x1183 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1209 DUP5 DUP3 DUP6 ADD PUSH2 0x11D0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1227 DUP2 PUSH2 0x1212 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1242 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x121E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1282 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1267 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1291 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12B3 DUP3 PUSH2 0x1248 JUMP JUMPDEST PUSH2 0x12BD DUP2 DUP6 PUSH2 0x1253 JUMP JUMPDEST SWAP4 POP PUSH2 0x12CD DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1264 JUMP JUMPDEST PUSH2 0x12D6 DUP2 PUSH2 0x1297 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x12FB DUP2 DUP5 PUSH2 0x12A8 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1316 DUP2 PUSH2 0x1303 JUMP JUMPDEST DUP2 EQ PUSH2 0x1321 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1333 DUP2 PUSH2 0x130D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x134F JUMPI PUSH2 0x134E PUSH2 0x1183 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x135D DUP5 DUP3 DUP6 ADD PUSH2 0x1324 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1391 DUP3 PUSH2 0x1366 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13A1 DUP2 PUSH2 0x1386 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13BC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1398 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x13CB DUP2 PUSH2 0x1386 JUMP JUMPDEST DUP2 EQ PUSH2 0x13D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x13E8 DUP2 PUSH2 0x13C2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1405 JUMPI PUSH2 0x1404 PUSH2 0x1183 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1413 DUP6 DUP3 DUP7 ADD PUSH2 0x13D9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1424 DUP6 DUP3 DUP7 ADD PUSH2 0x1324 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1437 DUP2 PUSH2 0x1303 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1452 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x142E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1471 JUMPI PUSH2 0x1470 PUSH2 0x1183 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x147F DUP7 DUP3 DUP8 ADD PUSH2 0x13D9 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1490 DUP7 DUP3 DUP8 ADD PUSH2 0x13D9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x14A1 DUP7 DUP3 DUP8 ADD PUSH2 0x1324 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14C1 JUMPI PUSH2 0x14C0 PUSH2 0x1183 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x14CF DUP5 DUP3 DUP6 ADD PUSH2 0x13D9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x14E1 DUP2 PUSH2 0x1212 JUMP JUMPDEST DUP2 EQ PUSH2 0x14EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x14FE DUP2 PUSH2 0x14D8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x151B JUMPI PUSH2 0x151A PUSH2 0x1183 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1529 DUP6 DUP3 DUP7 ADD PUSH2 0x13D9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x153A DUP6 DUP3 DUP7 ADD PUSH2 0x14EF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1586 DUP3 PUSH2 0x1297 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x15A5 JUMPI PUSH2 0x15A4 PUSH2 0x154E JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15B8 PUSH2 0x1179 JUMP JUMPDEST SWAP1 POP PUSH2 0x15C4 DUP3 DUP3 PUSH2 0x157D JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x15E4 JUMPI PUSH2 0x15E3 PUSH2 0x154E JUMP JUMPDEST JUMPDEST PUSH2 0x15ED DUP3 PUSH2 0x1297 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x161C PUSH2 0x1617 DUP5 PUSH2 0x15C9 JUMP JUMPDEST PUSH2 0x15AE JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1638 JUMPI PUSH2 0x1637 PUSH2 0x1549 JUMP JUMPDEST JUMPDEST PUSH2 0x1643 DUP5 DUP3 DUP6 PUSH2 0x15FA JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1660 JUMPI PUSH2 0x165F PUSH2 0x1544 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1670 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1609 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1693 JUMPI PUSH2 0x1692 PUSH2 0x1183 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x16A1 DUP8 DUP3 DUP9 ADD PUSH2 0x13D9 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x16B2 DUP8 DUP3 DUP9 ADD PUSH2 0x13D9 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x16C3 DUP8 DUP3 DUP9 ADD PUSH2 0x1324 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x16E4 JUMPI PUSH2 0x16E3 PUSH2 0x1188 JUMP JUMPDEST JUMPDEST PUSH2 0x16F0 DUP8 DUP3 DUP9 ADD PUSH2 0x164B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1713 JUMPI PUSH2 0x1712 PUSH2 0x1183 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1721 DUP6 DUP3 DUP7 ADD PUSH2 0x13D9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1732 DUP6 DUP3 DUP7 ADD PUSH2 0x13D9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1783 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1796 JUMPI PUSH2 0x1795 PUSH2 0x173C JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17B2 DUP3 PUSH2 0x1248 JUMP JUMPDEST PUSH2 0x17BC DUP2 DUP6 PUSH2 0x179C JUMP JUMPDEST SWAP4 POP PUSH2 0x17CC DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1264 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17E4 DUP3 DUP6 PUSH2 0x17A7 JUMP JUMPDEST SWAP2 POP PUSH2 0x17F0 DUP3 DUP5 PUSH2 0x17A7 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1823 DUP3 PUSH2 0x17FC JUMP JUMPDEST PUSH2 0x182D DUP2 DUP6 PUSH2 0x1807 JUMP JUMPDEST SWAP4 POP PUSH2 0x183D DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1264 JUMP JUMPDEST PUSH2 0x1846 DUP2 PUSH2 0x1297 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1866 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1398 JUMP JUMPDEST PUSH2 0x1873 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1398 JUMP JUMPDEST PUSH2 0x1880 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x142E JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1892 DUP2 DUP5 PUSH2 0x1818 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x18AC DUP2 PUSH2 0x11B9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18C8 JUMPI PUSH2 0x18C7 PUSH2 0x1183 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x18D6 DUP5 DUP3 DUP6 ADD PUSH2 0x189D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP8 0xFC CHAINID 0xE6 EXTCODESIZE 0x2A 0xCD 0xCB SWAP11 0xB9 DUP7 SWAP5 0xED PUSH16 0xB1C4AEBAAF4B0F638CF15BE2FEA23C1B 0xC3 MULMOD PUSH5 0x736F6C6343 STOP ADDMOD 0xE STOP CALLER ",
							"sourceMap": "916:35157:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5969:615;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;11688:100;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;13648:218;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;13182:400;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4999:323;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;22787:2800;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;14552:185;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;11469:152;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6648:232;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;11857:104;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;13938:308;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;14808:399;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;12032:318;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;14317:164;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5969:615;6054:4;6369:10;6354:25;;:11;:25;;;;:102;;;;6446:10;6431:25;;:11;:25;;;;6354:102;:179;;;;6523:10;6508:25;;:11;:25;;;;6354:179;6334:199;;5969:615;;;:::o;11688:100::-;11742:13;11775:5;11768:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11688:100;:::o;13648:218::-;13724:7;13749:16;13757:7;13749;:16::i;:::-;13744:64;;13774:34;;;;;;;;;;;;;;13744:64;13828:15;:24;13844:7;13828:24;;;;;;;;;;;:30;;;;;;;;;;;;13821:37;;13648:218;;;:::o;13182:400::-;13263:13;13279:16;13287:7;13279;:16::i;:::-;13263:32;;13335:5;13312:28;;:19;:17;:19::i;:::-;:28;;;13308:175;;13360:44;13377:5;13384:19;:17;:19::i;:::-;13360:16;:44::i;:::-;13355:128;;13432:35;;;;;;;;;;;;;;13355:128;13308:175;13528:2;13495:15;:24;13511:7;13495:24;;;;;;;;;;;:30;;;:35;;;;;;;;;;;;;;;;;;13566:7;13562:2;13546:28;;13555:5;13546:28;;;;;;;;;;;;13252:330;13182:400;;:::o;4999:323::-;5060:7;5288:15;:13;:15::i;:::-;5273:12;;5257:13;;:28;:46;5250:53;;4999:323;:::o;22787:2800::-;22921:27;22951;22970:7;22951:18;:27::i;:::-;22921:57;;23036:4;22995:45;;23011:19;22995:45;;;22991:86;;23049:28;;;;;;;;;;;;;;22991:86;23091:27;23120:23;23147:28;23167:7;23147:19;:28::i;:::-;23090:85;;;;23275:62;23294:15;23311:4;23317:19;:17;:19::i;:::-;23275:18;:62::i;:::-;23270:174;;23357:43;23374:4;23380:19;:17;:19::i;:::-;23357:16;:43::i;:::-;23352:92;;23409:35;;;;;;;;;;;;;;23352:92;23270:174;23475:1;23461:16;;:2;:16;;;23457:52;;23486:23;;;;;;;;;;;;;;23457:52;23522:43;23544:4;23550:2;23554:7;23563:1;23522:21;:43::i;:::-;23658:15;23655:160;;;23798:1;23777:19;23770:30;23655:160;24193:18;:24;24212:4;24193:24;;;;;;;;;;;;;;;;24191:26;;;;;;;;;;;;24262:18;:22;24281:2;24262:22;;;;;;;;;;;;;;;;24260:24;;;;;;;;;;;24584:145;24621:2;24669:45;24684:4;24690:2;24694:19;24669:14;:45::i;:::-;2210:8;24642:72;24584:18;:145::i;:::-;24555:17;:26;24573:7;24555:26;;;;;;;;;;;:174;;;;24899:1;2210:8;24849:19;:46;:51;24845:626;;24921:19;24953:1;24943:7;:11;24921:33;;25110:1;25076:17;:30;25094:11;25076:30;;;;;;;;;;;;:35;25072:384;;25214:13;;25199:11;:28;25195:242;;25394:19;25361:17;:30;25379:11;25361:30;;;;;;;;;;;:52;;;;25195:242;25072:384;24902:569;24845:626;25518:7;25514:2;25499:27;;25508:4;25499:27;;;;;;;;;;;;25537:42;25558:4;25564:2;25568:7;25577:1;25537:20;:42::i;:::-;22910:2677;;;22787:2800;;;:::o;14552:185::-;14690:39;14707:4;14713:2;14717:7;14690:39;;;;;;;;;;;;:16;:39::i;:::-;14552:185;;;:::o;11469:152::-;11541:7;11584:27;11603:7;11584:18;:27::i;:::-;11561:52;;11469:152;;;:::o;6648:232::-;6720:7;6761:1;6744:19;;:5;:19;;;6740:60;;6772:28;;;;;;;;;;;;;;6740:60;1162:13;6818:18;:25;6837:5;6818:25;;;;;;;;;;;;;;;;:54;6811:61;;6648:232;;;:::o;11857:104::-;11913:13;11946:7;11939:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11857:104;:::o;13938:308::-;14049:19;:17;:19::i;:::-;14037:31;;:8;:31;;;14033:61;;14077:17;;;;;;;;;;;;;;14033:61;14159:8;14107:18;:39;14126:19;:17;:19::i;:::-;14107:39;;;;;;;;;;;;;;;:49;14147:8;14107:49;;;;;;;;;;;;;;;;:60;;;;;;;;;;;;;;;;;;14219:8;14183:55;;14198:19;:17;:19::i;:::-;14183:55;;;14229:8;14183:55;;;;;;:::i;:::-;;;;;;;;13938:308;;:::o;14808:399::-;14975:31;14988:4;14994:2;14998:7;14975:12;:31::i;:::-;15039:1;15021:2;:14;;;:19;15017:183;;15060:56;15091:4;15097:2;15101:7;15110:5;15060:30;:56::i;:::-;15055:145;;15144:40;;;;;;;;;;;;;;15055:145;15017:183;14808:399;;;;:::o;12032:318::-;12105:13;12136:16;12144:7;12136;:16::i;:::-;12131:59;;12161:29;;;;;;;;;;;;;;12131:59;12203:21;12227:10;:8;:10::i;:::-;12203:34;;12280:1;12261:7;12255:21;:26;:87;;;;;;;;;;;;;;;;;12308:7;12317:18;12327:7;12317:9;:18::i;:::-;12291:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;12255:87;12248:94;;;12032:318;;;:::o;14317:164::-;14414:4;14438:18;:25;14457:5;14438:25;;;;;;;;;;;;;;;:35;14464:8;14438:35;;;;;;;;;;;;;;;;;;;;;;;;;14431:42;;14317:164;;;;:::o;15462:281::-;15527:4;15583:7;15564:15;:13;:15::i;:::-;:26;;:66;;;;;15617:13;;15607:7;:23;15564:66;:152;;;;;15715:1;1932:8;15668:17;:26;15686:7;15668:26;;;;;;;;;;;;:43;:48;15564:152;15544:172;;15462:281;;;:::o;33891:105::-;33951:7;33978:10;33971:17;;33891:105;:::o;4515:92::-;4571:7;4515:92;:::o;8362:1129::-;8429:7;8449:12;8464:7;8449:22;;8532:4;8513:15;:13;:15::i;:::-;:23;8509:915;;8566:13;;8559:4;:20;8555:869;;;8604:14;8621:17;:23;8639:4;8621:23;;;;;;;;;;;;8604:40;;8737:1;1932:8;8710:6;:23;:28;8706:699;;9229:113;9246:1;9236:6;:11;9229:113;;9289:17;:25;9307:6;;;;;;;9289:25;;;;;;;;;;;;9280:34;;9229:113;;;9375:6;9368:13;;;;;;8706:699;8581:843;8555:869;8509:915;9452:31;;;;;;;;;;;;;;8362:1129;;;;:::o;21303:472::-;21398:27;21427:23;21468:38;21509:15;:24;21525:7;21509:24;;;;;;;;;;;21468:65;;21680:18;21657:41;;21737:19;21731:26;21712:45;;21642:126;21303:472;;;:::o;21888:645::-;22030:11;22192:15;22186:4;22182:26;22174:34;;22351:15;22340:9;22336:31;22323:44;;22498:15;22487:9;22484:30;22477:4;22466:9;22463:19;22460:55;22450:65;;21888:645;;;;;:::o;32724:159::-;;;;;:::o;31036:309::-;31171:7;31191:16;2333:3;31217:19;:40;;31191:67;;2333:3;31284:31;31295:4;31301:2;31305:9;31284:10;:31::i;:::-;31276:40;;:61;;31269:68;;;31036:309;;;;;:::o;10960:447::-;11040:14;11208:15;11201:5;11197:27;11188:36;;11382:5;11368:11;11344:22;11340:40;11337:51;11330:5;11327:62;11317:72;;10960:447;;;;:::o;33542:158::-;;;;;:::o;29538:716::-;29701:4;29747:2;29722:45;;;29768:19;:17;:19::i;:::-;29789:4;29795:7;29804:5;29722:88;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;29718:529;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30022:1;30005:6;:13;:18;30001:235;;30051:40;;;;;;;;;;;;;;30001:235;30194:6;30188:13;30179:6;30175:2;30171:15;30164:38;29718:529;29891:54;;;29881:64;;;:6;:64;;;;29874:71;;;29538:716;;;;;;:::o;12602:94::-;12653:13;12679:9;;;;;;;;;;;;;;12602:94;:::o;34102:1968::-;34167:17;34586:3;34579:4;34573:11;34569:21;34562:28;;34677:3;34671:4;34664:17;34783:3;35239:5;35369:1;35364:3;35360:11;35353:18;;35506:2;35500:4;35496:13;35492:2;35488:22;35483:3;35475:36;35547:2;35541:4;35537:13;35529:21;;35131:697;35566:4;35131:697;;;35757:1;35752:3;35748:11;35741:18;;35808:2;35802:4;35798:13;35794:2;35790:22;35785:3;35777:36;35661:2;35655:4;35651:13;35643:21;;35131:697;;;35135:430;35867:3;35862;35858:13;35982:2;35977:3;35973:12;35966:19;;36045:6;36040:3;36033:19;34206:1857;;34102:1968;;;:::o;31921:147::-;32058:6;31921:147;;;;;:::o;7:75:2:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:307::-;1866:1;1876:113;1890:6;1887:1;1884:13;1876:113;;;1975:1;1970:3;1966:11;1960:18;1956:1;1951:3;1947:11;1940:39;1912:2;1909:1;1905:10;1900:15;;1876:113;;;2007:6;2004:1;2001:13;1998:101;;;2087:1;2078:6;2073:3;2069:16;2062:27;1998:101;1847:258;1798:307;;;:::o;2111:102::-;2152:6;2203:2;2199:7;2194:2;2187:5;2183:14;2179:28;2169:38;;2111:102;;;:::o;2219:364::-;2307:3;2335:39;2368:5;2335:39;:::i;:::-;2390:71;2454:6;2449:3;2390:71;:::i;:::-;2383:78;;2470:52;2515:6;2510:3;2503:4;2496:5;2492:16;2470:52;:::i;:::-;2547:29;2569:6;2547:29;:::i;:::-;2542:3;2538:39;2531:46;;2311:272;2219:364;;;;:::o;2589:313::-;2702:4;2740:2;2729:9;2725:18;2717:26;;2789:9;2783:4;2779:20;2775:1;2764:9;2760:17;2753:47;2817:78;2890:4;2881:6;2817:78;:::i;:::-;2809:86;;2589:313;;;;:::o;2908:77::-;2945:7;2974:5;2963:16;;2908:77;;;:::o;2991:122::-;3064:24;3082:5;3064:24;:::i;:::-;3057:5;3054:35;3044:63;;3103:1;3100;3093:12;3044:63;2991:122;:::o;3119:139::-;3165:5;3203:6;3190:20;3181:29;;3219:33;3246:5;3219:33;:::i;:::-;3119:139;;;;:::o;3264:329::-;3323:6;3372:2;3360:9;3351:7;3347:23;3343:32;3340:119;;;3378:79;;:::i;:::-;3340:119;3498:1;3523:53;3568:7;3559:6;3548:9;3544:22;3523:53;:::i;:::-;3513:63;;3469:117;3264:329;;;;:::o;3599:126::-;3636:7;3676:42;3669:5;3665:54;3654:65;;3599:126;;;:::o;3731:96::-;3768:7;3797:24;3815:5;3797:24;:::i;:::-;3786:35;;3731:96;;;:::o;3833:118::-;3920:24;3938:5;3920:24;:::i;:::-;3915:3;3908:37;3833:118;;:::o;3957:222::-;4050:4;4088:2;4077:9;4073:18;4065:26;;4101:71;4169:1;4158:9;4154:17;4145:6;4101:71;:::i;:::-;3957:222;;;;:::o;4185:122::-;4258:24;4276:5;4258:24;:::i;:::-;4251:5;4248:35;4238:63;;4297:1;4294;4287:12;4238:63;4185:122;:::o;4313:139::-;4359:5;4397:6;4384:20;4375:29;;4413:33;4440:5;4413:33;:::i;:::-;4313:139;;;;:::o;4458:474::-;4526:6;4534;4583:2;4571:9;4562:7;4558:23;4554:32;4551:119;;;4589:79;;:::i;:::-;4551:119;4709:1;4734:53;4779:7;4770:6;4759:9;4755:22;4734:53;:::i;:::-;4724:63;;4680:117;4836:2;4862:53;4907:7;4898:6;4887:9;4883:22;4862:53;:::i;:::-;4852:63;;4807:118;4458:474;;;;;:::o;4938:118::-;5025:24;5043:5;5025:24;:::i;:::-;5020:3;5013:37;4938:118;;:::o;5062:222::-;5155:4;5193:2;5182:9;5178:18;5170:26;;5206:71;5274:1;5263:9;5259:17;5250:6;5206:71;:::i;:::-;5062:222;;;;:::o;5290:619::-;5367:6;5375;5383;5432:2;5420:9;5411:7;5407:23;5403:32;5400:119;;;5438:79;;:::i;:::-;5400:119;5558:1;5583:53;5628:7;5619:6;5608:9;5604:22;5583:53;:::i;:::-;5573:63;;5529:117;5685:2;5711:53;5756:7;5747:6;5736:9;5732:22;5711:53;:::i;:::-;5701:63;;5656:118;5813:2;5839:53;5884:7;5875:6;5864:9;5860:22;5839:53;:::i;:::-;5829:63;;5784:118;5290:619;;;;;:::o;5915:329::-;5974:6;6023:2;6011:9;6002:7;5998:23;5994:32;5991:119;;;6029:79;;:::i;:::-;5991:119;6149:1;6174:53;6219:7;6210:6;6199:9;6195:22;6174:53;:::i;:::-;6164:63;;6120:117;5915:329;;;;:::o;6250:116::-;6320:21;6335:5;6320:21;:::i;:::-;6313:5;6310:32;6300:60;;6356:1;6353;6346:12;6300:60;6250:116;:::o;6372:133::-;6415:5;6453:6;6440:20;6431:29;;6469:30;6493:5;6469:30;:::i;:::-;6372:133;;;;:::o;6511:468::-;6576:6;6584;6633:2;6621:9;6612:7;6608:23;6604:32;6601:119;;;6639:79;;:::i;:::-;6601:119;6759:1;6784:53;6829:7;6820:6;6809:9;6805:22;6784:53;:::i;:::-;6774:63;;6730:117;6886:2;6912:50;6954:7;6945:6;6934:9;6930:22;6912:50;:::i;:::-;6902:60;;6857:115;6511:468;;;;;:::o;6985:117::-;7094:1;7091;7084:12;7108:117;7217:1;7214;7207:12;7231:180;7279:77;7276:1;7269:88;7376:4;7373:1;7366:15;7400:4;7397:1;7390:15;7417:281;7500:27;7522:4;7500:27;:::i;:::-;7492:6;7488:40;7630:6;7618:10;7615:22;7594:18;7582:10;7579:34;7576:62;7573:88;;;7641:18;;:::i;:::-;7573:88;7681:10;7677:2;7670:22;7460:238;7417:281;;:::o;7704:129::-;7738:6;7765:20;;:::i;:::-;7755:30;;7794:33;7822:4;7814:6;7794:33;:::i;:::-;7704:129;;;:::o;7839:307::-;7900:4;7990:18;7982:6;7979:30;7976:56;;;8012:18;;:::i;:::-;7976:56;8050:29;8072:6;8050:29;:::i;:::-;8042:37;;8134:4;8128;8124:15;8116:23;;7839:307;;;:::o;8152:154::-;8236:6;8231:3;8226;8213:30;8298:1;8289:6;8284:3;8280:16;8273:27;8152:154;;;:::o;8312:410::-;8389:5;8414:65;8430:48;8471:6;8430:48;:::i;:::-;8414:65;:::i;:::-;8405:74;;8502:6;8495:5;8488:21;8540:4;8533:5;8529:16;8578:3;8569:6;8564:3;8560:16;8557:25;8554:112;;;8585:79;;:::i;:::-;8554:112;8675:41;8709:6;8704:3;8699;8675:41;:::i;:::-;8395:327;8312:410;;;;;:::o;8741:338::-;8796:5;8845:3;8838:4;8830:6;8826:17;8822:27;8812:122;;8853:79;;:::i;:::-;8812:122;8970:6;8957:20;8995:78;9069:3;9061:6;9054:4;9046:6;9042:17;8995:78;:::i;:::-;8986:87;;8802:277;8741:338;;;;:::o;9085:943::-;9180:6;9188;9196;9204;9253:3;9241:9;9232:7;9228:23;9224:33;9221:120;;;9260:79;;:::i;:::-;9221:120;9380:1;9405:53;9450:7;9441:6;9430:9;9426:22;9405:53;:::i;:::-;9395:63;;9351:117;9507:2;9533:53;9578:7;9569:6;9558:9;9554:22;9533:53;:::i;:::-;9523:63;;9478:118;9635:2;9661:53;9706:7;9697:6;9686:9;9682:22;9661:53;:::i;:::-;9651:63;;9606:118;9791:2;9780:9;9776:18;9763:32;9822:18;9814:6;9811:30;9808:117;;;9844:79;;:::i;:::-;9808:117;9949:62;10003:7;9994:6;9983:9;9979:22;9949:62;:::i;:::-;9939:72;;9734:287;9085:943;;;;;;;:::o;10034:474::-;10102:6;10110;10159:2;10147:9;10138:7;10134:23;10130:32;10127:119;;;10165:79;;:::i;:::-;10127:119;10285:1;10310:53;10355:7;10346:6;10335:9;10331:22;10310:53;:::i;:::-;10300:63;;10256:117;10412:2;10438:53;10483:7;10474:6;10463:9;10459:22;10438:53;:::i;:::-;10428:63;;10383:118;10034:474;;;;;:::o;10514:180::-;10562:77;10559:1;10552:88;10659:4;10656:1;10649:15;10683:4;10680:1;10673:15;10700:320;10744:6;10781:1;10775:4;10771:12;10761:22;;10828:1;10822:4;10818:12;10849:18;10839:81;;10905:4;10897:6;10893:17;10883:27;;10839:81;10967:2;10959:6;10956:14;10936:18;10933:38;10930:84;;10986:18;;:::i;:::-;10930:84;10751:269;10700:320;;;:::o;11026:148::-;11128:11;11165:3;11150:18;;11026:148;;;;:::o;11180:377::-;11286:3;11314:39;11347:5;11314:39;:::i;:::-;11369:89;11451:6;11446:3;11369:89;:::i;:::-;11362:96;;11467:52;11512:6;11507:3;11500:4;11493:5;11489:16;11467:52;:::i;:::-;11544:6;11539:3;11535:16;11528:23;;11290:267;11180:377;;;;:::o;11563:435::-;11743:3;11765:95;11856:3;11847:6;11765:95;:::i;:::-;11758:102;;11877:95;11968:3;11959:6;11877:95;:::i;:::-;11870:102;;11989:3;11982:10;;11563:435;;;;;:::o;12004:98::-;12055:6;12089:5;12083:12;12073:22;;12004:98;;;:::o;12108:168::-;12191:11;12225:6;12220:3;12213:19;12265:4;12260:3;12256:14;12241:29;;12108:168;;;;:::o;12282:360::-;12368:3;12396:38;12428:5;12396:38;:::i;:::-;12450:70;12513:6;12508:3;12450:70;:::i;:::-;12443:77;;12529:52;12574:6;12569:3;12562:4;12555:5;12551:16;12529:52;:::i;:::-;12606:29;12628:6;12606:29;:::i;:::-;12601:3;12597:39;12590:46;;12372:270;12282:360;;;;:::o;12648:640::-;12843:4;12881:3;12870:9;12866:19;12858:27;;12895:71;12963:1;12952:9;12948:17;12939:6;12895:71;:::i;:::-;12976:72;13044:2;13033:9;13029:18;13020:6;12976:72;:::i;:::-;13058;13126:2;13115:9;13111:18;13102:6;13058:72;:::i;:::-;13177:9;13171:4;13167:20;13162:2;13151:9;13147:18;13140:48;13205:76;13276:4;13267:6;13205:76;:::i;:::-;13197:84;;12648:640;;;;;;;:::o;13294:141::-;13350:5;13381:6;13375:13;13366:22;;13397:32;13423:5;13397:32;:::i;:::-;13294:141;;;;:::o;13441:349::-;13510:6;13559:2;13547:9;13538:7;13534:23;13530:32;13527:119;;;13565:79;;:::i;:::-;13527:119;13685:1;13710:63;13765:7;13756:6;13745:9;13741:22;13710:63;:::i;:::-;13700:73;;13656:127;13441:349;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1284200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2927",
								"getApproved(uint256)": "7381",
								"isApprovedForAll(address,address)": "infinite",
								"name()": "infinite",
								"ownerOf(uint256)": "infinite",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "infinite",
								"supportsInterface(bytes4)": "745",
								"symbol()": "infinite",
								"tokenURI(uint256)": "5542",
								"totalSupply()": "4621",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfers(address,address,uint256,uint256)": "17",
								"_baseURI()": "infinite",
								"_beforeTokenTransfers(address,address,uint256,uint256)": "17",
								"_burn(uint256)": "infinite",
								"_burn(uint256,bool)": "infinite",
								"_checkContractOnERC721Received(address,address,uint256,bytes memory)": "infinite",
								"_exists(uint256)": "4416",
								"_extraData(address,address,uint24)": "24",
								"_getApprovedAddress(uint256)": "2236",
								"_getAux(address)": "infinite",
								"_initializeOwnershipAt(uint256)": "infinite",
								"_isOwnerOrApproved(address,address,address)": "78",
								"_mint(address,uint256)": "infinite",
								"_mintERC2309(address,uint256)": "infinite",
								"_msgSenderERC721A()": "22",
								"_nextExtraData(address,address,uint256)": "114",
								"_nextInitializedFlag(uint256)": "infinite",
								"_nextTokenId()": "infinite",
								"_numberBurned(address)": "infinite",
								"_numberMinted(address)": "infinite",
								"_ownershipAt(uint256)": "infinite",
								"_ownershipOf(uint256)": "infinite",
								"_packOwnershipData(address,uint256)": "61",
								"_packedOwnershipOf(uint256)": "infinite",
								"_safeMint(address,uint256)": "infinite",
								"_safeMint(address,uint256,bytes memory)": "infinite",
								"_setAux(address,uint64)": "infinite",
								"_setExtraDataAt(uint256,uint24)": "infinite",
								"_startTokenId()": "15",
								"_toString(uint256)": "infinite",
								"_totalBurned()": "infinite",
								"_totalMinted()": "infinite",
								"_unpackedOwnership(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 916,
									"end": 36073,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 916,
									"end": 36073,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 916,
									"end": 36073,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 4215,
									"end": 4373,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 4215,
									"end": 4373,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 4215,
									"end": 4373,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 4215,
									"end": 4373,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 4215,
									"end": 4373,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 4215,
									"end": 4373,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 4215,
									"end": 4373,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 4215,
									"end": 4373,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 4215,
									"end": 4373,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 4215,
									"end": 4373,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 4215,
									"end": 4373,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 4215,
									"end": 4373,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 4215,
									"end": 4373,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 4215,
									"end": 4373,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 4215,
									"end": 4373,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 4215,
									"end": 4373,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 4215,
									"end": 4373,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 4215,
									"end": 4373,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 4215,
									"end": 4373,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 4215,
									"end": 4373,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 4215,
									"end": 4373,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 4215,
									"end": 4373,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 4215,
									"end": 4373,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 4215,
									"end": 4373,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 4215,
									"end": 4373,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 4215,
									"end": 4373,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 4215,
									"end": 4373,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 4215,
									"end": 4373,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 4215,
									"end": 4373,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 4215,
									"end": 4373,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 4215,
									"end": 4373,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 4215,
									"end": 4373,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 4215,
									"end": 4373,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 4215,
									"end": 4373,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 4215,
									"end": 4373,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 4290,
									"end": 4295,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 4282,
									"end": 4287,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 4282,
									"end": 4295,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 4282,
									"end": 4295,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 4282,
									"end": 4295,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 4282,
									"end": 4295,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 4282,
									"end": 4295,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 4282,
									"end": 4295,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 4282,
									"end": 4295,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 4282,
									"end": 4295,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 4282,
									"end": 4295,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 4282,
									"end": 4295,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 4282,
									"end": 4295,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 4282,
									"end": 4295,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 4282,
									"end": 4295,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 4282,
									"end": 4295,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 4282,
									"end": 4295,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 4282,
									"end": 4295,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 4316,
									"end": 4323,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 4306,
									"end": 4313,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 4306,
									"end": 4323,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 4306,
									"end": 4323,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 4306,
									"end": 4323,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 4306,
									"end": 4323,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 4306,
									"end": 4323,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 4306,
									"end": 4323,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 4306,
									"end": 4323,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 4306,
									"end": 4323,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 4306,
									"end": 4323,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 4306,
									"end": 4323,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 4306,
									"end": 4323,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 4306,
									"end": 4323,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 4306,
									"end": 4323,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 4306,
									"end": 4323,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 4306,
									"end": 4323,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 4306,
									"end": 4323,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 4350,
									"end": 4365,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 4350,
									"end": 4363,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 4350,
									"end": 4363,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 4350,
									"end": 4363,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 4350,
									"end": 4365,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 4350,
									"end": 4365,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 4350,
									"end": 4365,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 4350,
									"end": 4365,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 4350,
									"end": 4365,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 4334,
									"end": 4347,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 4334,
									"end": 4365,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 4334,
									"end": 4365,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 4334,
									"end": 4365,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 4334,
									"end": 4365,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 4215,
									"end": 4373,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 4215,
									"end": 4373,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 916,
									"end": 36073,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 916,
									"end": 36073,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 4515,
									"end": 4607,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 4515,
									"end": 4607,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 4571,
									"end": 4578,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 4515,
									"end": 4607,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 4515,
									"end": 4607,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 916,
									"end": 36073,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 916,
									"end": 36073,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 916,
									"end": 36073,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 916,
									"end": 36073,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 916,
									"end": 36073,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 916,
									"end": 36073,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 916,
									"end": 36073,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 916,
									"end": 36073,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 916,
									"end": 36073,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 916,
									"end": 36073,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 916,
									"end": 36073,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 916,
									"end": 36073,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 916,
									"end": 36073,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 916,
									"end": 36073,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 916,
									"end": 36073,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 916,
									"end": 36073,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 916,
									"end": 36073,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 916,
									"end": 36073,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 916,
									"end": 36073,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 916,
									"end": 36073,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 916,
									"end": 36073,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 916,
									"end": 36073,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 916,
									"end": 36073,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 916,
									"end": 36073,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 916,
									"end": 36073,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 916,
									"end": 36073,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 916,
									"end": 36073,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 916,
									"end": 36073,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 916,
									"end": 36073,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 916,
									"end": 36073,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 916,
									"end": 36073,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 916,
									"end": 36073,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 916,
									"end": 36073,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 916,
									"end": 36073,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 916,
									"end": 36073,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 916,
									"end": 36073,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 916,
									"end": 36073,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 916,
									"end": 36073,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 916,
									"end": 36073,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 916,
									"end": 36073,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 916,
									"end": 36073,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 916,
									"end": 36073,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 916,
									"end": 36073,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 916,
									"end": 36073,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 916,
									"end": 36073,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 916,
									"end": 36073,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 916,
									"end": 36073,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 916,
									"end": 36073,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 916,
									"end": 36073,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 916,
									"end": 36073,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 916,
									"end": 36073,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 916,
									"end": 36073,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 916,
									"end": 36073,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 916,
									"end": 36073,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 916,
									"end": 36073,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 916,
									"end": 36073,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 916,
									"end": 36073,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 916,
									"end": 36073,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 916,
									"end": 36073,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 916,
									"end": 36073,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 916,
									"end": 36073,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 916,
									"end": 36073,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 916,
									"end": 36073,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 916,
									"end": 36073,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 916,
									"end": 36073,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 916,
									"end": 36073,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 916,
									"end": 36073,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 916,
									"end": 36073,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 916,
									"end": 36073,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 916,
									"end": 36073,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 916,
									"end": 36073,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 916,
									"end": 36073,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 916,
									"end": 36073,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 916,
									"end": 36073,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 916,
									"end": 36073,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 916,
									"end": 36073,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 916,
									"end": 36073,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 916,
									"end": 36073,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 916,
									"end": 36073,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 916,
									"end": 36073,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 916,
									"end": 36073,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 916,
									"end": 36073,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 916,
									"end": 36073,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 916,
									"end": 36073,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 916,
									"end": 36073,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 916,
									"end": 36073,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 916,
									"end": 36073,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 916,
									"end": 36073,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 916,
									"end": 36073,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 916,
									"end": 36073,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 916,
									"end": 36073,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 916,
									"end": 36073,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 916,
									"end": 36073,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 916,
									"end": 36073,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 916,
									"end": 36073,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 916,
									"end": 36073,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 916,
									"end": 36073,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 916,
									"end": 36073,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 916,
									"end": 36073,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 916,
									"end": 36073,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 916,
									"end": 36073,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 916,
									"end": 36073,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 916,
									"end": 36073,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 916,
									"end": 36073,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 916,
									"end": 36073,
									"name": "tag",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 916,
									"end": 36073,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 916,
									"end": 36073,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 916,
									"end": 36073,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 916,
									"end": 36073,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 916,
									"end": 36073,
									"name": "tag",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 916,
									"end": 36073,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 916,
									"end": 36073,
									"name": "tag",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 916,
									"end": 36073,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 916,
									"end": 36073,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 916,
									"end": 36073,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 916,
									"end": 36073,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 916,
									"end": 36073,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 916,
									"end": 36073,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 916,
									"end": 36073,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 916,
									"end": 36073,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 916,
									"end": 36073,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 916,
									"end": 36073,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 916,
									"end": 36073,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 916,
									"end": 36073,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 916,
									"end": 36073,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 916,
									"end": 36073,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 916,
									"end": 36073,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 916,
									"end": 36073,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 916,
									"end": 36073,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 916,
									"end": 36073,
									"name": "tag",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 916,
									"end": 36073,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 916,
									"end": 36073,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 916,
									"end": 36073,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 916,
									"end": 36073,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 82,
									"name": "tag",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 40,
									"end": 46,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 75,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 76,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 57,
									"end": 76,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 57,
									"end": 76,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7,
									"end": 82,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7,
									"end": 82,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 211,
									"end": 328,
									"name": "tag",
									"source": 2,
									"value": "26"
								},
								{
									"begin": 211,
									"end": 328,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 320,
									"end": 321,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 318,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 310,
									"end": 322,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 334,
									"end": 451,
									"name": "tag",
									"source": 2,
									"value": "27"
								},
								{
									"begin": 334,
									"end": 451,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 443,
									"end": 444,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 433,
									"end": 445,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 457,
									"end": 574,
									"name": "tag",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 457,
									"end": 574,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 566,
									"end": 567,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 563,
									"end": 564,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 556,
									"end": 568,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 580,
									"end": 682,
									"name": "tag",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 580,
									"end": 682,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 621,
									"end": 627,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 672,
									"end": 674,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 668,
									"end": 675,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 663,
									"end": 665,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 656,
									"end": 661,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 652,
									"end": 666,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 648,
									"end": 676,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 638,
									"end": 676,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 638,
									"end": 676,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 580,
									"end": 682,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 580,
									"end": 682,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 688,
									"end": 868,
									"name": "tag",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 688,
									"end": 868,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 736,
									"end": 813,
									"name": "PUSH",
									"source": 2,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 733,
									"end": 734,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 726,
									"end": 814,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 833,
									"end": 837,
									"name": "PUSH",
									"source": 2,
									"value": "41"
								},
								{
									"begin": 830,
									"end": 831,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 823,
									"end": 838,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 857,
									"end": 861,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 854,
									"end": 855,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 847,
									"end": 862,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "tag",
									"source": 2,
									"value": "31"
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "47"
								},
								{
									"begin": 979,
									"end": 983,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 957,
									"end": 984,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 957,
									"end": 984,
									"name": "tag",
									"source": 2,
									"value": "47"
								},
								{
									"begin": 957,
									"end": 984,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 949,
									"end": 955,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 945,
									"end": 985,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1087,
									"end": 1093,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1075,
									"end": 1085,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1072,
									"end": 1094,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1039,
									"end": 1049,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1036,
									"end": 1070,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 1033,
									"end": 1095,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "48"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "49"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 1098,
									"end": 1116,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "tag",
									"source": 2,
									"value": "49"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "tag",
									"source": 2,
									"value": "48"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1138,
									"end": 1148,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1134,
									"end": 1136,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1127,
									"end": 1149,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 917,
									"end": 1155,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 874,
									"end": 1155,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "tag",
									"source": 2,
									"value": "32"
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1195,
									"end": 1201,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "51"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 1222,
									"end": 1242,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "tag",
									"source": 2,
									"value": "51"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "52"
								},
								{
									"begin": 1279,
									"end": 1283,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1271,
									"end": 1277,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "31"
								},
								{
									"begin": 1251,
									"end": 1284,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "tag",
									"source": 2,
									"value": "52"
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1161,
									"end": 1290,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "tag",
									"source": 2,
									"value": "33"
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1358,
									"end": 1362,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1448,
									"end": 1466,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1440,
									"end": 1446,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1437,
									"end": 1467,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "54"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "55"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 1470,
									"end": 1488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "tag",
									"source": 2,
									"value": "55"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "tag",
									"source": 2,
									"value": "54"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "56"
								},
								{
									"begin": 1530,
									"end": 1536,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 1508,
									"end": 1537,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "tag",
									"source": 2,
									"value": "56"
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1592,
									"end": 1596,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1586,
									"end": 1590,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1597,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1296,
									"end": 1604,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1610,
									"end": 1917,
									"name": "tag",
									"source": 2,
									"value": "34"
								},
								{
									"begin": 1610,
									"end": 1917,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1678,
									"end": 1679,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1688,
									"end": 1801,
									"name": "tag",
									"source": 2,
									"value": "58"
								},
								{
									"begin": 1688,
									"end": 1801,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1702,
									"end": 1708,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1699,
									"end": 1700,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1696,
									"end": 1709,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 1688,
									"end": 1801,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1688,
									"end": 1801,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "60"
								},
								{
									"begin": 1688,
									"end": 1801,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1787,
									"end": 1788,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1782,
									"end": 1785,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1778,
									"end": 1789,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1772,
									"end": 1790,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1768,
									"end": 1769,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1763,
									"end": 1766,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 1759,
									"end": 1770,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1752,
									"end": 1791,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1724,
									"end": 1726,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1721,
									"end": 1722,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1717,
									"end": 1727,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1712,
									"end": 1727,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1712,
									"end": 1727,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1688,
									"end": 1801,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "58"
								},
								{
									"begin": 1688,
									"end": 1801,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1688,
									"end": 1801,
									"name": "tag",
									"source": 2,
									"value": "60"
								},
								{
									"begin": 1688,
									"end": 1801,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1819,
									"end": 1825,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1816,
									"end": 1817,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1813,
									"end": 1826,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 1810,
									"end": 1911,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1810,
									"end": 1911,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "61"
								},
								{
									"begin": 1810,
									"end": 1911,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1899,
									"end": 1900,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1890,
									"end": 1896,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 1885,
									"end": 1888,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 1881,
									"end": 1897,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1874,
									"end": 1901,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1810,
									"end": 1911,
									"name": "tag",
									"source": 2,
									"value": "61"
								},
								{
									"begin": 1810,
									"end": 1911,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1659,
									"end": 1917,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1610,
									"end": 1917,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1610,
									"end": 1917,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1610,
									"end": 1917,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1610,
									"end": 1917,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1923,
									"end": 2344,
									"name": "tag",
									"source": 2,
									"value": "35"
								},
								{
									"begin": 1923,
									"end": 2344,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2012,
									"end": 2017,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2037,
									"end": 2103,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "63"
								},
								{
									"begin": 2053,
									"end": 2102,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "64"
								},
								{
									"begin": 2095,
									"end": 2101,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 2053,
									"end": 2102,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "33"
								},
								{
									"begin": 2053,
									"end": 2102,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2053,
									"end": 2102,
									"name": "tag",
									"source": 2,
									"value": "64"
								},
								{
									"begin": 2053,
									"end": 2102,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2037,
									"end": 2103,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "32"
								},
								{
									"begin": 2037,
									"end": 2103,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2037,
									"end": 2103,
									"name": "tag",
									"source": 2,
									"value": "63"
								},
								{
									"begin": 2037,
									"end": 2103,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2028,
									"end": 2103,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2028,
									"end": 2103,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2126,
									"end": 2132,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 2119,
									"end": 2124,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2112,
									"end": 2133,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 2164,
									"end": 2168,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 2157,
									"end": 2162,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2153,
									"end": 2169,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 2202,
									"end": 2205,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 2193,
									"end": 2199,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 2188,
									"end": 2191,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 2184,
									"end": 2200,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 2181,
									"end": 2206,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 2178,
									"end": 2290,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 2178,
									"end": 2290,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "65"
								},
								{
									"begin": 2178,
									"end": 2290,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 2209,
									"end": 2288,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "66"
								},
								{
									"begin": 2209,
									"end": 2288,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 2209,
									"end": 2288,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2209,
									"end": 2288,
									"name": "tag",
									"source": 2,
									"value": "66"
								},
								{
									"begin": 2209,
									"end": 2288,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2178,
									"end": 2290,
									"name": "tag",
									"source": 2,
									"value": "65"
								},
								{
									"begin": 2178,
									"end": 2290,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2299,
									"end": 2338,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "67"
								},
								{
									"begin": 2331,
									"end": 2337,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 2326,
									"end": 2329,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 2321,
									"end": 2324,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 2299,
									"end": 2338,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "34"
								},
								{
									"begin": 2299,
									"end": 2338,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2299,
									"end": 2338,
									"name": "tag",
									"source": 2,
									"value": "67"
								},
								{
									"begin": 2299,
									"end": 2338,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2018,
									"end": 2344,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1923,
									"end": 2344,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": 1923,
									"end": 2344,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 1923,
									"end": 2344,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1923,
									"end": 2344,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1923,
									"end": 2344,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1923,
									"end": 2344,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2364,
									"end": 2719,
									"name": "tag",
									"source": 2,
									"value": "36"
								},
								{
									"begin": 2364,
									"end": 2719,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2431,
									"end": 2436,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2480,
									"end": 2483,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 2473,
									"end": 2477,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 2465,
									"end": 2471,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 2461,
									"end": 2478,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 2457,
									"end": 2484,
									"name": "SLT",
									"source": 2
								},
								{
									"begin": 2447,
									"end": 2569,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "69"
								},
								{
									"begin": 2447,
									"end": 2569,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 2488,
									"end": 2567,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "70"
								},
								{
									"begin": 2488,
									"end": 2567,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "27"
								},
								{
									"begin": 2488,
									"end": 2567,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2488,
									"end": 2567,
									"name": "tag",
									"source": 2,
									"value": "70"
								},
								{
									"begin": 2488,
									"end": 2567,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2447,
									"end": 2569,
									"name": "tag",
									"source": 2,
									"value": "69"
								},
								{
									"begin": 2447,
									"end": 2569,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2598,
									"end": 2604,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2592,
									"end": 2605,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 2623,
									"end": 2713,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "71"
								},
								{
									"begin": 2709,
									"end": 2712,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 2701,
									"end": 2707,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 2694,
									"end": 2698,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 2686,
									"end": 2692,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 2682,
									"end": 2699,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 2623,
									"end": 2713,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "35"
								},
								{
									"begin": 2623,
									"end": 2713,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2623,
									"end": 2713,
									"name": "tag",
									"source": 2,
									"value": "71"
								},
								{
									"begin": 2623,
									"end": 2713,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2614,
									"end": 2713,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 2614,
									"end": 2713,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2437,
									"end": 2719,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2364,
									"end": 2719,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 2364,
									"end": 2719,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 2364,
									"end": 2719,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2364,
									"end": 2719,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2364,
									"end": 2719,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2725,
									"end": 3578,
									"name": "tag",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 2725,
									"end": 3578,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2824,
									"end": 2830,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2832,
									"end": 2838,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2881,
									"end": 2883,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 2869,
									"end": 2878,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 2860,
									"end": 2867,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 2856,
									"end": 2879,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 2852,
									"end": 2884,
									"name": "SLT",
									"source": 2
								},
								{
									"begin": 2849,
									"end": 2968,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 2849,
									"end": 2968,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 2849,
									"end": 2968,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 2887,
									"end": 2966,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "74"
								},
								{
									"begin": 2887,
									"end": 2966,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 2887,
									"end": 2966,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2887,
									"end": 2966,
									"name": "tag",
									"source": 2,
									"value": "74"
								},
								{
									"begin": 2887,
									"end": 2966,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2849,
									"end": 2968,
									"name": "tag",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 2849,
									"end": 2968,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3028,
									"end": 3029,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 3017,
									"end": 3026,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 3013,
									"end": 3030,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 3007,
									"end": 3031,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 3058,
									"end": 3076,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3050,
									"end": 3056,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 3047,
									"end": 3077,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 3044,
									"end": 3161,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 3044,
									"end": 3161,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "75"
								},
								{
									"begin": 3044,
									"end": 3161,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 3080,
									"end": 3159,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "76"
								},
								{
									"begin": 3080,
									"end": 3159,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "26"
								},
								{
									"begin": 3080,
									"end": 3159,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 3080,
									"end": 3159,
									"name": "tag",
									"source": 2,
									"value": "76"
								},
								{
									"begin": 3080,
									"end": 3159,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3044,
									"end": 3161,
									"name": "tag",
									"source": 2,
									"value": "75"
								},
								{
									"begin": 3044,
									"end": 3161,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3185,
									"end": 3259,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "77"
								},
								{
									"begin": 3251,
									"end": 3258,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 3242,
									"end": 3248,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 3231,
									"end": 3240,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 3227,
									"end": 3249,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 3185,
									"end": 3259,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "36"
								},
								{
									"begin": 3185,
									"end": 3259,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 3185,
									"end": 3259,
									"name": "tag",
									"source": 2,
									"value": "77"
								},
								{
									"begin": 3185,
									"end": 3259,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3175,
									"end": 3259,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 3175,
									"end": 3259,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2978,
									"end": 3269,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3329,
									"end": 3331,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 3318,
									"end": 3327,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 3314,
									"end": 3332,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 3308,
									"end": 3333,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 3360,
									"end": 3378,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3352,
									"end": 3358,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 3349,
									"end": 3379,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 3346,
									"end": 3463,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 3346,
									"end": 3463,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "78"
								},
								{
									"begin": 3346,
									"end": 3463,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 3382,
									"end": 3461,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "79"
								},
								{
									"begin": 3382,
									"end": 3461,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "26"
								},
								{
									"begin": 3382,
									"end": 3461,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 3382,
									"end": 3461,
									"name": "tag",
									"source": 2,
									"value": "79"
								},
								{
									"begin": 3382,
									"end": 3461,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3346,
									"end": 3463,
									"name": "tag",
									"source": 2,
									"value": "78"
								},
								{
									"begin": 3346,
									"end": 3463,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3487,
									"end": 3561,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 3553,
									"end": 3560,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 3544,
									"end": 3550,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 3533,
									"end": 3542,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 3529,
									"end": 3551,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 3487,
									"end": 3561,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "36"
								},
								{
									"begin": 3487,
									"end": 3561,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 3487,
									"end": 3561,
									"name": "tag",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 3487,
									"end": 3561,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3477,
									"end": 3561,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 3477,
									"end": 3561,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3279,
									"end": 3571,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2725,
									"end": 3578,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 2725,
									"end": 3578,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2725,
									"end": 3578,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 2725,
									"end": 3578,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2725,
									"end": 3578,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2725,
									"end": 3578,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 3584,
									"end": 3764,
									"name": "tag",
									"source": 2,
									"value": "37"
								},
								{
									"begin": 3584,
									"end": 3764,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3632,
									"end": 3709,
									"name": "PUSH",
									"source": 2,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3629,
									"end": 3630,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 3622,
									"end": 3710,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 3729,
									"end": 3733,
									"name": "PUSH",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 3726,
									"end": 3727,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 3719,
									"end": 3734,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 3753,
									"end": 3757,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 3750,
									"end": 3751,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 3743,
									"end": 3758,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 3770,
									"end": 4090,
									"name": "tag",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 3770,
									"end": 4090,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3814,
									"end": 3820,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 3851,
									"end": 3852,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 3845,
									"end": 3849,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 3841,
									"end": 3853,
									"name": "DIV",
									"source": 2
								},
								{
									"begin": 3831,
									"end": 3853,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3831,
									"end": 3853,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3898,
									"end": 3899,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 3892,
									"end": 3896,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 3888,
									"end": 3900,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 3919,
									"end": 3937,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 3909,
									"end": 3990,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "83"
								},
								{
									"begin": 3909,
									"end": 3990,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 3975,
									"end": 3979,
									"name": "PUSH",
									"source": 2,
									"value": "7F"
								},
								{
									"begin": 3967,
									"end": 3973,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 3963,
									"end": 3980,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 3953,
									"end": 3980,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 3953,
									"end": 3980,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3909,
									"end": 3990,
									"name": "tag",
									"source": 2,
									"value": "83"
								},
								{
									"begin": 3909,
									"end": 3990,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4037,
									"end": 4039,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 4029,
									"end": 4035,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 4026,
									"end": 4040,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 4006,
									"end": 4024,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 4003,
									"end": 4041,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 4000,
									"end": 4084,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "84"
								},
								{
									"begin": 4000,
									"end": 4084,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 4056,
									"end": 4074,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "85"
								},
								{
									"begin": 4056,
									"end": 4074,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "37"
								},
								{
									"begin": 4056,
									"end": 4074,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 4056,
									"end": 4074,
									"name": "tag",
									"source": 2,
									"value": "85"
								},
								{
									"begin": 4056,
									"end": 4074,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4000,
									"end": 4084,
									"name": "tag",
									"source": 2,
									"value": "84"
								},
								{
									"begin": 4000,
									"end": 4084,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3821,
									"end": 4090,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3770,
									"end": 4090,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 3770,
									"end": 4090,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3770,
									"end": 4090,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3770,
									"end": 4090,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 916,
									"end": 36073,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 916,
									"end": 36073,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 916,
									"end": 36073,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 916,
									"end": 36073,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 916,
									"end": 36073,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 916,
									"end": 36073,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 916,
									"end": 36073,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 916,
									"end": 36073,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 916,
									"end": 36073,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122087fc46e63b2acdcb9ab98694ed6fb1c4aebaaf4b0f638cf15be2fea23c1bc30964736f6c634300080e0033",
									".code": [
										{
											"begin": 916,
											"end": 36073,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 916,
											"end": 36073,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 916,
											"end": 36073,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 916,
											"end": 36073,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 916,
											"end": 36073,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 916,
											"end": 36073,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 916,
											"end": 36073,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 916,
											"end": 36073,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 916,
											"end": 36073,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 916,
											"end": 36073,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 916,
											"end": 36073,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 916,
											"end": 36073,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 916,
											"end": 36073,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 916,
											"end": 36073,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 916,
											"end": 36073,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 916,
											"end": 36073,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 916,
											"end": 36073,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 916,
											"end": 36073,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 916,
											"end": 36073,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 916,
											"end": 36073,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 916,
											"end": 36073,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 916,
											"end": 36073,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 916,
											"end": 36073,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 916,
											"end": 36073,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 916,
											"end": 36073,
											"name": "PUSH",
											"source": 0,
											"value": "6352211E"
										},
										{
											"begin": 916,
											"end": 36073,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 916,
											"end": 36073,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 916,
											"end": 36073,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 916,
											"end": 36073,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 916,
											"end": 36073,
											"name": "PUSH",
											"source": 0,
											"value": "A22CB465"
										},
										{
											"begin": 916,
											"end": 36073,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 916,
											"end": 36073,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 916,
											"end": 36073,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 916,
											"end": 36073,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 916,
											"end": 36073,
											"name": "PUSH",
											"source": 0,
											"value": "A22CB465"
										},
										{
											"begin": 916,
											"end": 36073,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 916,
											"end": 36073,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 916,
											"end": 36073,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 916,
											"end": 36073,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 916,
											"end": 36073,
											"name": "PUSH",
											"source": 0,
											"value": "B88D4FDE"
										},
										{
											"begin": 916,
											"end": 36073,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 916,
											"end": 36073,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 916,
											"end": 36073,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 916,
											"end": 36073,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 916,
											"end": 36073,
											"name": "PUSH",
											"source": 0,
											"value": "C87B56DD"
										},
										{
											"begin": 916,
											"end": 36073,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 916,
											"end": 36073,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 916,
											"end": 36073,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 916,
											"end": 36073,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 916,
											"end": 36073,
											"name": "PUSH",
											"source": 0,
											"value": "E985E9C5"
										},
										{
											"begin": 916,
											"end": 36073,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 916,
											"end": 36073,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 916,
											"end": 36073,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 916,
											"end": 36073,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 916,
											"end": 36073,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 916,
											"end": 36073,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 916,
											"end": 36073,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 916,
											"end": 36073,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 916,
											"end": 36073,
											"name": "PUSH",
											"source": 0,
											"value": "6352211E"
										},
										{
											"begin": 916,
											"end": 36073,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 916,
											"end": 36073,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 916,
											"end": 36073,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 916,
											"end": 36073,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 916,
											"end": 36073,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 916,
											"end": 36073,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 916,
											"end": 36073,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 916,
											"end": 36073,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 916,
											"end": 36073,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 916,
											"end": 36073,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 916,
											"end": 36073,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 916,
											"end": 36073,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 916,
											"end": 36073,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 916,
											"end": 36073,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 916,
											"end": 36073,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 916,
											"end": 36073,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 916,
											"end": 36073,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 916,
											"end": 36073,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 916,
											"end": 36073,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 916,
											"end": 36073,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 916,
											"end": 36073,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 916,
											"end": 36073,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 916,
											"end": 36073,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 916,
											"end": 36073,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 916,
											"end": 36073,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 916,
											"end": 36073,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 916,
											"end": 36073,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 916,
											"end": 36073,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 916,
											"end": 36073,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 916,
											"end": 36073,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 916,
											"end": 36073,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 916,
											"end": 36073,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 916,
											"end": 36073,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 916,
											"end": 36073,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 916,
											"end": 36073,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 916,
											"end": 36073,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 916,
											"end": 36073,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 916,
											"end": 36073,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 916,
											"end": 36073,
											"name": "PUSH",
											"source": 0,
											"value": "42842E0E"
										},
										{
											"begin": 916,
											"end": 36073,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 916,
											"end": 36073,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 916,
											"end": 36073,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 916,
											"end": 36073,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 916,
											"end": 36073,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 916,
											"end": 36073,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 916,
											"end": 36073,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 916,
											"end": 36073,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 916,
											"end": 36073,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A7"
										},
										{
											"begin": 916,
											"end": 36073,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 916,
											"end": 36073,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 916,
											"end": 36073,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 916,
											"end": 36073,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 916,
											"end": 36073,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 916,
											"end": 36073,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 916,
											"end": 36073,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 916,
											"end": 36073,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 916,
											"end": 36073,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 916,
											"end": 36073,
											"name": "PUSH",
											"source": 0,
											"value": "81812FC"
										},
										{
											"begin": 916,
											"end": 36073,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 916,
											"end": 36073,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 916,
											"end": 36073,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 916,
											"end": 36073,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 916,
											"end": 36073,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 916,
											"end": 36073,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 916,
											"end": 36073,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 916,
											"end": 36073,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5969,
											"end": 6584,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 5969,
											"end": 6584,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5969,
											"end": 6584,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5969,
											"end": 6584,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5969,
											"end": 6584,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5969,
											"end": 6584,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5969,
											"end": 6584,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5969,
											"end": 6584,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5969,
											"end": 6584,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5969,
											"end": 6584,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5969,
											"end": 6584,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 5969,
											"end": 6584,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5969,
											"end": 6584,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5969,
											"end": 6584,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 5969,
											"end": 6584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5969,
											"end": 6584,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 5969,
											"end": 6584,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5969,
											"end": 6584,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 5969,
											"end": 6584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5969,
											"end": 6584,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5969,
											"end": 6584,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5969,
											"end": 6584,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5969,
											"end": 6584,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5969,
											"end": 6584,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 5969,
											"end": 6584,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5969,
											"end": 6584,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5969,
											"end": 6584,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 5969,
											"end": 6584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5969,
											"end": 6584,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 5969,
											"end": 6584,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5969,
											"end": 6584,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5969,
											"end": 6584,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5969,
											"end": 6584,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5969,
											"end": 6584,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5969,
											"end": 6584,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5969,
											"end": 6584,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5969,
											"end": 6584,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 11688,
											"end": 11788,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11688,
											"end": 11788,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11688,
											"end": 11788,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 11688,
											"end": 11788,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 11688,
											"end": 11788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11688,
											"end": 11788,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 11688,
											"end": 11788,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11688,
											"end": 11788,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11688,
											"end": 11788,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11688,
											"end": 11788,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 11688,
											"end": 11788,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11688,
											"end": 11788,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11688,
											"end": 11788,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 11688,
											"end": 11788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11688,
											"end": 11788,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 11688,
											"end": 11788,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11688,
											"end": 11788,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11688,
											"end": 11788,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11688,
											"end": 11788,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11688,
											"end": 11788,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11688,
											"end": 11788,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11688,
											"end": 11788,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11688,
											"end": 11788,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 13648,
											"end": 13866,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 13648,
											"end": 13866,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13648,
											"end": 13866,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 13648,
											"end": 13866,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13648,
											"end": 13866,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13648,
											"end": 13866,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 13648,
											"end": 13866,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13648,
											"end": 13866,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13648,
											"end": 13866,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13648,
											"end": 13866,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13648,
											"end": 13866,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 13648,
											"end": 13866,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13648,
											"end": 13866,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13648,
											"end": 13866,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 13648,
											"end": 13866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13648,
											"end": 13866,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 13648,
											"end": 13866,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13648,
											"end": 13866,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 13648,
											"end": 13866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13648,
											"end": 13866,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 13648,
											"end": 13866,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13648,
											"end": 13866,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13648,
											"end": 13866,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13648,
											"end": 13866,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 13648,
											"end": 13866,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13648,
											"end": 13866,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13648,
											"end": 13866,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 13648,
											"end": 13866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13648,
											"end": 13866,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 13648,
											"end": 13866,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13648,
											"end": 13866,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13648,
											"end": 13866,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13648,
											"end": 13866,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13648,
											"end": 13866,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13648,
											"end": 13866,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13648,
											"end": 13866,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13648,
											"end": 13866,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 13182,
											"end": 13582,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 13182,
											"end": 13582,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13182,
											"end": 13582,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 13182,
											"end": 13582,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13182,
											"end": 13582,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13182,
											"end": 13582,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 13182,
											"end": 13582,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13182,
											"end": 13582,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13182,
											"end": 13582,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13182,
											"end": 13582,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13182,
											"end": 13582,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 13182,
											"end": 13582,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13182,
											"end": 13582,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13182,
											"end": 13582,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 13182,
											"end": 13582,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13182,
											"end": 13582,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 13182,
											"end": 13582,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13182,
											"end": 13582,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 13182,
											"end": 13582,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13182,
											"end": 13582,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 13182,
											"end": 13582,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13182,
											"end": 13582,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 4999,
											"end": 5322,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 4999,
											"end": 5322,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4999,
											"end": 5322,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4999,
											"end": 5322,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 4999,
											"end": 5322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4999,
											"end": 5322,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4999,
											"end": 5322,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4999,
											"end": 5322,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4999,
											"end": 5322,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4999,
											"end": 5322,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 4999,
											"end": 5322,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4999,
											"end": 5322,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4999,
											"end": 5322,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 4999,
											"end": 5322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4999,
											"end": 5322,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 4999,
											"end": 5322,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4999,
											"end": 5322,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4999,
											"end": 5322,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4999,
											"end": 5322,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4999,
											"end": 5322,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4999,
											"end": 5322,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4999,
											"end": 5322,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4999,
											"end": 5322,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 22787,
											"end": 25587,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 22787,
											"end": 25587,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22787,
											"end": 25587,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 22787,
											"end": 25587,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22787,
											"end": 25587,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22787,
											"end": 25587,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 22787,
											"end": 25587,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22787,
											"end": 25587,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22787,
											"end": 25587,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22787,
											"end": 25587,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22787,
											"end": 25587,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 22787,
											"end": 25587,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22787,
											"end": 25587,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22787,
											"end": 25587,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 22787,
											"end": 25587,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22787,
											"end": 25587,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 22787,
											"end": 25587,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22787,
											"end": 25587,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 22787,
											"end": 25587,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22787,
											"end": 25587,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 22787,
											"end": 25587,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22787,
											"end": 25587,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 14552,
											"end": 14737,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 14552,
											"end": 14737,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14552,
											"end": 14737,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 14552,
											"end": 14737,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14552,
											"end": 14737,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14552,
											"end": 14737,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14552,
											"end": 14737,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14552,
											"end": 14737,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14552,
											"end": 14737,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14552,
											"end": 14737,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14552,
											"end": 14737,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 14552,
											"end": 14737,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14552,
											"end": 14737,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14552,
											"end": 14737,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 14552,
											"end": 14737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14552,
											"end": 14737,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 14552,
											"end": 14737,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14552,
											"end": 14737,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 14552,
											"end": 14737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14552,
											"end": 14737,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 14552,
											"end": 14737,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14552,
											"end": 14737,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 11469,
											"end": 11621,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 11469,
											"end": 11621,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11469,
											"end": 11621,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 11469,
											"end": 11621,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11469,
											"end": 11621,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11469,
											"end": 11621,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 11469,
											"end": 11621,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11469,
											"end": 11621,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11469,
											"end": 11621,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11469,
											"end": 11621,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11469,
											"end": 11621,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 11469,
											"end": 11621,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11469,
											"end": 11621,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11469,
											"end": 11621,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 11469,
											"end": 11621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11469,
											"end": 11621,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 11469,
											"end": 11621,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11469,
											"end": 11621,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 11469,
											"end": 11621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11469,
											"end": 11621,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 11469,
											"end": 11621,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11469,
											"end": 11621,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11469,
											"end": 11621,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11469,
											"end": 11621,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 11469,
											"end": 11621,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11469,
											"end": 11621,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11469,
											"end": 11621,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 11469,
											"end": 11621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11469,
											"end": 11621,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 11469,
											"end": 11621,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11469,
											"end": 11621,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11469,
											"end": 11621,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11469,
											"end": 11621,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11469,
											"end": 11621,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11469,
											"end": 11621,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11469,
											"end": 11621,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11469,
											"end": 11621,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6880,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 6648,
											"end": 6880,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6880,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 6648,
											"end": 6880,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6648,
											"end": 6880,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6880,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6880,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6880,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6880,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6880,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6880,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 6648,
											"end": 6880,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6880,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6880,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 6648,
											"end": 6880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6880,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 6648,
											"end": 6880,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6880,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 6648,
											"end": 6880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6880,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 6648,
											"end": 6880,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6880,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6648,
											"end": 6880,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6880,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 6648,
											"end": 6880,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6880,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6880,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 6648,
											"end": 6880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6880,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 6648,
											"end": 6880,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6880,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6648,
											"end": 6880,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6880,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6880,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6880,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6880,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6880,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 11857,
											"end": 11961,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 11857,
											"end": 11961,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11857,
											"end": 11961,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 11857,
											"end": 11961,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 11857,
											"end": 11961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11857,
											"end": 11961,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 11857,
											"end": 11961,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11857,
											"end": 11961,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11857,
											"end": 11961,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11857,
											"end": 11961,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 11857,
											"end": 11961,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11857,
											"end": 11961,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11857,
											"end": 11961,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 11857,
											"end": 11961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11857,
											"end": 11961,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 11857,
											"end": 11961,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11857,
											"end": 11961,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11857,
											"end": 11961,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11857,
											"end": 11961,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11857,
											"end": 11961,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11857,
											"end": 11961,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11857,
											"end": 11961,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11857,
											"end": 11961,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 13938,
											"end": 14246,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 13938,
											"end": 14246,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13938,
											"end": 14246,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 13938,
											"end": 14246,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13938,
											"end": 14246,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13938,
											"end": 14246,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 13938,
											"end": 14246,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13938,
											"end": 14246,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13938,
											"end": 14246,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13938,
											"end": 14246,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13938,
											"end": 14246,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 13938,
											"end": 14246,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13938,
											"end": 14246,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13938,
											"end": 14246,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 13938,
											"end": 14246,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13938,
											"end": 14246,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 13938,
											"end": 14246,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13938,
											"end": 14246,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 13938,
											"end": 14246,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13938,
											"end": 14246,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 13938,
											"end": 14246,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13938,
											"end": 14246,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 14808,
											"end": 15207,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 14808,
											"end": 15207,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14808,
											"end": 15207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 14808,
											"end": 15207,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14808,
											"end": 15207,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14808,
											"end": 15207,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14808,
											"end": 15207,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14808,
											"end": 15207,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14808,
											"end": 15207,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14808,
											"end": 15207,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14808,
											"end": 15207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 14808,
											"end": 15207,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14808,
											"end": 15207,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14808,
											"end": 15207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 14808,
											"end": 15207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14808,
											"end": 15207,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 14808,
											"end": 15207,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14808,
											"end": 15207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 14808,
											"end": 15207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14808,
											"end": 15207,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 14808,
											"end": 15207,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14808,
											"end": 15207,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 12032,
											"end": 12350,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 12032,
											"end": 12350,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12032,
											"end": 12350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 12032,
											"end": 12350,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12032,
											"end": 12350,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12032,
											"end": 12350,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 12032,
											"end": 12350,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12032,
											"end": 12350,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12032,
											"end": 12350,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12032,
											"end": 12350,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12032,
											"end": 12350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 12032,
											"end": 12350,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12032,
											"end": 12350,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12032,
											"end": 12350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 12032,
											"end": 12350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12032,
											"end": 12350,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 12032,
											"end": 12350,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12032,
											"end": 12350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 12032,
											"end": 12350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12032,
											"end": 12350,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 12032,
											"end": 12350,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12032,
											"end": 12350,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12032,
											"end": 12350,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12032,
											"end": 12350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 12032,
											"end": 12350,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12032,
											"end": 12350,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12032,
											"end": 12350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 12032,
											"end": 12350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12032,
											"end": 12350,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 12032,
											"end": 12350,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12032,
											"end": 12350,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12032,
											"end": 12350,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12032,
											"end": 12350,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12032,
											"end": 12350,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12032,
											"end": 12350,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12032,
											"end": 12350,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12032,
											"end": 12350,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 14317,
											"end": 14481,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 14317,
											"end": 14481,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14317,
											"end": 14481,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 14317,
											"end": 14481,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14317,
											"end": 14481,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14317,
											"end": 14481,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14317,
											"end": 14481,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14317,
											"end": 14481,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14317,
											"end": 14481,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14317,
											"end": 14481,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14317,
											"end": 14481,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 14317,
											"end": 14481,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14317,
											"end": 14481,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14317,
											"end": 14481,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 14317,
											"end": 14481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14317,
											"end": 14481,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 14317,
											"end": 14481,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14317,
											"end": 14481,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 14317,
											"end": 14481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14317,
											"end": 14481,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 14317,
											"end": 14481,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14317,
											"end": 14481,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14317,
											"end": 14481,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14317,
											"end": 14481,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 14317,
											"end": 14481,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14317,
											"end": 14481,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14317,
											"end": 14481,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 14317,
											"end": 14481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14317,
											"end": 14481,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 14317,
											"end": 14481,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14317,
											"end": 14481,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14317,
											"end": 14481,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14317,
											"end": 14481,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14317,
											"end": 14481,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14317,
											"end": 14481,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14317,
											"end": 14481,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14317,
											"end": 14481,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 5969,
											"end": 6584,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 5969,
											"end": 6584,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6054,
											"end": 6058,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6369,
											"end": 6379,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A7"
										},
										{
											"begin": 6354,
											"end": 6379,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 6354,
											"end": 6379,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 6354,
											"end": 6365,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6354,
											"end": 6379,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6354,
											"end": 6379,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 6354,
											"end": 6379,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6354,
											"end": 6379,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6354,
											"end": 6456,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6354,
											"end": 6456,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 6354,
											"end": 6456,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6354,
											"end": 6456,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6446,
											"end": 6456,
											"name": "PUSH",
											"source": 0,
											"value": "80AC58CD"
										},
										{
											"begin": 6431,
											"end": 6456,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 6431,
											"end": 6456,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6442,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6456,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6431,
											"end": 6456,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6456,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6456,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6354,
											"end": 6456,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 6354,
											"end": 6456,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6354,
											"end": 6533,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6354,
											"end": 6533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 6354,
											"end": 6533,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6354,
											"end": 6533,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6523,
											"end": 6533,
											"name": "PUSH",
											"source": 0,
											"value": "5B5E139F"
										},
										{
											"begin": 6508,
											"end": 6533,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 6508,
											"end": 6533,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 6508,
											"end": 6519,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6508,
											"end": 6533,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6508,
											"end": 6533,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 6508,
											"end": 6533,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6508,
											"end": 6533,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6354,
											"end": 6533,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 6354,
											"end": 6533,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6334,
											"end": 6533,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6334,
											"end": 6533,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5969,
											"end": 6584,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5969,
											"end": 6584,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5969,
											"end": 6584,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5969,
											"end": 6584,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11688,
											"end": 11788,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 11688,
											"end": 11788,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11742,
											"end": 11755,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 11775,
											"end": 11780,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 11768,
											"end": 11780,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11768,
											"end": 11780,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11768,
											"end": 11780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 11768,
											"end": 11780,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11768,
											"end": 11780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 11768,
											"end": 11780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11768,
											"end": 11780,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 11768,
											"end": 11780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11768,
											"end": 11780,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11768,
											"end": 11780,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 11768,
											"end": 11780,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11768,
											"end": 11780,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11768,
											"end": 11780,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11768,
											"end": 11780,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11768,
											"end": 11780,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 11768,
											"end": 11780,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 11768,
											"end": 11780,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11768,
											"end": 11780,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11768,
											"end": 11780,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11768,
											"end": 11780,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11768,
											"end": 11780,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11768,
											"end": 11780,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11768,
											"end": 11780,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11768,
											"end": 11780,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11768,
											"end": 11780,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11768,
											"end": 11780,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11768,
											"end": 11780,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 11768,
											"end": 11780,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11768,
											"end": 11780,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11768,
											"end": 11780,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11768,
											"end": 11780,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11768,
											"end": 11780,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11768,
											"end": 11780,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11768,
											"end": 11780,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11768,
											"end": 11780,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11768,
											"end": 11780,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11768,
											"end": 11780,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11768,
											"end": 11780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 11768,
											"end": 11780,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11768,
											"end": 11780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 11768,
											"end": 11780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11768,
											"end": 11780,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 11768,
											"end": 11780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11768,
											"end": 11780,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11768,
											"end": 11780,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11768,
											"end": 11780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 11768,
											"end": 11780,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11768,
											"end": 11780,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11768,
											"end": 11780,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 11768,
											"end": 11780,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11768,
											"end": 11780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 11768,
											"end": 11780,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11768,
											"end": 11780,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 11768,
											"end": 11780,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11768,
											"end": 11780,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11768,
											"end": 11780,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11768,
											"end": 11780,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 11768,
											"end": 11780,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 11768,
											"end": 11780,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11768,
											"end": 11780,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11768,
											"end": 11780,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11768,
											"end": 11780,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11768,
											"end": 11780,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11768,
											"end": 11780,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11768,
											"end": 11780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 11768,
											"end": 11780,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11768,
											"end": 11780,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 11768,
											"end": 11780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11768,
											"end": 11780,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11768,
											"end": 11780,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11768,
											"end": 11780,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11768,
											"end": 11780,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11768,
											"end": 11780,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11768,
											"end": 11780,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11768,
											"end": 11780,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11768,
											"end": 11780,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11768,
											"end": 11780,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11768,
											"end": 11780,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11768,
											"end": 11780,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 11768,
											"end": 11780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11768,
											"end": 11780,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11768,
											"end": 11780,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11768,
											"end": 11780,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11768,
											"end": 11780,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11768,
											"end": 11780,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11768,
											"end": 11780,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 11768,
											"end": 11780,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11768,
											"end": 11780,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11768,
											"end": 11780,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11768,
											"end": 11780,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11768,
											"end": 11780,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11768,
											"end": 11780,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11768,
											"end": 11780,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 11768,
											"end": 11780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 11768,
											"end": 11780,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11768,
											"end": 11780,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11768,
											"end": 11780,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11768,
											"end": 11780,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11768,
											"end": 11780,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 11768,
											"end": 11780,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11768,
											"end": 11780,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11768,
											"end": 11780,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11768,
											"end": 11780,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11768,
											"end": 11780,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 11768,
											"end": 11780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11768,
											"end": 11780,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11768,
											"end": 11780,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11768,
											"end": 11780,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11768,
											"end": 11780,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11768,
											"end": 11780,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11768,
											"end": 11780,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11768,
											"end": 11780,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11688,
											"end": 11788,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11688,
											"end": 11788,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13648,
											"end": 13866,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 13648,
											"end": 13866,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13724,
											"end": 13731,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13749,
											"end": 13765,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 13757,
											"end": 13764,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13749,
											"end": 13756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 13749,
											"end": 13765,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13749,
											"end": 13765,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 13749,
											"end": 13765,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13744,
											"end": 13808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 13744,
											"end": 13808,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13774,
											"end": 13808,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13774,
											"end": 13808,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13774,
											"end": 13808,
											"name": "PUSH",
											"source": 0,
											"value": "CF4700E400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13774,
											"end": 13808,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13774,
											"end": 13808,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13774,
											"end": 13808,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13774,
											"end": 13808,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13774,
											"end": 13808,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13774,
											"end": 13808,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13774,
											"end": 13808,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13774,
											"end": 13808,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13774,
											"end": 13808,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13774,
											"end": 13808,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13774,
											"end": 13808,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13744,
											"end": 13808,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 13744,
											"end": 13808,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13828,
											"end": 13843,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 13828,
											"end": 13852,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13844,
											"end": 13851,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13828,
											"end": 13852,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13828,
											"end": 13852,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13828,
											"end": 13852,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13828,
											"end": 13852,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13828,
											"end": 13852,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13828,
											"end": 13852,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13828,
											"end": 13852,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13828,
											"end": 13852,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13828,
											"end": 13852,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13828,
											"end": 13852,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13828,
											"end": 13852,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13828,
											"end": 13858,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13828,
											"end": 13858,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13828,
											"end": 13858,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13828,
											"end": 13858,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13828,
											"end": 13858,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13828,
											"end": 13858,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13828,
											"end": 13858,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 13828,
											"end": 13858,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 13828,
											"end": 13858,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13828,
											"end": 13858,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 13828,
											"end": 13858,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13828,
											"end": 13858,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13821,
											"end": 13858,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13821,
											"end": 13858,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13648,
											"end": 13866,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13648,
											"end": 13866,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13648,
											"end": 13866,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13648,
											"end": 13866,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13182,
											"end": 13582,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 13182,
											"end": 13582,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13263,
											"end": 13276,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13279,
											"end": 13295,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 13287,
											"end": 13294,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13279,
											"end": 13286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 13279,
											"end": 13295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13279,
											"end": 13295,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 13279,
											"end": 13295,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13263,
											"end": 13295,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13263,
											"end": 13295,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13335,
											"end": 13340,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13312,
											"end": 13340,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13312,
											"end": 13340,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13312,
											"end": 13331,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 13312,
											"end": 13329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 13312,
											"end": 13331,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13312,
											"end": 13331,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 13312,
											"end": 13331,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13312,
											"end": 13340,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13312,
											"end": 13340,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13312,
											"end": 13340,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 13308,
											"end": 13483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 13308,
											"end": 13483,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13360,
											"end": 13404,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 13377,
											"end": 13382,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13384,
											"end": 13403,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 13384,
											"end": 13401,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 13384,
											"end": 13403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13384,
											"end": 13403,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 13384,
											"end": 13403,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13360,
											"end": 13376,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 13360,
											"end": 13404,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13360,
											"end": 13404,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 13360,
											"end": 13404,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 13483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 13355,
											"end": 13483,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13432,
											"end": 13467,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13432,
											"end": 13467,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13432,
											"end": 13467,
											"name": "PUSH",
											"source": 0,
											"value": "CFB3B94200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13432,
											"end": 13467,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13432,
											"end": 13467,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13432,
											"end": 13467,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13432,
											"end": 13467,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13432,
											"end": 13467,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13432,
											"end": 13467,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13432,
											"end": 13467,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13432,
											"end": 13467,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13432,
											"end": 13467,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13432,
											"end": 13467,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13432,
											"end": 13467,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 13483,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 13355,
											"end": 13483,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13308,
											"end": 13483,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 13308,
											"end": 13483,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13528,
											"end": 13530,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13495,
											"end": 13510,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 13495,
											"end": 13519,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13511,
											"end": 13518,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13495,
											"end": 13519,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13495,
											"end": 13519,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13495,
											"end": 13519,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13495,
											"end": 13519,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13495,
											"end": 13519,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13495,
											"end": 13519,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13495,
											"end": 13519,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13495,
											"end": 13519,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13495,
											"end": 13519,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13495,
											"end": 13519,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13495,
											"end": 13519,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13495,
											"end": 13525,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13495,
											"end": 13525,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13495,
											"end": 13525,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13495,
											"end": 13530,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 13495,
											"end": 13530,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 13495,
											"end": 13530,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13495,
											"end": 13530,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13495,
											"end": 13530,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13495,
											"end": 13530,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13495,
											"end": 13530,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 13495,
											"end": 13530,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 13495,
											"end": 13530,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13495,
											"end": 13530,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13495,
											"end": 13530,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13495,
											"end": 13530,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13495,
											"end": 13530,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13495,
											"end": 13530,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 13495,
											"end": 13530,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 13495,
											"end": 13530,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13495,
											"end": 13530,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 13495,
											"end": 13530,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13566,
											"end": 13573,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13562,
											"end": 13564,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13546,
											"end": 13574,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13546,
											"end": 13574,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13555,
											"end": 13560,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13546,
											"end": 13574,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13546,
											"end": 13574,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13546,
											"end": 13574,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 13546,
											"end": 13574,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13546,
											"end": 13574,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13546,
											"end": 13574,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13546,
											"end": 13574,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13546,
											"end": 13574,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13546,
											"end": 13574,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13546,
											"end": 13574,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13546,
											"end": 13574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13546,
											"end": 13574,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 13252,
											"end": 13582,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13182,
											"end": 13582,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13182,
											"end": 13582,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13182,
											"end": 13582,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4999,
											"end": 5322,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 4999,
											"end": 5322,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5060,
											"end": 5067,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5288,
											"end": 5303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 5288,
											"end": 5301,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 5288,
											"end": 5303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5288,
											"end": 5303,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 5288,
											"end": 5303,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5273,
											"end": 5285,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5273,
											"end": 5285,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5257,
											"end": 5270,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5257,
											"end": 5270,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5257,
											"end": 5285,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5257,
											"end": 5303,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5250,
											"end": 5303,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5250,
											"end": 5303,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4999,
											"end": 5322,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4999,
											"end": 5322,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22787,
											"end": 25587,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 22787,
											"end": 25587,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22921,
											"end": 22948,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22951,
											"end": 22978,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 22970,
											"end": 22977,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22951,
											"end": 22969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 22951,
											"end": 22978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22951,
											"end": 22978,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 22951,
											"end": 22978,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22921,
											"end": 22978,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22921,
											"end": 22978,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23036,
											"end": 23040,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 22995,
											"end": 23040,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22995,
											"end": 23040,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23011,
											"end": 23030,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22995,
											"end": 23040,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22995,
											"end": 23040,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22995,
											"end": 23040,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22991,
											"end": 23077,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 22991,
											"end": 23077,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23049,
											"end": 23077,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23049,
											"end": 23077,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23049,
											"end": 23077,
											"name": "PUSH",
											"source": 0,
											"value": "A114810000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 23049,
											"end": 23077,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23049,
											"end": 23077,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23049,
											"end": 23077,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23049,
											"end": 23077,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23049,
											"end": 23077,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23049,
											"end": 23077,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23049,
											"end": 23077,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23049,
											"end": 23077,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23049,
											"end": 23077,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23049,
											"end": 23077,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23049,
											"end": 23077,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 22991,
											"end": 23077,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 22991,
											"end": 23077,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23091,
											"end": 23118,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23120,
											"end": 23143,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23147,
											"end": 23175,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 23167,
											"end": 23174,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 23147,
											"end": 23166,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 23147,
											"end": 23175,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23147,
											"end": 23175,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 23147,
											"end": 23175,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23090,
											"end": 23175,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23090,
											"end": 23175,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23090,
											"end": 23175,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23090,
											"end": 23175,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23275,
											"end": 23337,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 23294,
											"end": 23309,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23311,
											"end": 23315,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 23317,
											"end": 23336,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 23317,
											"end": 23334,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 23317,
											"end": 23336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23317,
											"end": 23336,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 23317,
											"end": 23336,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23275,
											"end": 23293,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 23275,
											"end": 23337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23275,
											"end": 23337,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 23275,
											"end": 23337,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23270,
											"end": 23444,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 23270,
											"end": 23444,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23357,
											"end": 23400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 23374,
											"end": 23378,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 23380,
											"end": 23399,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 23380,
											"end": 23397,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 23380,
											"end": 23399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23380,
											"end": 23399,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 23380,
											"end": 23399,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23357,
											"end": 23373,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 23357,
											"end": 23400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23357,
											"end": 23400,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 23357,
											"end": 23400,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23352,
											"end": 23444,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 23352,
											"end": 23444,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23409,
											"end": 23444,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23409,
											"end": 23444,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23409,
											"end": 23444,
											"name": "PUSH",
											"source": 0,
											"value": "59C896BE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 23409,
											"end": 23444,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23409,
											"end": 23444,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23409,
											"end": 23444,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23409,
											"end": 23444,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23409,
											"end": 23444,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23409,
											"end": 23444,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23409,
											"end": 23444,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23409,
											"end": 23444,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23409,
											"end": 23444,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23409,
											"end": 23444,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23409,
											"end": 23444,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 23352,
											"end": 23444,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 23352,
											"end": 23444,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23270,
											"end": 23444,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 23270,
											"end": 23444,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23475,
											"end": 23476,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23461,
											"end": 23477,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23461,
											"end": 23477,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23461,
											"end": 23463,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 23461,
											"end": 23477,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23461,
											"end": 23477,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23461,
											"end": 23477,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23457,
											"end": 23509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 23457,
											"end": 23509,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23486,
											"end": 23509,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23486,
											"end": 23509,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23486,
											"end": 23509,
											"name": "PUSH",
											"source": 0,
											"value": "EA553B3400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 23486,
											"end": 23509,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23486,
											"end": 23509,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23486,
											"end": 23509,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23486,
											"end": 23509,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23486,
											"end": 23509,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23486,
											"end": 23509,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23486,
											"end": 23509,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23486,
											"end": 23509,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23486,
											"end": 23509,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23486,
											"end": 23509,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23486,
											"end": 23509,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 23457,
											"end": 23509,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 23457,
											"end": 23509,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23522,
											"end": 23565,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 23544,
											"end": 23548,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 23550,
											"end": 23552,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 23554,
											"end": 23561,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 23563,
											"end": 23564,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 23522,
											"end": 23543,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 23522,
											"end": 23565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23522,
											"end": 23565,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 23522,
											"end": 23565,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23658,
											"end": 23673,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23655,
											"end": 23815,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23655,
											"end": 23815,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 23655,
											"end": 23815,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23798,
											"end": 23799,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23777,
											"end": 23796,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23770,
											"end": 23800,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 23655,
											"end": 23815,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 23655,
											"end": 23815,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24193,
											"end": 24211,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 24193,
											"end": 24217,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24212,
											"end": 24216,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 24193,
											"end": 24217,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24193,
											"end": 24217,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24193,
											"end": 24217,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24193,
											"end": 24217,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24193,
											"end": 24217,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24193,
											"end": 24217,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24193,
											"end": 24217,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24193,
											"end": 24217,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24193,
											"end": 24217,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24193,
											"end": 24217,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24193,
											"end": 24217,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24193,
											"end": 24217,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24193,
											"end": 24217,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24193,
											"end": 24217,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24193,
											"end": 24217,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 24193,
											"end": 24217,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24191,
											"end": 24217,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24217,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24217,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 24191,
											"end": 24217,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24217,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24217,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24217,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24217,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24217,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24217,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24217,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24217,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24262,
											"end": 24280,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 24262,
											"end": 24284,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24281,
											"end": 24283,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 24262,
											"end": 24284,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24262,
											"end": 24284,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24262,
											"end": 24284,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24262,
											"end": 24284,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24262,
											"end": 24284,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24262,
											"end": 24284,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24262,
											"end": 24284,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24262,
											"end": 24284,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24262,
											"end": 24284,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24262,
											"end": 24284,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24262,
											"end": 24284,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24262,
											"end": 24284,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24262,
											"end": 24284,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24262,
											"end": 24284,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24262,
											"end": 24284,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 24262,
											"end": 24284,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24260,
											"end": 24284,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24260,
											"end": 24284,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24260,
											"end": 24284,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 24260,
											"end": 24284,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24260,
											"end": 24284,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24260,
											"end": 24284,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24260,
											"end": 24284,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24260,
											"end": 24284,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24260,
											"end": 24284,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24260,
											"end": 24284,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 24260,
											"end": 24284,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24584,
											"end": 24729,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 24621,
											"end": 24623,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 24669,
											"end": 24714,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 24684,
											"end": 24688,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 24690,
											"end": 24692,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 24694,
											"end": 24713,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 24669,
											"end": 24683,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 24669,
											"end": 24714,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24669,
											"end": 24714,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 24669,
											"end": 24714,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2210,
											"end": 2218,
											"name": "PUSH",
											"source": 0,
											"value": "200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 24642,
											"end": 24714,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 24584,
											"end": 24602,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 24584,
											"end": 24729,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24584,
											"end": 24729,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 24584,
											"end": 24729,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24555,
											"end": 24572,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24555,
											"end": 24581,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24573,
											"end": 24580,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 24555,
											"end": 24581,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24555,
											"end": 24581,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24555,
											"end": 24581,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24555,
											"end": 24581,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24555,
											"end": 24581,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24555,
											"end": 24581,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24555,
											"end": 24581,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24555,
											"end": 24581,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24555,
											"end": 24581,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24555,
											"end": 24581,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24555,
											"end": 24581,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 24555,
											"end": 24729,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24555,
											"end": 24729,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24555,
											"end": 24729,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 24555,
											"end": 24729,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24899,
											"end": 24900,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2210,
											"end": 2218,
											"name": "PUSH",
											"source": 0,
											"value": "200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 24849,
											"end": 24868,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 24849,
											"end": 24895,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24849,
											"end": 24900,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24845,
											"end": 25471,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 24845,
											"end": 25471,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24921,
											"end": 24940,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24953,
											"end": 24954,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 24943,
											"end": 24950,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 24943,
											"end": 24954,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24921,
											"end": 24954,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24921,
											"end": 24954,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25110,
											"end": 25111,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25076,
											"end": 25093,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25076,
											"end": 25106,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25094,
											"end": 25105,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25076,
											"end": 25106,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25076,
											"end": 25106,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25076,
											"end": 25106,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25076,
											"end": 25106,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25076,
											"end": 25106,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25076,
											"end": 25106,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25076,
											"end": 25106,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25076,
											"end": 25106,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25076,
											"end": 25106,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25076,
											"end": 25106,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25076,
											"end": 25106,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 25076,
											"end": 25106,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25076,
											"end": 25111,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25072,
											"end": 25456,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 25072,
											"end": 25456,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25214,
											"end": 25227,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25214,
											"end": 25227,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25199,
											"end": 25210,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25199,
											"end": 25227,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25195,
											"end": 25437,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 25195,
											"end": 25437,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25394,
											"end": 25413,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25361,
											"end": 25378,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25361,
											"end": 25391,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25379,
											"end": 25390,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25361,
											"end": 25391,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25361,
											"end": 25391,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25361,
											"end": 25391,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25361,
											"end": 25391,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25361,
											"end": 25391,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25361,
											"end": 25391,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25361,
											"end": 25391,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25361,
											"end": 25391,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25361,
											"end": 25391,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25361,
											"end": 25391,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25361,
											"end": 25391,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 25361,
											"end": 25413,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25361,
											"end": 25413,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25361,
											"end": 25413,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 25361,
											"end": 25413,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25195,
											"end": 25437,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 25195,
											"end": 25437,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25072,
											"end": 25456,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 25072,
											"end": 25456,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24902,
											"end": 25471,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24845,
											"end": 25471,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 24845,
											"end": 25471,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25518,
											"end": 25525,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25514,
											"end": 25516,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 25499,
											"end": 25526,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25499,
											"end": 25526,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25508,
											"end": 25512,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 25499,
											"end": 25526,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25499,
											"end": 25526,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25499,
											"end": 25526,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 25499,
											"end": 25526,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25499,
											"end": 25526,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25499,
											"end": 25526,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25499,
											"end": 25526,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25499,
											"end": 25526,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25499,
											"end": 25526,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25499,
											"end": 25526,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25499,
											"end": 25526,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25499,
											"end": 25526,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 25537,
											"end": 25579,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 25558,
											"end": 25562,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 25564,
											"end": 25566,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 25568,
											"end": 25575,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 25577,
											"end": 25578,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 25537,
											"end": 25557,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 25537,
											"end": 25579,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25537,
											"end": 25579,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 25537,
											"end": 25579,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22910,
											"end": 25587,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22910,
											"end": 25587,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22910,
											"end": 25587,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22787,
											"end": 25587,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22787,
											"end": 25587,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22787,
											"end": 25587,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22787,
											"end": 25587,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14552,
											"end": 14737,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 14552,
											"end": 14737,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14690,
											"end": 14729,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 14707,
											"end": 14711,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14713,
											"end": 14715,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14717,
											"end": 14724,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14690,
											"end": 14729,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14690,
											"end": 14729,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14690,
											"end": 14729,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14690,
											"end": 14729,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14690,
											"end": 14729,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14690,
											"end": 14729,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14690,
											"end": 14729,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14690,
											"end": 14729,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14690,
											"end": 14729,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14690,
											"end": 14729,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14690,
											"end": 14729,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14690,
											"end": 14729,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14690,
											"end": 14706,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 14690,
											"end": 14729,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14690,
											"end": 14729,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 14690,
											"end": 14729,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14552,
											"end": 14737,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14552,
											"end": 14737,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14552,
											"end": 14737,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14552,
											"end": 14737,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11469,
											"end": 11621,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 11469,
											"end": 11621,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11541,
											"end": 11548,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11584,
											"end": 11611,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 11603,
											"end": 11610,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11584,
											"end": 11602,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 11584,
											"end": 11611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11584,
											"end": 11611,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 11584,
											"end": 11611,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11561,
											"end": 11613,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11561,
											"end": 11613,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11469,
											"end": 11621,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11469,
											"end": 11621,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11469,
											"end": 11621,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11469,
											"end": 11621,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6880,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 6648,
											"end": 6880,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6720,
											"end": 6727,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6761,
											"end": 6762,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6744,
											"end": 6763,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6744,
											"end": 6763,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6744,
											"end": 6749,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6744,
											"end": 6763,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6744,
											"end": 6763,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6744,
											"end": 6763,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6740,
											"end": 6800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 6740,
											"end": 6800,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6772,
											"end": 6800,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6772,
											"end": 6800,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6772,
											"end": 6800,
											"name": "PUSH",
											"source": 0,
											"value": "8F4EB60400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6772,
											"end": 6800,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6772,
											"end": 6800,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6772,
											"end": 6800,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6772,
											"end": 6800,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6772,
											"end": 6800,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6772,
											"end": 6800,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6772,
											"end": 6800,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6772,
											"end": 6800,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6772,
											"end": 6800,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6772,
											"end": 6800,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6772,
											"end": 6800,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6740,
											"end": 6800,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 6740,
											"end": 6800,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1162,
											"end": 1175,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6818,
											"end": 6836,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 6818,
											"end": 6843,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6837,
											"end": 6842,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6818,
											"end": 6843,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6818,
											"end": 6843,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6818,
											"end": 6843,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6818,
											"end": 6843,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6818,
											"end": 6843,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6818,
											"end": 6843,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6818,
											"end": 6843,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6818,
											"end": 6843,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6818,
											"end": 6843,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6818,
											"end": 6843,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6818,
											"end": 6843,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6818,
											"end": 6843,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6818,
											"end": 6843,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6818,
											"end": 6843,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6818,
											"end": 6843,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6818,
											"end": 6843,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6818,
											"end": 6872,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6811,
											"end": 6872,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6811,
											"end": 6872,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6880,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6880,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6880,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6880,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11857,
											"end": 11961,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 11857,
											"end": 11961,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11913,
											"end": 11926,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 11946,
											"end": 11953,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 11939,
											"end": 11953,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11939,
											"end": 11953,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11939,
											"end": 11953,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 11939,
											"end": 11953,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11939,
											"end": 11953,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 11939,
											"end": 11953,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11939,
											"end": 11953,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 11939,
											"end": 11953,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11939,
											"end": 11953,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11939,
											"end": 11953,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 11939,
											"end": 11953,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11939,
											"end": 11953,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11939,
											"end": 11953,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11939,
											"end": 11953,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11939,
											"end": 11953,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 11939,
											"end": 11953,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 11939,
											"end": 11953,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11939,
											"end": 11953,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11939,
											"end": 11953,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11939,
											"end": 11953,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11939,
											"end": 11953,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11939,
											"end": 11953,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11939,
											"end": 11953,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11939,
											"end": 11953,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11939,
											"end": 11953,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11939,
											"end": 11953,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11939,
											"end": 11953,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 11939,
											"end": 11953,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11939,
											"end": 11953,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11939,
											"end": 11953,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11939,
											"end": 11953,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11939,
											"end": 11953,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11939,
											"end": 11953,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11939,
											"end": 11953,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11939,
											"end": 11953,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11939,
											"end": 11953,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11939,
											"end": 11953,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11939,
											"end": 11953,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 11939,
											"end": 11953,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11939,
											"end": 11953,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 11939,
											"end": 11953,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11939,
											"end": 11953,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 11939,
											"end": 11953,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11939,
											"end": 11953,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11939,
											"end": 11953,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11939,
											"end": 11953,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 11939,
											"end": 11953,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11939,
											"end": 11953,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11939,
											"end": 11953,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 11939,
											"end": 11953,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11939,
											"end": 11953,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 11939,
											"end": 11953,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11939,
											"end": 11953,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 11939,
											"end": 11953,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11939,
											"end": 11953,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11939,
											"end": 11953,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11939,
											"end": 11953,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 11939,
											"end": 11953,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 11939,
											"end": 11953,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11939,
											"end": 11953,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11939,
											"end": 11953,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11939,
											"end": 11953,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11939,
											"end": 11953,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11939,
											"end": 11953,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11939,
											"end": 11953,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 11939,
											"end": 11953,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11939,
											"end": 11953,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 11939,
											"end": 11953,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11939,
											"end": 11953,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11939,
											"end": 11953,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11939,
											"end": 11953,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11939,
											"end": 11953,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11939,
											"end": 11953,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11939,
											"end": 11953,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11939,
											"end": 11953,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11939,
											"end": 11953,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11939,
											"end": 11953,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11939,
											"end": 11953,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11939,
											"end": 11953,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 11939,
											"end": 11953,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11939,
											"end": 11953,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11939,
											"end": 11953,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11939,
											"end": 11953,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11939,
											"end": 11953,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11939,
											"end": 11953,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11939,
											"end": 11953,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 11939,
											"end": 11953,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11939,
											"end": 11953,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11939,
											"end": 11953,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11939,
											"end": 11953,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11939,
											"end": 11953,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11939,
											"end": 11953,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11939,
											"end": 11953,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 11939,
											"end": 11953,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 11939,
											"end": 11953,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11939,
											"end": 11953,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11939,
											"end": 11953,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11939,
											"end": 11953,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11939,
											"end": 11953,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 11939,
											"end": 11953,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11939,
											"end": 11953,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11939,
											"end": 11953,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11939,
											"end": 11953,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11939,
											"end": 11953,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 11939,
											"end": 11953,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11939,
											"end": 11953,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11939,
											"end": 11953,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11939,
											"end": 11953,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11939,
											"end": 11953,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11939,
											"end": 11953,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11939,
											"end": 11953,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11939,
											"end": 11953,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11857,
											"end": 11961,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11857,
											"end": 11961,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13938,
											"end": 14246,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 13938,
											"end": 14246,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14049,
											"end": 14068,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 14049,
											"end": 14066,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 14049,
											"end": 14068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14049,
											"end": 14068,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 14049,
											"end": 14068,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14037,
											"end": 14068,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14037,
											"end": 14068,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14037,
											"end": 14045,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14037,
											"end": 14068,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14037,
											"end": 14068,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14037,
											"end": 14068,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14033,
											"end": 14094,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 14033,
											"end": 14094,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14077,
											"end": 14094,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14077,
											"end": 14094,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14077,
											"end": 14094,
											"name": "PUSH",
											"source": 0,
											"value": "B06307DB00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14077,
											"end": 14094,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14077,
											"end": 14094,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14077,
											"end": 14094,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14077,
											"end": 14094,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14077,
											"end": 14094,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14077,
											"end": 14094,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14077,
											"end": 14094,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14077,
											"end": 14094,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14077,
											"end": 14094,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14077,
											"end": 14094,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14077,
											"end": 14094,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14033,
											"end": 14094,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 14033,
											"end": 14094,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14159,
											"end": 14167,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14107,
											"end": 14125,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 14107,
											"end": 14146,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14126,
											"end": 14145,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 14126,
											"end": 14143,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 14126,
											"end": 14145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14126,
											"end": 14145,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 14126,
											"end": 14145,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14107,
											"end": 14146,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14107,
											"end": 14146,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14107,
											"end": 14146,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14107,
											"end": 14146,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14107,
											"end": 14146,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14107,
											"end": 14146,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14107,
											"end": 14146,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14107,
											"end": 14146,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14107,
											"end": 14146,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14107,
											"end": 14146,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14107,
											"end": 14146,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14107,
											"end": 14146,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14107,
											"end": 14146,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14107,
											"end": 14146,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14107,
											"end": 14146,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14107,
											"end": 14156,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14147,
											"end": 14155,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14107,
											"end": 14156,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14107,
											"end": 14156,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14107,
											"end": 14156,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14107,
											"end": 14156,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14107,
											"end": 14156,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14107,
											"end": 14156,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14107,
											"end": 14156,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14107,
											"end": 14156,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14107,
											"end": 14156,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14107,
											"end": 14156,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14107,
											"end": 14156,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14107,
											"end": 14156,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14107,
											"end": 14156,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14107,
											"end": 14156,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14107,
											"end": 14156,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14107,
											"end": 14156,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14107,
											"end": 14167,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 14107,
											"end": 14167,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 14107,
											"end": 14167,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14107,
											"end": 14167,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14107,
											"end": 14167,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14107,
											"end": 14167,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 14107,
											"end": 14167,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 14107,
											"end": 14167,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 14107,
											"end": 14167,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14107,
											"end": 14167,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14107,
											"end": 14167,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14107,
											"end": 14167,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14107,
											"end": 14167,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14107,
											"end": 14167,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 14107,
											"end": 14167,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 14107,
											"end": 14167,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14107,
											"end": 14167,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 14107,
											"end": 14167,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14219,
											"end": 14227,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14183,
											"end": 14238,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14183,
											"end": 14238,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14198,
											"end": 14217,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 14198,
											"end": 14215,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 14198,
											"end": 14217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14198,
											"end": 14217,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 14198,
											"end": 14217,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14183,
											"end": 14238,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14183,
											"end": 14238,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14183,
											"end": 14238,
											"name": "PUSH",
											"source": 0,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 14229,
											"end": 14237,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14183,
											"end": 14238,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14183,
											"end": 14238,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14183,
											"end": 14238,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 14183,
											"end": 14238,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14183,
											"end": 14238,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14183,
											"end": 14238,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 14183,
											"end": 14238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14183,
											"end": 14238,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 14183,
											"end": 14238,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14183,
											"end": 14238,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14183,
											"end": 14238,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14183,
											"end": 14238,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14183,
											"end": 14238,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14183,
											"end": 14238,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14183,
											"end": 14238,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14183,
											"end": 14238,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 13938,
											"end": 14246,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13938,
											"end": 14246,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13938,
											"end": 14246,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14808,
											"end": 15207,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 14808,
											"end": 15207,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14975,
											"end": 15006,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 14988,
											"end": 14992,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14994,
											"end": 14996,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14998,
											"end": 15005,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14975,
											"end": 14987,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 14975,
											"end": 15006,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14975,
											"end": 15006,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 14975,
											"end": 15006,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15039,
											"end": 15040,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15021,
											"end": 15023,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15021,
											"end": 15035,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15021,
											"end": 15035,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15021,
											"end": 15035,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 15021,
											"end": 15040,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15017,
											"end": 15200,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 15017,
											"end": 15200,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15060,
											"end": 15116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 15091,
											"end": 15095,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15097,
											"end": 15099,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15101,
											"end": 15108,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15110,
											"end": 15115,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15060,
											"end": 15090,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 15060,
											"end": 15116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15060,
											"end": 15116,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 15060,
											"end": 15116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15055,
											"end": 15200,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 15055,
											"end": 15200,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15144,
											"end": 15184,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15144,
											"end": 15184,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15144,
											"end": 15184,
											"name": "PUSH",
											"source": 0,
											"value": "D1A57ED600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15144,
											"end": 15184,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15144,
											"end": 15184,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15144,
											"end": 15184,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15144,
											"end": 15184,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15144,
											"end": 15184,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15144,
											"end": 15184,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15144,
											"end": 15184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15144,
											"end": 15184,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15144,
											"end": 15184,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15144,
											"end": 15184,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15144,
											"end": 15184,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 15055,
											"end": 15200,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 15055,
											"end": 15200,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15017,
											"end": 15200,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 15017,
											"end": 15200,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14808,
											"end": 15207,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14808,
											"end": 15207,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14808,
											"end": 15207,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14808,
											"end": 15207,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14808,
											"end": 15207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12032,
											"end": 12350,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 12032,
											"end": 12350,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12105,
											"end": 12118,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 12136,
											"end": 12152,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 12144,
											"end": 12151,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12136,
											"end": 12143,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 12136,
											"end": 12152,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12136,
											"end": 12152,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 12136,
											"end": 12152,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12131,
											"end": 12190,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 12131,
											"end": 12190,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12161,
											"end": 12190,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12161,
											"end": 12190,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12161,
											"end": 12190,
											"name": "PUSH",
											"source": 0,
											"value": "A14C4B5000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12161,
											"end": 12190,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12161,
											"end": 12190,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12161,
											"end": 12190,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12161,
											"end": 12190,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12161,
											"end": 12190,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12161,
											"end": 12190,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12161,
											"end": 12190,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12161,
											"end": 12190,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12161,
											"end": 12190,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12161,
											"end": 12190,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12161,
											"end": 12190,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12131,
											"end": 12190,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 12131,
											"end": 12190,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12203,
											"end": 12224,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12227,
											"end": 12237,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 12227,
											"end": 12235,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 12227,
											"end": 12237,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12227,
											"end": 12237,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 12227,
											"end": 12237,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12203,
											"end": 12237,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12203,
											"end": 12237,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12280,
											"end": 12281,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12261,
											"end": 12268,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12255,
											"end": 12276,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12255,
											"end": 12281,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12255,
											"end": 12342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 12255,
											"end": 12342,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12255,
											"end": 12342,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12255,
											"end": 12342,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12255,
											"end": 12342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12255,
											"end": 12342,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12255,
											"end": 12342,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12255,
											"end": 12342,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12255,
											"end": 12342,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12255,
											"end": 12342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12255,
											"end": 12342,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12255,
											"end": 12342,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12255,
											"end": 12342,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12255,
											"end": 12342,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12255,
											"end": 12342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 12255,
											"end": 12342,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12255,
											"end": 12342,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 12255,
											"end": 12342,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12308,
											"end": 12315,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12317,
											"end": 12335,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 12327,
											"end": 12334,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12317,
											"end": 12326,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 12317,
											"end": 12335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12317,
											"end": 12335,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 12317,
											"end": 12335,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12291,
											"end": 12336,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12291,
											"end": 12336,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12291,
											"end": 12336,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12291,
											"end": 12336,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12291,
											"end": 12336,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 12291,
											"end": 12336,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12291,
											"end": 12336,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12291,
											"end": 12336,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12291,
											"end": 12336,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 12291,
											"end": 12336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12291,
											"end": 12336,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 12291,
											"end": 12336,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12291,
											"end": 12336,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12291,
											"end": 12336,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12291,
											"end": 12336,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12291,
											"end": 12336,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12291,
											"end": 12336,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12291,
											"end": 12336,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12291,
											"end": 12336,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12291,
											"end": 12336,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12291,
											"end": 12336,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12291,
											"end": 12336,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12291,
											"end": 12336,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12291,
											"end": 12336,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12255,
											"end": 12342,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 12255,
											"end": 12342,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12248,
											"end": 12342,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12248,
											"end": 12342,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12248,
											"end": 12342,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12032,
											"end": 12350,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12032,
											"end": 12350,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12032,
											"end": 12350,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12032,
											"end": 12350,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14317,
											"end": 14481,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 14317,
											"end": 14481,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14414,
											"end": 14418,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14438,
											"end": 14456,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 14438,
											"end": 14463,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14457,
											"end": 14462,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14438,
											"end": 14463,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14438,
											"end": 14463,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14438,
											"end": 14463,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14438,
											"end": 14463,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14438,
											"end": 14463,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14438,
											"end": 14463,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14438,
											"end": 14463,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14438,
											"end": 14463,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14438,
											"end": 14463,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14438,
											"end": 14463,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14438,
											"end": 14463,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14438,
											"end": 14463,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14438,
											"end": 14463,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14438,
											"end": 14463,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14438,
											"end": 14463,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14438,
											"end": 14473,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14464,
											"end": 14472,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14438,
											"end": 14473,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14438,
											"end": 14473,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14438,
											"end": 14473,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14438,
											"end": 14473,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14438,
											"end": 14473,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14438,
											"end": 14473,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14438,
											"end": 14473,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14438,
											"end": 14473,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14438,
											"end": 14473,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14438,
											"end": 14473,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14438,
											"end": 14473,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14438,
											"end": 14473,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14438,
											"end": 14473,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14438,
											"end": 14473,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14438,
											"end": 14473,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14438,
											"end": 14473,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14438,
											"end": 14473,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14438,
											"end": 14473,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14438,
											"end": 14473,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14438,
											"end": 14473,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 14438,
											"end": 14473,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 14438,
											"end": 14473,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14438,
											"end": 14473,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 14438,
											"end": 14473,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 14438,
											"end": 14473,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14431,
											"end": 14473,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14431,
											"end": 14473,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14317,
											"end": 14481,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14317,
											"end": 14481,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14317,
											"end": 14481,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14317,
											"end": 14481,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14317,
											"end": 14481,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15462,
											"end": 15743,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 15462,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15527,
											"end": 15531,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15583,
											"end": 15590,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15564,
											"end": 15579,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 15564,
											"end": 15577,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 15564,
											"end": 15579,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15564,
											"end": 15579,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 15564,
											"end": 15579,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15564,
											"end": 15590,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 15564,
											"end": 15590,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15564,
											"end": 15630,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15564,
											"end": 15630,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15564,
											"end": 15630,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 15564,
											"end": 15630,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15564,
											"end": 15630,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15617,
											"end": 15630,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15617,
											"end": 15630,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15607,
											"end": 15614,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15607,
											"end": 15630,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 15564,
											"end": 15630,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 15564,
											"end": 15630,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15564,
											"end": 15716,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15564,
											"end": 15716,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15564,
											"end": 15716,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 15564,
											"end": 15716,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15564,
											"end": 15716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15715,
											"end": 15716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1932,
											"end": 1940,
											"name": "PUSH",
											"source": 0,
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15668,
											"end": 15685,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15668,
											"end": 15694,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15686,
											"end": 15693,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15668,
											"end": 15694,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15668,
											"end": 15694,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15668,
											"end": 15694,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15668,
											"end": 15694,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15668,
											"end": 15694,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15668,
											"end": 15694,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15668,
											"end": 15694,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15668,
											"end": 15694,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15668,
											"end": 15694,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15668,
											"end": 15694,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15668,
											"end": 15694,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 15668,
											"end": 15694,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15668,
											"end": 15711,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15668,
											"end": 15716,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15564,
											"end": 15716,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 15564,
											"end": 15716,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15544,
											"end": 15716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15544,
											"end": 15716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15462,
											"end": 15743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15462,
											"end": 15743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15462,
											"end": 15743,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15462,
											"end": 15743,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33891,
											"end": 33996,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 33891,
											"end": 33996,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33951,
											"end": 33958,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33978,
											"end": 33988,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 33971,
											"end": 33988,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33971,
											"end": 33988,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33891,
											"end": 33996,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33891,
											"end": 33996,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4515,
											"end": 4607,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 4515,
											"end": 4607,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4571,
											"end": 4578,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4515,
											"end": 4607,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4515,
											"end": 4607,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8362,
											"end": 9491,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 8362,
											"end": 9491,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8429,
											"end": 8436,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8449,
											"end": 8461,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8464,
											"end": 8471,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8449,
											"end": 8471,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8449,
											"end": 8471,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8532,
											"end": 8536,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8513,
											"end": 8528,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 8513,
											"end": 8526,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 8513,
											"end": 8528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8513,
											"end": 8528,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 8513,
											"end": 8528,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8513,
											"end": 8536,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 8509,
											"end": 9424,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 8509,
											"end": 9424,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8566,
											"end": 8579,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8566,
											"end": 8579,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8559,
											"end": 8563,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8559,
											"end": 8579,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 8555,
											"end": 9424,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8555,
											"end": 9424,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 8555,
											"end": 9424,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8604,
											"end": 8618,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8621,
											"end": 8638,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8621,
											"end": 8644,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8639,
											"end": 8643,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8621,
											"end": 8644,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8621,
											"end": 8644,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8621,
											"end": 8644,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8621,
											"end": 8644,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8621,
											"end": 8644,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8621,
											"end": 8644,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8621,
											"end": 8644,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8621,
											"end": 8644,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8621,
											"end": 8644,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8621,
											"end": 8644,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8621,
											"end": 8644,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8621,
											"end": 8644,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8604,
											"end": 8644,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8604,
											"end": 8644,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8737,
											"end": 8738,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1932,
											"end": 1940,
											"name": "PUSH",
											"source": 0,
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8710,
											"end": 8716,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8710,
											"end": 8733,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8710,
											"end": 8738,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8706,
											"end": 9405,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 8706,
											"end": 9405,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9229,
											"end": 9342,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 9229,
											"end": 9342,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9246,
											"end": 9247,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9236,
											"end": 9242,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9236,
											"end": 9247,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9229,
											"end": 9342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 9229,
											"end": 9342,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9289,
											"end": 9306,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9289,
											"end": 9314,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9307,
											"end": 9313,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9307,
											"end": 9313,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9307,
											"end": 9313,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9307,
											"end": 9313,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9307,
											"end": 9313,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 9307,
											"end": 9313,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9307,
											"end": 9313,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9289,
											"end": 9314,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9289,
											"end": 9314,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9289,
											"end": 9314,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9289,
											"end": 9314,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9289,
											"end": 9314,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9289,
											"end": 9314,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9289,
											"end": 9314,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9289,
											"end": 9314,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9289,
											"end": 9314,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9289,
											"end": 9314,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9289,
											"end": 9314,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9289,
											"end": 9314,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9280,
											"end": 9314,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9280,
											"end": 9314,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9229,
											"end": 9342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 9229,
											"end": 9342,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9229,
											"end": 9342,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 9229,
											"end": 9342,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9375,
											"end": 9381,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9368,
											"end": 9381,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9368,
											"end": 9381,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9368,
											"end": 9381,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9368,
											"end": 9381,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9368,
											"end": 9381,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 9368,
											"end": 9381,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8706,
											"end": 9405,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 8706,
											"end": 9405,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8581,
											"end": 9424,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8555,
											"end": 9424,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 8555,
											"end": 9424,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8509,
											"end": 9424,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 8509,
											"end": 9424,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9452,
											"end": 9483,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9452,
											"end": 9483,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9452,
											"end": 9483,
											"name": "PUSH",
											"source": 0,
											"value": "DF2D9B4200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9452,
											"end": 9483,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9452,
											"end": 9483,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9452,
											"end": 9483,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9452,
											"end": 9483,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9452,
											"end": 9483,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9452,
											"end": 9483,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9452,
											"end": 9483,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9452,
											"end": 9483,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9452,
											"end": 9483,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9452,
											"end": 9483,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9452,
											"end": 9483,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8362,
											"end": 9491,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 8362,
											"end": 9491,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8362,
											"end": 9491,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8362,
											"end": 9491,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8362,
											"end": 9491,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8362,
											"end": 9491,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21303,
											"end": 21775,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 21303,
											"end": 21775,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21398,
											"end": 21425,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21427,
											"end": 21450,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21468,
											"end": 21506,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21509,
											"end": 21524,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 21509,
											"end": 21533,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21525,
											"end": 21532,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 21509,
											"end": 21533,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21509,
											"end": 21533,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21509,
											"end": 21533,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21509,
											"end": 21533,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21509,
											"end": 21533,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21509,
											"end": 21533,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21509,
											"end": 21533,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21509,
											"end": 21533,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21509,
											"end": 21533,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21509,
											"end": 21533,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21509,
											"end": 21533,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 21468,
											"end": 21533,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21468,
											"end": 21533,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21680,
											"end": 21698,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21657,
											"end": 21698,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 21657,
											"end": 21698,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21737,
											"end": 21756,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21731,
											"end": 21757,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 21712,
											"end": 21757,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21712,
											"end": 21757,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21642,
											"end": 21768,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21303,
											"end": 21775,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21303,
											"end": 21775,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21303,
											"end": 21775,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21303,
											"end": 21775,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21888,
											"end": 22533,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 21888,
											"end": 22533,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22030,
											"end": 22041,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22192,
											"end": 22207,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22186,
											"end": 22190,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 22182,
											"end": 22208,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22174,
											"end": 22208,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 22174,
											"end": 22208,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22351,
											"end": 22366,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22340,
											"end": 22349,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22336,
											"end": 22367,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22323,
											"end": 22367,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22323,
											"end": 22367,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22498,
											"end": 22513,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 22487,
											"end": 22496,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22484,
											"end": 22514,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22477,
											"end": 22481,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 22466,
											"end": 22475,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 22463,
											"end": 22482,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22460,
											"end": 22515,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 22450,
											"end": 22515,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22450,
											"end": 22515,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21888,
											"end": 22533,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 21888,
											"end": 22533,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 21888,
											"end": 22533,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21888,
											"end": 22533,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21888,
											"end": 22533,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21888,
											"end": 22533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32724,
											"end": 32883,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 32724,
											"end": 32883,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32724,
											"end": 32883,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32724,
											"end": 32883,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32724,
											"end": 32883,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32724,
											"end": 32883,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32724,
											"end": 32883,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31036,
											"end": 31345,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 31036,
											"end": 31345,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31171,
											"end": 31178,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31191,
											"end": 31207,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2333,
											"end": 2336,
											"name": "PUSH",
											"source": 0,
											"value": "E8"
										},
										{
											"begin": 31217,
											"end": 31236,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31217,
											"end": 31257,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31217,
											"end": 31257,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 31191,
											"end": 31258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31191,
											"end": 31258,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2333,
											"end": 2336,
											"name": "PUSH",
											"source": 0,
											"value": "E8"
										},
										{
											"begin": 31284,
											"end": 31315,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 31295,
											"end": 31299,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 31301,
											"end": 31303,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 31305,
											"end": 31314,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 31284,
											"end": 31294,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 31284,
											"end": 31315,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31284,
											"end": 31315,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 31284,
											"end": 31315,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31276,
											"end": 31316,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFF"
										},
										{
											"begin": 31276,
											"end": 31316,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31276,
											"end": 31337,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31276,
											"end": 31337,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 31269,
											"end": 31337,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31269,
											"end": 31337,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31269,
											"end": 31337,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31036,
											"end": 31345,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 31036,
											"end": 31345,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 31036,
											"end": 31345,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31036,
											"end": 31345,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31036,
											"end": 31345,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31036,
											"end": 31345,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10960,
											"end": 11407,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 10960,
											"end": 11407,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11040,
											"end": 11054,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11208,
											"end": 11223,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11201,
											"end": 11206,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11197,
											"end": 11224,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11188,
											"end": 11224,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 11188,
											"end": 11224,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11382,
											"end": 11387,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11368,
											"end": 11379,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 11344,
											"end": 11366,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 11340,
											"end": 11380,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 11337,
											"end": 11388,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 11330,
											"end": 11335,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11327,
											"end": 11389,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 11317,
											"end": 11389,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11317,
											"end": 11389,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10960,
											"end": 11407,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10960,
											"end": 11407,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10960,
											"end": 11407,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10960,
											"end": 11407,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10960,
											"end": 11407,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33542,
											"end": 33700,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 33542,
											"end": 33700,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33542,
											"end": 33700,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33542,
											"end": 33700,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33542,
											"end": 33700,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33542,
											"end": 33700,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33542,
											"end": 33700,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29538,
											"end": 30254,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 29538,
											"end": 30254,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29701,
											"end": 29705,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29747,
											"end": 29749,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29722,
											"end": 29767,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29722,
											"end": 29767,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29722,
											"end": 29767,
											"name": "PUSH",
											"source": 0,
											"value": "150B7A02"
										},
										{
											"begin": 29768,
											"end": 29787,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 29768,
											"end": 29785,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 29768,
											"end": 29787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29768,
											"end": 29787,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 29768,
											"end": 29787,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29789,
											"end": 29793,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 29795,
											"end": 29802,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 29804,
											"end": 29809,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 29722,
											"end": 29810,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29722,
											"end": 29810,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29722,
											"end": 29810,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 29722,
											"end": 29810,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 29722,
											"end": 29810,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29722,
											"end": 29810,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 29722,
											"end": 29810,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 29722,
											"end": 29810,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29722,
											"end": 29810,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29722,
											"end": 29810,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29722,
											"end": 29810,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29722,
											"end": 29810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 29722,
											"end": 29810,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 29722,
											"end": 29810,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 29722,
											"end": 29810,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 29722,
											"end": 29810,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29722,
											"end": 29810,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29722,
											"end": 29810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 29722,
											"end": 29810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29722,
											"end": 29810,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 29722,
											"end": 29810,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29722,
											"end": 29810,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29722,
											"end": 29810,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29722,
											"end": 29810,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29722,
											"end": 29810,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29722,
											"end": 29810,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29722,
											"end": 29810,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29722,
											"end": 29810,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29722,
											"end": 29810,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29722,
											"end": 29810,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 29722,
											"end": 29810,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 29722,
											"end": 29810,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 29722,
											"end": 29810,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 29722,
											"end": 29810,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29722,
											"end": 29810,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29722,
											"end": 29810,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29722,
											"end": 29810,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29722,
											"end": 29810,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29722,
											"end": 29810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 29722,
											"end": 29810,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29722,
											"end": 29810,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29722,
											"end": 29810,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29722,
											"end": 29810,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29722,
											"end": 29810,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 29722,
											"end": 29810,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 29722,
											"end": 29810,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 29722,
											"end": 29810,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 29722,
											"end": 29810,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29722,
											"end": 29810,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29722,
											"end": 29810,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29722,
											"end": 29810,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29722,
											"end": 29810,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29722,
											"end": 29810,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29722,
											"end": 29810,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29722,
											"end": 29810,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29722,
											"end": 29810,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29722,
											"end": 29810,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29722,
											"end": 29810,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29722,
											"end": 29810,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29722,
											"end": 29810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 29722,
											"end": 29810,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29722,
											"end": 29810,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29722,
											"end": 29810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 29722,
											"end": 29810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29722,
											"end": 29810,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 29722,
											"end": 29810,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29722,
											"end": 29810,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 29722,
											"end": 29810,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 29722,
											"end": 29810,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29718,
											"end": 30247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 29718,
											"end": 30247,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29718,
											"end": 30247,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 29718,
											"end": 30247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29718,
											"end": 30247,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29718,
											"end": 30247,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29718,
											"end": 30247,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 29718,
											"end": 30247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 29718,
											"end": 30247,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29718,
											"end": 30247,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29718,
											"end": 30247,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29718,
											"end": 30247,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29718,
											"end": 30247,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29718,
											"end": 30247,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 29718,
											"end": 30247,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 29718,
											"end": 30247,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 29718,
											"end": 30247,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 29718,
											"end": 30247,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29718,
											"end": 30247,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29718,
											"end": 30247,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29718,
											"end": 30247,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29718,
											"end": 30247,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29718,
											"end": 30247,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29718,
											"end": 30247,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 29718,
											"end": 30247,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29718,
											"end": 30247,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29718,
											"end": 30247,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 29718,
											"end": 30247,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29718,
											"end": 30247,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29718,
											"end": 30247,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 29718,
											"end": 30247,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29718,
											"end": 30247,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 29718,
											"end": 30247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 29718,
											"end": 30247,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29718,
											"end": 30247,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 29718,
											"end": 30247,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29718,
											"end": 30247,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 29718,
											"end": 30247,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29718,
											"end": 30247,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29718,
											"end": 30247,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 29718,
											"end": 30247,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29718,
											"end": 30247,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30022,
											"end": 30023,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30005,
											"end": 30011,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30005,
											"end": 30018,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30005,
											"end": 30023,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30001,
											"end": 30236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 30001,
											"end": 30236,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30051,
											"end": 30091,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30051,
											"end": 30091,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30051,
											"end": 30091,
											"name": "PUSH",
											"source": 0,
											"value": "D1A57ED600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 30051,
											"end": 30091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30051,
											"end": 30091,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30051,
											"end": 30091,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30051,
											"end": 30091,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30051,
											"end": 30091,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30051,
											"end": 30091,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30051,
											"end": 30091,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30051,
											"end": 30091,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30051,
											"end": 30091,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30051,
											"end": 30091,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30051,
											"end": 30091,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 30001,
											"end": 30236,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 30001,
											"end": 30236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30194,
											"end": 30200,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30188,
											"end": 30201,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30179,
											"end": 30185,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30175,
											"end": 30177,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30171,
											"end": 30186,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30164,
											"end": 30202,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 29718,
											"end": 30247,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 29718,
											"end": 30247,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29891,
											"end": 29945,
											"name": "PUSH",
											"source": 0,
											"value": "150B7A02"
										},
										{
											"begin": 29891,
											"end": 29945,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 29891,
											"end": 29945,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 29881,
											"end": 29945,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29881,
											"end": 29945,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 29881,
											"end": 29945,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29881,
											"end": 29887,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29881,
											"end": 29945,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29881,
											"end": 29945,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 29881,
											"end": 29945,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29881,
											"end": 29945,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 29874,
											"end": 29945,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29874,
											"end": 29945,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29874,
											"end": 29945,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29538,
											"end": 30254,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 29538,
											"end": 30254,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 29538,
											"end": 30254,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29538,
											"end": 30254,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29538,
											"end": 30254,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29538,
											"end": 30254,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29538,
											"end": 30254,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12602,
											"end": 12696,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 12602,
											"end": 12696,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12653,
											"end": 12666,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 12679,
											"end": 12688,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12679,
											"end": 12688,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12679,
											"end": 12688,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12679,
											"end": 12688,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12679,
											"end": 12688,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12679,
											"end": 12688,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12679,
											"end": 12688,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12679,
											"end": 12688,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12679,
											"end": 12688,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12679,
											"end": 12688,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12679,
											"end": 12688,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12679,
											"end": 12688,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12679,
											"end": 12688,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12679,
											"end": 12688,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12602,
											"end": 12696,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12602,
											"end": 12696,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34102,
											"end": 36070,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 34102,
											"end": 36070,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34167,
											"end": 34184,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 34586,
											"end": 34589,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 34579,
											"end": 34583,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34573,
											"end": 34584,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34569,
											"end": 34590,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34562,
											"end": 34590,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34562,
											"end": 34590,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34677,
											"end": 34680,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34671,
											"end": 34675,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34664,
											"end": 34681,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34783,
											"end": 34786,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35239,
											"end": 35244,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35369,
											"end": 35370,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 35364,
											"end": 35367,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 35360,
											"end": 35371,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 35353,
											"end": 35371,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 35353,
											"end": 35371,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35506,
											"end": 35508,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 35500,
											"end": 35504,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35496,
											"end": 35509,
											"name": "MOD",
											"source": 0
										},
										{
											"begin": 35492,
											"end": 35494,
											"name": "PUSH",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 35488,
											"end": 35510,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35483,
											"end": 35486,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 35475,
											"end": 35511,
											"name": "MSTORE8",
											"source": 0
										},
										{
											"begin": 35547,
											"end": 35549,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 35541,
											"end": 35545,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35537,
											"end": 35550,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 35529,
											"end": 35550,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35529,
											"end": 35550,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35131,
											"end": 35828,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 35131,
											"end": 35828,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35566,
											"end": 35570,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35131,
											"end": 35828,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 35131,
											"end": 35828,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 35131,
											"end": 35828,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35757,
											"end": 35758,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 35752,
											"end": 35755,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 35748,
											"end": 35759,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 35741,
											"end": 35759,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 35741,
											"end": 35759,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35808,
											"end": 35810,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 35802,
											"end": 35806,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35798,
											"end": 35811,
											"name": "MOD",
											"source": 0
										},
										{
											"begin": 35794,
											"end": 35796,
											"name": "PUSH",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 35790,
											"end": 35812,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35785,
											"end": 35788,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 35777,
											"end": 35813,
											"name": "MSTORE8",
											"source": 0
										},
										{
											"begin": 35661,
											"end": 35663,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 35655,
											"end": 35659,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35651,
											"end": 35664,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 35643,
											"end": 35664,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35643,
											"end": 35664,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35131,
											"end": 35828,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 35131,
											"end": 35828,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35131,
											"end": 35828,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 35131,
											"end": 35828,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35135,
											"end": 35565,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35867,
											"end": 35870,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35862,
											"end": 35865,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35858,
											"end": 35871,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 35982,
											"end": 35984,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35977,
											"end": 35980,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 35973,
											"end": 35985,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 35966,
											"end": 35985,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 35966,
											"end": 35985,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36045,
											"end": 36051,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36040,
											"end": 36043,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 36033,
											"end": 36052,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34206,
											"end": 36063,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34206,
											"end": 36063,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34102,
											"end": 36070,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34102,
											"end": 36070,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34102,
											"end": 36070,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34102,
											"end": 36070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31921,
											"end": 32068,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 31921,
											"end": 32068,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32058,
											"end": 32064,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31921,
											"end": 32068,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 31921,
											"end": 32068,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 31921,
											"end": 32068,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31921,
											"end": 32068,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31921,
											"end": 32068,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31921,
											"end": 32068,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 2,
											"value": "210"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 2,
											"value": "211"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 2,
											"value": "212"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 2,
											"value": "213"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 2,
											"value": "214"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "256"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "213"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 2,
											"value": "256"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "257"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 2,
											"value": "257"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 2,
											"value": "215"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "259"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "214"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 2,
											"value": "259"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "261"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "262"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "211"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 2,
											"value": "262"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 2,
											"value": "261"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "263"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "215"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 2,
											"value": "263"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 2,
											"value": "216"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 2,
											"value": "217"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "266"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "216"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 2,
											"value": "266"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "268"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "217"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 2,
											"value": "268"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "tag",
											"source": 2,
											"value": "218"
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1570,
											"end": 1576,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1604,
											"end": 1609,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1598,
											"end": 1610,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1518,
											"end": 1617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "tag",
											"source": 2,
											"value": "219"
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1707,
											"end": 1718,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1736,
											"end": 1739,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1729,
											"end": 1748,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1776,
											"end": 1779,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1772,
											"end": 1786,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1623,
											"end": 1792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1798,
											"end": 2105,
											"name": "tag",
											"source": 2,
											"value": "220"
										},
										{
											"begin": 1798,
											"end": 2105,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1866,
											"end": 1867,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1876,
											"end": 1989,
											"name": "tag",
											"source": 2,
											"value": "272"
										},
										{
											"begin": 1876,
											"end": 1989,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1890,
											"end": 1896,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1887,
											"end": 1888,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1884,
											"end": 1897,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1876,
											"end": 1989,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1876,
											"end": 1989,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "274"
										},
										{
											"begin": 1876,
											"end": 1989,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1975,
											"end": 1976,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1970,
											"end": 1973,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1966,
											"end": 1977,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1960,
											"end": 1978,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1956,
											"end": 1957,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1951,
											"end": 1954,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1947,
											"end": 1958,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1940,
											"end": 1979,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1912,
											"end": 1914,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1909,
											"end": 1910,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1905,
											"end": 1915,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1876,
											"end": 1989,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "272"
										},
										{
											"begin": 1876,
											"end": 1989,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1876,
											"end": 1989,
											"name": "tag",
											"source": 2,
											"value": "274"
										},
										{
											"begin": 1876,
											"end": 1989,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2007,
											"end": 2013,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2004,
											"end": 2005,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2001,
											"end": 2014,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1998,
											"end": 2099,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1998,
											"end": 2099,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "275"
										},
										{
											"begin": 1998,
											"end": 2099,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2087,
											"end": 2088,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2078,
											"end": 2084,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2073,
											"end": 2076,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2085,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2062,
											"end": 2089,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1998,
											"end": 2099,
											"name": "tag",
											"source": 2,
											"value": "275"
										},
										{
											"begin": 1998,
											"end": 2099,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 2105,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1798,
											"end": 2105,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1798,
											"end": 2105,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1798,
											"end": 2105,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1798,
											"end": 2105,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2111,
											"end": 2213,
											"name": "tag",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 2111,
											"end": 2213,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2152,
											"end": 2158,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2203,
											"end": 2205,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2199,
											"end": 2206,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2194,
											"end": 2196,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2187,
											"end": 2192,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2183,
											"end": 2197,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2179,
											"end": 2207,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2207,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2207,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2111,
											"end": 2213,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2111,
											"end": 2213,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2111,
											"end": 2213,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2111,
											"end": 2213,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2219,
											"end": 2583,
											"name": "tag",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 2219,
											"end": 2583,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2307,
											"end": 2310,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2335,
											"end": 2374,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "278"
										},
										{
											"begin": 2368,
											"end": 2373,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2335,
											"end": 2374,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "218"
										},
										{
											"begin": 2335,
											"end": 2374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2335,
											"end": 2374,
											"name": "tag",
											"source": 2,
											"value": "278"
										},
										{
											"begin": 2335,
											"end": 2374,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2390,
											"end": 2461,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "279"
										},
										{
											"begin": 2454,
											"end": 2460,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2449,
											"end": 2452,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2390,
											"end": 2461,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "219"
										},
										{
											"begin": 2390,
											"end": 2461,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2390,
											"end": 2461,
											"name": "tag",
											"source": 2,
											"value": "279"
										},
										{
											"begin": 2390,
											"end": 2461,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2383,
											"end": 2461,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2383,
											"end": 2461,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2470,
											"end": 2522,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "280"
										},
										{
											"begin": 2515,
											"end": 2521,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2510,
											"end": 2513,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2503,
											"end": 2507,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2496,
											"end": 2501,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 2492,
											"end": 2508,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2470,
											"end": 2522,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "220"
										},
										{
											"begin": 2470,
											"end": 2522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2470,
											"end": 2522,
											"name": "tag",
											"source": 2,
											"value": "280"
										},
										{
											"begin": 2470,
											"end": 2522,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2547,
											"end": 2576,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "281"
										},
										{
											"begin": 2569,
											"end": 2575,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2547,
											"end": 2576,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 2547,
											"end": 2576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2547,
											"end": 2576,
											"name": "tag",
											"source": 2,
											"value": "281"
										},
										{
											"begin": 2547,
											"end": 2576,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2542,
											"end": 2545,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2538,
											"end": 2577,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2531,
											"end": 2577,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2531,
											"end": 2577,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2311,
											"end": 2583,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2219,
											"end": 2583,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2219,
											"end": 2583,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2219,
											"end": 2583,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2219,
											"end": 2583,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2219,
											"end": 2583,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2589,
											"end": 2902,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 2589,
											"end": 2902,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2702,
											"end": 2706,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2740,
											"end": 2742,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2729,
											"end": 2738,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2725,
											"end": 2743,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2717,
											"end": 2743,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2717,
											"end": 2743,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2789,
											"end": 2798,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2783,
											"end": 2787,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2779,
											"end": 2799,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2775,
											"end": 2776,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2764,
											"end": 2773,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2777,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2753,
											"end": 2800,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2817,
											"end": 2895,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "283"
										},
										{
											"begin": 2890,
											"end": 2894,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2881,
											"end": 2887,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2817,
											"end": 2895,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 2817,
											"end": 2895,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2817,
											"end": 2895,
											"name": "tag",
											"source": 2,
											"value": "283"
										},
										{
											"begin": 2817,
											"end": 2895,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2809,
											"end": 2895,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2809,
											"end": 2895,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2589,
											"end": 2902,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2589,
											"end": 2902,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2589,
											"end": 2902,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2589,
											"end": 2902,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2589,
											"end": 2902,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2908,
											"end": 2985,
											"name": "tag",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 2908,
											"end": 2985,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2945,
											"end": 2952,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2974,
											"end": 2979,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2963,
											"end": 2979,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2963,
											"end": 2979,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2908,
											"end": 2985,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2908,
											"end": 2985,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2908,
											"end": 2985,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2908,
											"end": 2985,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2991,
											"end": 3113,
											"name": "tag",
											"source": 2,
											"value": "224"
										},
										{
											"begin": 2991,
											"end": 3113,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3064,
											"end": 3088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "286"
										},
										{
											"begin": 3082,
											"end": 3087,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3064,
											"end": 3088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 3064,
											"end": 3088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3064,
											"end": 3088,
											"name": "tag",
											"source": 2,
											"value": "286"
										},
										{
											"begin": 3064,
											"end": 3088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3057,
											"end": 3062,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3054,
											"end": 3089,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 3044,
											"end": 3107,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "287"
										},
										{
											"begin": 3044,
											"end": 3107,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3103,
											"end": 3104,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3100,
											"end": 3101,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3093,
											"end": 3105,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3044,
											"end": 3107,
											"name": "tag",
											"source": 2,
											"value": "287"
										},
										{
											"begin": 3044,
											"end": 3107,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2991,
											"end": 3113,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2991,
											"end": 3113,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3119,
											"end": 3258,
											"name": "tag",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 3119,
											"end": 3258,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3165,
											"end": 3170,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3203,
											"end": 3209,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3190,
											"end": 3210,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 3181,
											"end": 3210,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3181,
											"end": 3210,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3219,
											"end": 3252,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "289"
										},
										{
											"begin": 3246,
											"end": 3251,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3219,
											"end": 3252,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "224"
										},
										{
											"begin": 3219,
											"end": 3252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3219,
											"end": 3252,
											"name": "tag",
											"source": 2,
											"value": "289"
										},
										{
											"begin": 3219,
											"end": 3252,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3119,
											"end": 3258,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3119,
											"end": 3258,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3119,
											"end": 3258,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3119,
											"end": 3258,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3119,
											"end": 3258,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3264,
											"end": 3593,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 3264,
											"end": 3593,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3323,
											"end": 3329,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3372,
											"end": 3374,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3360,
											"end": 3369,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3351,
											"end": 3358,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3347,
											"end": 3370,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3343,
											"end": 3375,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 3340,
											"end": 3459,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3340,
											"end": 3459,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "291"
										},
										{
											"begin": 3340,
											"end": 3459,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3378,
											"end": 3457,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "292"
										},
										{
											"begin": 3378,
											"end": 3457,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "211"
										},
										{
											"begin": 3378,
											"end": 3457,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3378,
											"end": 3457,
											"name": "tag",
											"source": 2,
											"value": "292"
										},
										{
											"begin": 3378,
											"end": 3457,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3340,
											"end": 3459,
											"name": "tag",
											"source": 2,
											"value": "291"
										},
										{
											"begin": 3340,
											"end": 3459,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3498,
											"end": 3499,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3523,
											"end": 3576,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "293"
										},
										{
											"begin": 3568,
											"end": 3575,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3559,
											"end": 3565,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3548,
											"end": 3557,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3544,
											"end": 3566,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3523,
											"end": 3576,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 3523,
											"end": 3576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3523,
											"end": 3576,
											"name": "tag",
											"source": 2,
											"value": "293"
										},
										{
											"begin": 3523,
											"end": 3576,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3513,
											"end": 3576,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3513,
											"end": 3576,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3469,
											"end": 3586,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3264,
											"end": 3593,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3264,
											"end": 3593,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3264,
											"end": 3593,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3264,
											"end": 3593,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3264,
											"end": 3593,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3599,
											"end": 3725,
											"name": "tag",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 3599,
											"end": 3725,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3636,
											"end": 3643,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3676,
											"end": 3718,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3669,
											"end": 3674,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3665,
											"end": 3719,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3654,
											"end": 3719,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3654,
											"end": 3719,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3599,
											"end": 3725,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3599,
											"end": 3725,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3599,
											"end": 3725,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3599,
											"end": 3725,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3731,
											"end": 3827,
											"name": "tag",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 3731,
											"end": 3827,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3768,
											"end": 3775,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3797,
											"end": 3821,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "296"
										},
										{
											"begin": 3815,
											"end": 3820,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3797,
											"end": 3821,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 3797,
											"end": 3821,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3797,
											"end": 3821,
											"name": "tag",
											"source": 2,
											"value": "296"
										},
										{
											"begin": 3797,
											"end": 3821,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3786,
											"end": 3821,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3786,
											"end": 3821,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3731,
											"end": 3827,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3731,
											"end": 3827,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3731,
											"end": 3827,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3731,
											"end": 3827,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3833,
											"end": 3951,
											"name": "tag",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 3833,
											"end": 3951,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3920,
											"end": 3944,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "298"
										},
										{
											"begin": 3938,
											"end": 3943,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3920,
											"end": 3944,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 3920,
											"end": 3944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3920,
											"end": 3944,
											"name": "tag",
											"source": 2,
											"value": "298"
										},
										{
											"begin": 3920,
											"end": 3944,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3915,
											"end": 3918,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3908,
											"end": 3945,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3833,
											"end": 3951,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3833,
											"end": 3951,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3833,
											"end": 3951,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4179,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 3957,
											"end": 4179,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4050,
											"end": 4054,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4088,
											"end": 4090,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4077,
											"end": 4086,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4073,
											"end": 4091,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4065,
											"end": 4091,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4065,
											"end": 4091,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4101,
											"end": 4172,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "300"
										},
										{
											"begin": 4169,
											"end": 4170,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4158,
											"end": 4167,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4154,
											"end": 4171,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4145,
											"end": 4151,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4101,
											"end": 4172,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 4101,
											"end": 4172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4101,
											"end": 4172,
											"name": "tag",
											"source": 2,
											"value": "300"
										},
										{
											"begin": 4101,
											"end": 4172,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4179,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4179,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4179,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4179,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4179,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4307,
											"name": "tag",
											"source": 2,
											"value": "229"
										},
										{
											"begin": 4185,
											"end": 4307,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4258,
											"end": 4282,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "302"
										},
										{
											"begin": 4276,
											"end": 4281,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4258,
											"end": 4282,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 4258,
											"end": 4282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4258,
											"end": 4282,
											"name": "tag",
											"source": 2,
											"value": "302"
										},
										{
											"begin": 4258,
											"end": 4282,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4251,
											"end": 4256,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4248,
											"end": 4283,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4238,
											"end": 4301,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "303"
										},
										{
											"begin": 4238,
											"end": 4301,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4297,
											"end": 4298,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4294,
											"end": 4295,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4287,
											"end": 4299,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4238,
											"end": 4301,
											"name": "tag",
											"source": 2,
											"value": "303"
										},
										{
											"begin": 4238,
											"end": 4301,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4307,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4185,
											"end": 4307,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4313,
											"end": 4452,
											"name": "tag",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 4313,
											"end": 4452,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4359,
											"end": 4364,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4397,
											"end": 4403,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4384,
											"end": 4404,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 4375,
											"end": 4404,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4375,
											"end": 4404,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4413,
											"end": 4446,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "305"
										},
										{
											"begin": 4440,
											"end": 4445,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4413,
											"end": 4446,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "229"
										},
										{
											"begin": 4413,
											"end": 4446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4413,
											"end": 4446,
											"name": "tag",
											"source": 2,
											"value": "305"
										},
										{
											"begin": 4413,
											"end": 4446,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4313,
											"end": 4452,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4313,
											"end": 4452,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4313,
											"end": 4452,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4313,
											"end": 4452,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4313,
											"end": 4452,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4458,
											"end": 4932,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 4458,
											"end": 4932,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4526,
											"end": 4532,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4534,
											"end": 4540,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4583,
											"end": 4585,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4571,
											"end": 4580,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4562,
											"end": 4569,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4558,
											"end": 4581,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4554,
											"end": 4586,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 4551,
											"end": 4670,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4551,
											"end": 4670,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "307"
										},
										{
											"begin": 4551,
											"end": 4670,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4589,
											"end": 4668,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "308"
										},
										{
											"begin": 4589,
											"end": 4668,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "211"
										},
										{
											"begin": 4589,
											"end": 4668,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4589,
											"end": 4668,
											"name": "tag",
											"source": 2,
											"value": "308"
										},
										{
											"begin": 4589,
											"end": 4668,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4551,
											"end": 4670,
											"name": "tag",
											"source": 2,
											"value": "307"
										},
										{
											"begin": 4551,
											"end": 4670,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4709,
											"end": 4710,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4734,
											"end": 4787,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "309"
										},
										{
											"begin": 4779,
											"end": 4786,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4776,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4759,
											"end": 4768,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 4755,
											"end": 4777,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4734,
											"end": 4787,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 4734,
											"end": 4787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4734,
											"end": 4787,
											"name": "tag",
											"source": 2,
											"value": "309"
										},
										{
											"begin": 4734,
											"end": 4787,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4724,
											"end": 4787,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4724,
											"end": 4787,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4680,
											"end": 4797,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4836,
											"end": 4838,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4862,
											"end": 4915,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "310"
										},
										{
											"begin": 4907,
											"end": 4914,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4898,
											"end": 4904,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4887,
											"end": 4896,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 4883,
											"end": 4905,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4862,
											"end": 4915,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 4862,
											"end": 4915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4862,
											"end": 4915,
											"name": "tag",
											"source": 2,
											"value": "310"
										},
										{
											"begin": 4862,
											"end": 4915,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4852,
											"end": 4915,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4852,
											"end": 4915,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4807,
											"end": 4925,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4458,
											"end": 4932,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4458,
											"end": 4932,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4458,
											"end": 4932,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4458,
											"end": 4932,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4458,
											"end": 4932,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4458,
											"end": 4932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4938,
											"end": 5056,
											"name": "tag",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 4938,
											"end": 5056,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5025,
											"end": 5049,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "312"
										},
										{
											"begin": 5043,
											"end": 5048,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5025,
											"end": 5049,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 5025,
											"end": 5049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5025,
											"end": 5049,
											"name": "tag",
											"source": 2,
											"value": "312"
										},
										{
											"begin": 5025,
											"end": 5049,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5020,
											"end": 5023,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5013,
											"end": 5050,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4938,
											"end": 5056,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4938,
											"end": 5056,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4938,
											"end": 5056,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5062,
											"end": 5284,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 5062,
											"end": 5284,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5155,
											"end": 5159,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5193,
											"end": 5195,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5182,
											"end": 5191,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5178,
											"end": 5196,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5196,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5196,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5206,
											"end": 5277,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "314"
										},
										{
											"begin": 5274,
											"end": 5275,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5263,
											"end": 5272,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5259,
											"end": 5276,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5250,
											"end": 5256,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5206,
											"end": 5277,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 5206,
											"end": 5277,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5206,
											"end": 5277,
											"name": "tag",
											"source": 2,
											"value": "314"
										},
										{
											"begin": 5206,
											"end": 5277,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5062,
											"end": 5284,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5062,
											"end": 5284,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5062,
											"end": 5284,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5062,
											"end": 5284,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5062,
											"end": 5284,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5290,
											"end": 5909,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 5290,
											"end": 5909,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5367,
											"end": 5373,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5375,
											"end": 5381,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5383,
											"end": 5389,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5432,
											"end": 5434,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 5420,
											"end": 5429,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5411,
											"end": 5418,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 5407,
											"end": 5430,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5403,
											"end": 5435,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 5400,
											"end": 5519,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5400,
											"end": 5519,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "316"
										},
										{
											"begin": 5400,
											"end": 5519,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5438,
											"end": 5517,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "317"
										},
										{
											"begin": 5438,
											"end": 5517,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "211"
										},
										{
											"begin": 5438,
											"end": 5517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5438,
											"end": 5517,
											"name": "tag",
											"source": 2,
											"value": "317"
										},
										{
											"begin": 5438,
											"end": 5517,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5400,
											"end": 5519,
											"name": "tag",
											"source": 2,
											"value": "316"
										},
										{
											"begin": 5400,
											"end": 5519,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5558,
											"end": 5559,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5583,
											"end": 5636,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "318"
										},
										{
											"begin": 5628,
											"end": 5635,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 5619,
											"end": 5625,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5608,
											"end": 5617,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 5604,
											"end": 5626,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5583,
											"end": 5636,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 5583,
											"end": 5636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5583,
											"end": 5636,
											"name": "tag",
											"source": 2,
											"value": "318"
										},
										{
											"begin": 5583,
											"end": 5636,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5573,
											"end": 5636,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 5573,
											"end": 5636,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5529,
											"end": 5646,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5685,
											"end": 5687,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5711,
											"end": 5764,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "319"
										},
										{
											"begin": 5756,
											"end": 5763,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 5747,
											"end": 5753,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5736,
											"end": 5745,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 5732,
											"end": 5754,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5711,
											"end": 5764,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 5711,
											"end": 5764,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5711,
											"end": 5764,
											"name": "tag",
											"source": 2,
											"value": "319"
										},
										{
											"begin": 5711,
											"end": 5764,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5701,
											"end": 5764,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5701,
											"end": 5764,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5774,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5813,
											"end": 5815,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5839,
											"end": 5892,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "320"
										},
										{
											"begin": 5884,
											"end": 5891,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 5875,
											"end": 5881,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5864,
											"end": 5873,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 5860,
											"end": 5882,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5839,
											"end": 5892,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 5839,
											"end": 5892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5839,
											"end": 5892,
											"name": "tag",
											"source": 2,
											"value": "320"
										},
										{
											"begin": 5839,
											"end": 5892,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5829,
											"end": 5892,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5829,
											"end": 5892,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5784,
											"end": 5902,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5290,
											"end": 5909,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5290,
											"end": 5909,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5290,
											"end": 5909,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5290,
											"end": 5909,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5290,
											"end": 5909,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5290,
											"end": 5909,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5915,
											"end": 6244,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 5915,
											"end": 6244,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5974,
											"end": 5980,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6023,
											"end": 6025,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6011,
											"end": 6020,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6002,
											"end": 6009,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5998,
											"end": 6021,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5994,
											"end": 6026,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 5991,
											"end": 6110,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5991,
											"end": 6110,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "322"
										},
										{
											"begin": 5991,
											"end": 6110,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6029,
											"end": 6108,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "323"
										},
										{
											"begin": 6029,
											"end": 6108,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "211"
										},
										{
											"begin": 6029,
											"end": 6108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6029,
											"end": 6108,
											"name": "tag",
											"source": 2,
											"value": "323"
										},
										{
											"begin": 6029,
											"end": 6108,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5991,
											"end": 6110,
											"name": "tag",
											"source": 2,
											"value": "322"
										},
										{
											"begin": 5991,
											"end": 6110,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6149,
											"end": 6150,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6174,
											"end": 6227,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "324"
										},
										{
											"begin": 6219,
											"end": 6226,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6210,
											"end": 6216,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6199,
											"end": 6208,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6195,
											"end": 6217,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6174,
											"end": 6227,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 6174,
											"end": 6227,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6174,
											"end": 6227,
											"name": "tag",
											"source": 2,
											"value": "324"
										},
										{
											"begin": 6174,
											"end": 6227,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6164,
											"end": 6227,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6164,
											"end": 6227,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6120,
											"end": 6237,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5915,
											"end": 6244,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5915,
											"end": 6244,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5915,
											"end": 6244,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5915,
											"end": 6244,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5915,
											"end": 6244,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6250,
											"end": 6366,
											"name": "tag",
											"source": 2,
											"value": "232"
										},
										{
											"begin": 6250,
											"end": 6366,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6320,
											"end": 6341,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "326"
										},
										{
											"begin": 6335,
											"end": 6340,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6320,
											"end": 6341,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "216"
										},
										{
											"begin": 6320,
											"end": 6341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6320,
											"end": 6341,
											"name": "tag",
											"source": 2,
											"value": "326"
										},
										{
											"begin": 6320,
											"end": 6341,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6313,
											"end": 6318,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6310,
											"end": 6342,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 6300,
											"end": 6360,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "327"
										},
										{
											"begin": 6300,
											"end": 6360,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6357,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6353,
											"end": 6354,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6346,
											"end": 6358,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6300,
											"end": 6360,
											"name": "tag",
											"source": 2,
											"value": "327"
										},
										{
											"begin": 6300,
											"end": 6360,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6250,
											"end": 6366,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6250,
											"end": 6366,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6372,
											"end": 6505,
											"name": "tag",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 6372,
											"end": 6505,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6415,
											"end": 6420,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6453,
											"end": 6459,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6440,
											"end": 6460,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 6431,
											"end": 6460,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6431,
											"end": 6460,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6469,
											"end": 6499,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "329"
										},
										{
											"begin": 6493,
											"end": 6498,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6469,
											"end": 6499,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "232"
										},
										{
											"begin": 6469,
											"end": 6499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6469,
											"end": 6499,
											"name": "tag",
											"source": 2,
											"value": "329"
										},
										{
											"begin": 6469,
											"end": 6499,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6372,
											"end": 6505,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6372,
											"end": 6505,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6372,
											"end": 6505,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6372,
											"end": 6505,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6372,
											"end": 6505,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6511,
											"end": 6979,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 6511,
											"end": 6979,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6576,
											"end": 6582,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6584,
											"end": 6590,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6633,
											"end": 6635,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6621,
											"end": 6630,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6612,
											"end": 6619,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6608,
											"end": 6631,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6604,
											"end": 6636,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 6601,
											"end": 6720,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6601,
											"end": 6720,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "331"
										},
										{
											"begin": 6601,
											"end": 6720,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6639,
											"end": 6718,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "332"
										},
										{
											"begin": 6639,
											"end": 6718,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "211"
										},
										{
											"begin": 6639,
											"end": 6718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6639,
											"end": 6718,
											"name": "tag",
											"source": 2,
											"value": "332"
										},
										{
											"begin": 6639,
											"end": 6718,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6601,
											"end": 6720,
											"name": "tag",
											"source": 2,
											"value": "331"
										},
										{
											"begin": 6601,
											"end": 6720,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6759,
											"end": 6760,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6784,
											"end": 6837,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "333"
										},
										{
											"begin": 6829,
											"end": 6836,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6820,
											"end": 6826,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6809,
											"end": 6818,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6805,
											"end": 6827,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6784,
											"end": 6837,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 6784,
											"end": 6837,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6784,
											"end": 6837,
											"name": "tag",
											"source": 2,
											"value": "333"
										},
										{
											"begin": 6784,
											"end": 6837,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6774,
											"end": 6837,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6774,
											"end": 6837,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6730,
											"end": 6847,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6886,
											"end": 6888,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6912,
											"end": 6962,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "334"
										},
										{
											"begin": 6954,
											"end": 6961,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6945,
											"end": 6951,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6934,
											"end": 6943,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6930,
											"end": 6952,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6912,
											"end": 6962,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 6912,
											"end": 6962,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6912,
											"end": 6962,
											"name": "tag",
											"source": 2,
											"value": "334"
										},
										{
											"begin": 6912,
											"end": 6962,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6902,
											"end": 6962,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6902,
											"end": 6962,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6857,
											"end": 6972,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6511,
											"end": 6979,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6511,
											"end": 6979,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6511,
											"end": 6979,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6511,
											"end": 6979,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6511,
											"end": 6979,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6511,
											"end": 6979,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6985,
											"end": 7102,
											"name": "tag",
											"source": 2,
											"value": "234"
										},
										{
											"begin": 6985,
											"end": 7102,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7094,
											"end": 7095,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7091,
											"end": 7092,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7084,
											"end": 7096,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7108,
											"end": 7225,
											"name": "tag",
											"source": 2,
											"value": "235"
										},
										{
											"begin": 7108,
											"end": 7225,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7217,
											"end": 7218,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7214,
											"end": 7215,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7207,
											"end": 7219,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7231,
											"end": 7411,
											"name": "tag",
											"source": 2,
											"value": "236"
										},
										{
											"begin": 7231,
											"end": 7411,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7279,
											"end": 7356,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7276,
											"end": 7277,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7269,
											"end": 7357,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7376,
											"end": 7380,
											"name": "PUSH",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 7373,
											"end": 7374,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7366,
											"end": 7381,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7400,
											"end": 7404,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 7397,
											"end": 7398,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7390,
											"end": 7405,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7417,
											"end": 7698,
											"name": "tag",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 7417,
											"end": 7698,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7500,
											"end": 7527,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "339"
										},
										{
											"begin": 7522,
											"end": 7526,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7500,
											"end": 7527,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 7500,
											"end": 7527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7500,
											"end": 7527,
											"name": "tag",
											"source": 2,
											"value": "339"
										},
										{
											"begin": 7500,
											"end": 7527,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7492,
											"end": 7498,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7488,
											"end": 7528,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7630,
											"end": 7636,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7618,
											"end": 7628,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7615,
											"end": 7637,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 7594,
											"end": 7612,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7582,
											"end": 7592,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7579,
											"end": 7613,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 7576,
											"end": 7638,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 7573,
											"end": 7661,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7573,
											"end": 7661,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "340"
										},
										{
											"begin": 7573,
											"end": 7661,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7641,
											"end": 7659,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "341"
										},
										{
											"begin": 7641,
											"end": 7659,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "236"
										},
										{
											"begin": 7641,
											"end": 7659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7641,
											"end": 7659,
											"name": "tag",
											"source": 2,
											"value": "341"
										},
										{
											"begin": 7641,
											"end": 7659,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7573,
											"end": 7661,
											"name": "tag",
											"source": 2,
											"value": "340"
										},
										{
											"begin": 7573,
											"end": 7661,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7681,
											"end": 7691,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7677,
											"end": 7679,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7670,
											"end": 7692,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7460,
											"end": 7698,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7417,
											"end": 7698,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7417,
											"end": 7698,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7417,
											"end": 7698,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7704,
											"end": 7833,
											"name": "tag",
											"source": 2,
											"value": "238"
										},
										{
											"begin": 7704,
											"end": 7833,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7738,
											"end": 7744,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "343"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "210"
										},
										{
											"begin": 7765,
											"end": 7785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "tag",
											"source": 2,
											"value": "343"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7755,
											"end": 7785,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7755,
											"end": 7785,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7794,
											"end": 7827,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "344"
										},
										{
											"begin": 7822,
											"end": 7826,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7814,
											"end": 7820,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7794,
											"end": 7827,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 7794,
											"end": 7827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7794,
											"end": 7827,
											"name": "tag",
											"source": 2,
											"value": "344"
										},
										{
											"begin": 7794,
											"end": 7827,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7704,
											"end": 7833,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7704,
											"end": 7833,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7704,
											"end": 7833,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7704,
											"end": 7833,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7839,
											"end": 8146,
											"name": "tag",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 7839,
											"end": 8146,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7900,
											"end": 7904,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7990,
											"end": 8008,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7982,
											"end": 7988,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7979,
											"end": 8009,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 7976,
											"end": 8032,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7976,
											"end": 8032,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "346"
										},
										{
											"begin": 7976,
											"end": 8032,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8012,
											"end": 8030,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "347"
										},
										{
											"begin": 8012,
											"end": 8030,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "236"
										},
										{
											"begin": 8012,
											"end": 8030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8012,
											"end": 8030,
											"name": "tag",
											"source": 2,
											"value": "347"
										},
										{
											"begin": 8012,
											"end": 8030,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7976,
											"end": 8032,
											"name": "tag",
											"source": 2,
											"value": "346"
										},
										{
											"begin": 7976,
											"end": 8032,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8050,
											"end": 8079,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "348"
										},
										{
											"begin": 8072,
											"end": 8078,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8050,
											"end": 8079,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 8050,
											"end": 8079,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8050,
											"end": 8079,
											"name": "tag",
											"source": 2,
											"value": "348"
										},
										{
											"begin": 8050,
											"end": 8079,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8042,
											"end": 8079,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8042,
											"end": 8079,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8134,
											"end": 8138,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8128,
											"end": 8132,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8124,
											"end": 8139,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8116,
											"end": 8139,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8116,
											"end": 8139,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7839,
											"end": 8146,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7839,
											"end": 8146,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7839,
											"end": 8146,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7839,
											"end": 8146,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8152,
											"end": 8306,
											"name": "tag",
											"source": 2,
											"value": "240"
										},
										{
											"begin": 8152,
											"end": 8306,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8236,
											"end": 8242,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8231,
											"end": 8234,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8226,
											"end": 8229,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8213,
											"end": 8243,
											"name": "CALLDATACOPY",
											"source": 2
										},
										{
											"begin": 8298,
											"end": 8299,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8289,
											"end": 8295,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8284,
											"end": 8287,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8280,
											"end": 8296,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8273,
											"end": 8300,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8152,
											"end": 8306,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8152,
											"end": 8306,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8152,
											"end": 8306,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8152,
											"end": 8306,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8312,
											"end": 8722,
											"name": "tag",
											"source": 2,
											"value": "241"
										},
										{
											"begin": 8312,
											"end": 8722,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8389,
											"end": 8394,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8414,
											"end": 8479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "351"
										},
										{
											"begin": 8430,
											"end": 8478,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "352"
										},
										{
											"begin": 8471,
											"end": 8477,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8430,
											"end": 8478,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 8430,
											"end": 8478,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8430,
											"end": 8478,
											"name": "tag",
											"source": 2,
											"value": "352"
										},
										{
											"begin": 8430,
											"end": 8478,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8414,
											"end": 8479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "238"
										},
										{
											"begin": 8414,
											"end": 8479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8414,
											"end": 8479,
											"name": "tag",
											"source": 2,
											"value": "351"
										},
										{
											"begin": 8414,
											"end": 8479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8405,
											"end": 8479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8405,
											"end": 8479,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8502,
											"end": 8508,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8495,
											"end": 8500,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8488,
											"end": 8509,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8540,
											"end": 8544,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8533,
											"end": 8538,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8529,
											"end": 8545,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8578,
											"end": 8581,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8569,
											"end": 8575,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8564,
											"end": 8567,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8560,
											"end": 8576,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8557,
											"end": 8582,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 8554,
											"end": 8666,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 8554,
											"end": 8666,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "353"
										},
										{
											"begin": 8554,
											"end": 8666,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8585,
											"end": 8664,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "354"
										},
										{
											"begin": 8585,
											"end": 8664,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "235"
										},
										{
											"begin": 8585,
											"end": 8664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8585,
											"end": 8664,
											"name": "tag",
											"source": 2,
											"value": "354"
										},
										{
											"begin": 8585,
											"end": 8664,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8554,
											"end": 8666,
											"name": "tag",
											"source": 2,
											"value": "353"
										},
										{
											"begin": 8554,
											"end": 8666,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8675,
											"end": 8716,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "355"
										},
										{
											"begin": 8709,
											"end": 8715,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8704,
											"end": 8707,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8699,
											"end": 8702,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 8675,
											"end": 8716,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "240"
										},
										{
											"begin": 8675,
											"end": 8716,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8675,
											"end": 8716,
											"name": "tag",
											"source": 2,
											"value": "355"
										},
										{
											"begin": 8675,
											"end": 8716,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8395,
											"end": 8722,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8312,
											"end": 8722,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 8312,
											"end": 8722,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 8312,
											"end": 8722,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8312,
											"end": 8722,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8312,
											"end": 8722,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8312,
											"end": 8722,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8741,
											"end": 9079,
											"name": "tag",
											"source": 2,
											"value": "242"
										},
										{
											"begin": 8741,
											"end": 9079,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8796,
											"end": 8801,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8845,
											"end": 8848,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8838,
											"end": 8842,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 8830,
											"end": 8836,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8826,
											"end": 8843,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8822,
											"end": 8849,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 8812,
											"end": 8934,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "357"
										},
										{
											"begin": 8812,
											"end": 8934,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8853,
											"end": 8932,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "358"
										},
										{
											"begin": 8853,
											"end": 8932,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "234"
										},
										{
											"begin": 8853,
											"end": 8932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8853,
											"end": 8932,
											"name": "tag",
											"source": 2,
											"value": "358"
										},
										{
											"begin": 8853,
											"end": 8932,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8812,
											"end": 8934,
											"name": "tag",
											"source": 2,
											"value": "357"
										},
										{
											"begin": 8812,
											"end": 8934,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8970,
											"end": 8976,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8957,
											"end": 8977,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 8995,
											"end": 9073,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "359"
										},
										{
											"begin": 9069,
											"end": 9072,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9061,
											"end": 9067,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9054,
											"end": 9058,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9046,
											"end": 9052,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 9042,
											"end": 9059,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8995,
											"end": 9073,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "241"
										},
										{
											"begin": 8995,
											"end": 9073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8995,
											"end": 9073,
											"name": "tag",
											"source": 2,
											"value": "359"
										},
										{
											"begin": 8995,
											"end": 9073,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8986,
											"end": 9073,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8986,
											"end": 9073,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8802,
											"end": 9079,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8741,
											"end": 9079,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 8741,
											"end": 9079,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8741,
											"end": 9079,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8741,
											"end": 9079,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8741,
											"end": 9079,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9085,
											"end": 10028,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 9085,
											"end": 10028,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9180,
											"end": 9186,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9188,
											"end": 9194,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9196,
											"end": 9202,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9204,
											"end": 9210,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9253,
											"end": 9256,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 9241,
											"end": 9250,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9232,
											"end": 9239,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 9228,
											"end": 9251,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9224,
											"end": 9257,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 9221,
											"end": 9341,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 9221,
											"end": 9341,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "361"
										},
										{
											"begin": 9221,
											"end": 9341,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9260,
											"end": 9339,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "362"
										},
										{
											"begin": 9260,
											"end": 9339,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "211"
										},
										{
											"begin": 9260,
											"end": 9339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9260,
											"end": 9339,
											"name": "tag",
											"source": 2,
											"value": "362"
										},
										{
											"begin": 9260,
											"end": 9339,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9221,
											"end": 9341,
											"name": "tag",
											"source": 2,
											"value": "361"
										},
										{
											"begin": 9221,
											"end": 9341,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9380,
											"end": 9381,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9405,
											"end": 9458,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "363"
										},
										{
											"begin": 9450,
											"end": 9457,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 9441,
											"end": 9447,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9430,
											"end": 9439,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 9426,
											"end": 9448,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9405,
											"end": 9458,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 9405,
											"end": 9458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9405,
											"end": 9458,
											"name": "tag",
											"source": 2,
											"value": "363"
										},
										{
											"begin": 9405,
											"end": 9458,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9395,
											"end": 9458,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 9395,
											"end": 9458,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9351,
											"end": 9468,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9507,
											"end": 9509,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9533,
											"end": 9586,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "364"
										},
										{
											"begin": 9578,
											"end": 9585,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 9569,
											"end": 9575,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9558,
											"end": 9567,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 9554,
											"end": 9576,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9533,
											"end": 9586,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 9533,
											"end": 9586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9533,
											"end": 9586,
											"name": "tag",
											"source": 2,
											"value": "364"
										},
										{
											"begin": 9533,
											"end": 9586,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9523,
											"end": 9586,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 9523,
											"end": 9586,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9478,
											"end": 9596,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9635,
											"end": 9637,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9661,
											"end": 9714,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "365"
										},
										{
											"begin": 9706,
											"end": 9713,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 9697,
											"end": 9703,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9686,
											"end": 9695,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 9682,
											"end": 9704,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9661,
											"end": 9714,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 9661,
											"end": 9714,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9661,
											"end": 9714,
											"name": "tag",
											"source": 2,
											"value": "365"
										},
										{
											"begin": 9661,
											"end": 9714,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9651,
											"end": 9714,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 9651,
											"end": 9714,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9606,
											"end": 9724,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9791,
											"end": 9793,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 9780,
											"end": 9789,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9776,
											"end": 9794,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9763,
											"end": 9795,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 9822,
											"end": 9840,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9814,
											"end": 9820,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9811,
											"end": 9841,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 9808,
											"end": 9925,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 9808,
											"end": 9925,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "366"
										},
										{
											"begin": 9808,
											"end": 9925,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9844,
											"end": 9923,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "367"
										},
										{
											"begin": 9844,
											"end": 9923,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "212"
										},
										{
											"begin": 9844,
											"end": 9923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9844,
											"end": 9923,
											"name": "tag",
											"source": 2,
											"value": "367"
										},
										{
											"begin": 9844,
											"end": 9923,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9808,
											"end": 9925,
											"name": "tag",
											"source": 2,
											"value": "366"
										},
										{
											"begin": 9808,
											"end": 9925,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10011,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "368"
										},
										{
											"begin": 10003,
											"end": 10010,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 9994,
											"end": 10000,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9983,
											"end": 9992,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 9979,
											"end": 10001,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10011,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "242"
										},
										{
											"begin": 9949,
											"end": 10011,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10011,
											"name": "tag",
											"source": 2,
											"value": "368"
										},
										{
											"begin": 9949,
											"end": 10011,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9939,
											"end": 10011,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9939,
											"end": 10011,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9734,
											"end": 10021,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9085,
											"end": 10028,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 9085,
											"end": 10028,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 9085,
											"end": 10028,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9085,
											"end": 10028,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 9085,
											"end": 10028,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9085,
											"end": 10028,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 9085,
											"end": 10028,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9085,
											"end": 10028,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10034,
											"end": 10508,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 10034,
											"end": 10508,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10102,
											"end": 10108,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10110,
											"end": 10116,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10159,
											"end": 10161,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10147,
											"end": 10156,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10138,
											"end": 10145,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 10134,
											"end": 10157,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10130,
											"end": 10162,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 10127,
											"end": 10246,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10127,
											"end": 10246,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "370"
										},
										{
											"begin": 10127,
											"end": 10246,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10165,
											"end": 10244,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "371"
										},
										{
											"begin": 10165,
											"end": 10244,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "211"
										},
										{
											"begin": 10165,
											"end": 10244,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10165,
											"end": 10244,
											"name": "tag",
											"source": 2,
											"value": "371"
										},
										{
											"begin": 10165,
											"end": 10244,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10127,
											"end": 10246,
											"name": "tag",
											"source": 2,
											"value": "370"
										},
										{
											"begin": 10127,
											"end": 10246,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10285,
											"end": 10286,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10310,
											"end": 10363,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "372"
										},
										{
											"begin": 10355,
											"end": 10362,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 10346,
											"end": 10352,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10335,
											"end": 10344,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 10331,
											"end": 10353,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10310,
											"end": 10363,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 10310,
											"end": 10363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10310,
											"end": 10363,
											"name": "tag",
											"source": 2,
											"value": "372"
										},
										{
											"begin": 10310,
											"end": 10363,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10300,
											"end": 10363,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10300,
											"end": 10363,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10256,
											"end": 10373,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10412,
											"end": 10414,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10438,
											"end": 10491,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "373"
										},
										{
											"begin": 10483,
											"end": 10490,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 10474,
											"end": 10480,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10463,
											"end": 10472,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 10459,
											"end": 10481,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10438,
											"end": 10491,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 10438,
											"end": 10491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10438,
											"end": 10491,
											"name": "tag",
											"source": 2,
											"value": "373"
										},
										{
											"begin": 10438,
											"end": 10491,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10428,
											"end": 10491,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10428,
											"end": 10491,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10383,
											"end": 10501,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10034,
											"end": 10508,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10034,
											"end": 10508,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10034,
											"end": 10508,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10034,
											"end": 10508,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10034,
											"end": 10508,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10034,
											"end": 10508,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10514,
											"end": 10694,
											"name": "tag",
											"source": 2,
											"value": "243"
										},
										{
											"begin": 10514,
											"end": 10694,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10562,
											"end": 10639,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10559,
											"end": 10560,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10552,
											"end": 10640,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10659,
											"end": 10663,
											"name": "PUSH",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 10656,
											"end": 10657,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10649,
											"end": 10664,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10683,
											"end": 10687,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 10680,
											"end": 10681,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10673,
											"end": 10688,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10700,
											"end": 11020,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 10700,
											"end": 11020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10744,
											"end": 10750,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10781,
											"end": 10782,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 10775,
											"end": 10779,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10771,
											"end": 10783,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 10761,
											"end": 10783,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10761,
											"end": 10783,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10828,
											"end": 10829,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 10822,
											"end": 10826,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10818,
											"end": 10830,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10849,
											"end": 10867,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10839,
											"end": 10920,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "376"
										},
										{
											"begin": 10839,
											"end": 10920,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10905,
											"end": 10909,
											"name": "PUSH",
											"source": 2,
											"value": "7F"
										},
										{
											"begin": 10897,
											"end": 10903,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10893,
											"end": 10910,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10883,
											"end": 10910,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10883,
											"end": 10910,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10839,
											"end": 10920,
											"name": "tag",
											"source": 2,
											"value": "376"
										},
										{
											"begin": 10839,
											"end": 10920,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10967,
											"end": 10969,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10959,
											"end": 10965,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10956,
											"end": 10970,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10954,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10933,
											"end": 10971,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10930,
											"end": 11014,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "377"
										},
										{
											"begin": 10930,
											"end": 11014,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10986,
											"end": 11004,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "378"
										},
										{
											"begin": 10986,
											"end": 11004,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "243"
										},
										{
											"begin": 10986,
											"end": 11004,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10986,
											"end": 11004,
											"name": "tag",
											"source": 2,
											"value": "378"
										},
										{
											"begin": 10986,
											"end": 11004,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10930,
											"end": 11014,
											"name": "tag",
											"source": 2,
											"value": "377"
										},
										{
											"begin": 10930,
											"end": 11014,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10751,
											"end": 11020,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10700,
											"end": 11020,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10700,
											"end": 11020,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10700,
											"end": 11020,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10700,
											"end": 11020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11026,
											"end": 11174,
											"name": "tag",
											"source": 2,
											"value": "244"
										},
										{
											"begin": 11026,
											"end": 11174,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11128,
											"end": 11139,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11165,
											"end": 11168,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11150,
											"end": 11168,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11150,
											"end": 11168,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11026,
											"end": 11174,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 11026,
											"end": 11174,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11026,
											"end": 11174,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11026,
											"end": 11174,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11026,
											"end": 11174,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11180,
											"end": 11557,
											"name": "tag",
											"source": 2,
											"value": "245"
										},
										{
											"begin": 11180,
											"end": 11557,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11286,
											"end": 11289,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11314,
											"end": 11353,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "381"
										},
										{
											"begin": 11347,
											"end": 11352,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11314,
											"end": 11353,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "218"
										},
										{
											"begin": 11314,
											"end": 11353,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11314,
											"end": 11353,
											"name": "tag",
											"source": 2,
											"value": "381"
										},
										{
											"begin": 11314,
											"end": 11353,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11369,
											"end": 11458,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "382"
										},
										{
											"begin": 11451,
											"end": 11457,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11446,
											"end": 11449,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 11369,
											"end": 11458,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "244"
										},
										{
											"begin": 11369,
											"end": 11458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11369,
											"end": 11458,
											"name": "tag",
											"source": 2,
											"value": "382"
										},
										{
											"begin": 11369,
											"end": 11458,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11362,
											"end": 11458,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 11362,
											"end": 11458,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11467,
											"end": 11519,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "383"
										},
										{
											"begin": 11512,
											"end": 11518,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11507,
											"end": 11510,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 11500,
											"end": 11504,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11493,
											"end": 11498,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 11489,
											"end": 11505,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11467,
											"end": 11519,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "220"
										},
										{
											"begin": 11467,
											"end": 11519,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11467,
											"end": 11519,
											"name": "tag",
											"source": 2,
											"value": "383"
										},
										{
											"begin": 11467,
											"end": 11519,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11544,
											"end": 11550,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11539,
											"end": 11542,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11535,
											"end": 11551,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11528,
											"end": 11551,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11528,
											"end": 11551,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11290,
											"end": 11557,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11180,
											"end": 11557,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 11180,
											"end": 11557,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11180,
											"end": 11557,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11180,
											"end": 11557,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11180,
											"end": 11557,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11563,
											"end": 11998,
											"name": "tag",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 11563,
											"end": 11998,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11743,
											"end": 11746,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11765,
											"end": 11860,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "385"
										},
										{
											"begin": 11856,
											"end": 11859,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11847,
											"end": 11853,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 11765,
											"end": 11860,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "245"
										},
										{
											"begin": 11765,
											"end": 11860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11765,
											"end": 11860,
											"name": "tag",
											"source": 2,
											"value": "385"
										},
										{
											"begin": 11765,
											"end": 11860,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11758,
											"end": 11860,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11758,
											"end": 11860,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11877,
											"end": 11972,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "386"
										},
										{
											"begin": 11968,
											"end": 11971,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11959,
											"end": 11965,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11877,
											"end": 11972,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "245"
										},
										{
											"begin": 11877,
											"end": 11972,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11877,
											"end": 11972,
											"name": "tag",
											"source": 2,
											"value": "386"
										},
										{
											"begin": 11877,
											"end": 11972,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11870,
											"end": 11972,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11870,
											"end": 11972,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11989,
											"end": 11992,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11982,
											"end": 11992,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11982,
											"end": 11992,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11563,
											"end": 11998,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 11563,
											"end": 11998,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 11563,
											"end": 11998,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11563,
											"end": 11998,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11563,
											"end": 11998,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11563,
											"end": 11998,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12004,
											"end": 12102,
											"name": "tag",
											"source": 2,
											"value": "246"
										},
										{
											"begin": 12004,
											"end": 12102,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12055,
											"end": 12061,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12089,
											"end": 12094,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12083,
											"end": 12095,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12073,
											"end": 12095,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12073,
											"end": 12095,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12004,
											"end": 12102,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12004,
											"end": 12102,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12004,
											"end": 12102,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12004,
											"end": 12102,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12108,
											"end": 12276,
											"name": "tag",
											"source": 2,
											"value": "247"
										},
										{
											"begin": 12108,
											"end": 12276,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12191,
											"end": 12202,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12225,
											"end": 12231,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12220,
											"end": 12223,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12213,
											"end": 12232,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12265,
											"end": 12269,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12260,
											"end": 12263,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12256,
											"end": 12270,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12241,
											"end": 12270,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12241,
											"end": 12270,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12108,
											"end": 12276,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 12108,
											"end": 12276,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12108,
											"end": 12276,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12108,
											"end": 12276,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12108,
											"end": 12276,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12282,
											"end": 12642,
											"name": "tag",
											"source": 2,
											"value": "248"
										},
										{
											"begin": 12282,
											"end": 12642,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12368,
											"end": 12371,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12396,
											"end": 12434,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "390"
										},
										{
											"begin": 12428,
											"end": 12433,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12396,
											"end": 12434,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "246"
										},
										{
											"begin": 12396,
											"end": 12434,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12396,
											"end": 12434,
											"name": "tag",
											"source": 2,
											"value": "390"
										},
										{
											"begin": 12396,
											"end": 12434,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12450,
											"end": 12520,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "391"
										},
										{
											"begin": 12513,
											"end": 12519,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12508,
											"end": 12511,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 12450,
											"end": 12520,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "247"
										},
										{
											"begin": 12450,
											"end": 12520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12450,
											"end": 12520,
											"name": "tag",
											"source": 2,
											"value": "391"
										},
										{
											"begin": 12450,
											"end": 12520,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12443,
											"end": 12520,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 12443,
											"end": 12520,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12529,
											"end": 12581,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "392"
										},
										{
											"begin": 12574,
											"end": 12580,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12569,
											"end": 12572,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 12562,
											"end": 12566,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12555,
											"end": 12560,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 12551,
											"end": 12567,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12529,
											"end": 12581,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "220"
										},
										{
											"begin": 12529,
											"end": 12581,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12529,
											"end": 12581,
											"name": "tag",
											"source": 2,
											"value": "392"
										},
										{
											"begin": 12529,
											"end": 12581,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12606,
											"end": 12635,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "393"
										},
										{
											"begin": 12628,
											"end": 12634,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12606,
											"end": 12635,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 12606,
											"end": 12635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12606,
											"end": 12635,
											"name": "tag",
											"source": 2,
											"value": "393"
										},
										{
											"begin": 12606,
											"end": 12635,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12601,
											"end": 12604,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 12597,
											"end": 12636,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12590,
											"end": 12636,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12590,
											"end": 12636,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12372,
											"end": 12642,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12282,
											"end": 12642,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 12282,
											"end": 12642,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12282,
											"end": 12642,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12282,
											"end": 12642,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12282,
											"end": 12642,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12648,
											"end": 13288,
											"name": "tag",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 12648,
											"end": 13288,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12843,
											"end": 12847,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12881,
											"end": 12884,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 12870,
											"end": 12879,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12866,
											"end": 12885,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12858,
											"end": 12885,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12858,
											"end": 12885,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12895,
											"end": 12966,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "395"
										},
										{
											"begin": 12963,
											"end": 12964,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12952,
											"end": 12961,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12948,
											"end": 12965,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12939,
											"end": 12945,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 12895,
											"end": 12966,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 12895,
											"end": 12966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12895,
											"end": 12966,
											"name": "tag",
											"source": 2,
											"value": "395"
										},
										{
											"begin": 12895,
											"end": 12966,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12976,
											"end": 13048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "396"
										},
										{
											"begin": 13044,
											"end": 13046,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 13033,
											"end": 13042,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 13029,
											"end": 13047,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13020,
											"end": 13026,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 12976,
											"end": 13048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 12976,
											"end": 13048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12976,
											"end": 13048,
											"name": "tag",
											"source": 2,
											"value": "396"
										},
										{
											"begin": 12976,
											"end": 13048,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13058,
											"end": 13130,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "397"
										},
										{
											"begin": 13126,
											"end": 13128,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13115,
											"end": 13124,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 13111,
											"end": 13129,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13102,
											"end": 13108,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 13058,
											"end": 13130,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 13058,
											"end": 13130,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 13058,
											"end": 13130,
											"name": "tag",
											"source": 2,
											"value": "397"
										},
										{
											"begin": 13058,
											"end": 13130,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13177,
											"end": 13186,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13171,
											"end": 13175,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13167,
											"end": 13187,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 13162,
											"end": 13164,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 13151,
											"end": 13160,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 13147,
											"end": 13165,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13140,
											"end": 13188,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13205,
											"end": 13281,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "398"
										},
										{
											"begin": 13276,
											"end": 13280,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13267,
											"end": 13273,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 13205,
											"end": 13281,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "248"
										},
										{
											"begin": 13205,
											"end": 13281,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 13205,
											"end": 13281,
											"name": "tag",
											"source": 2,
											"value": "398"
										},
										{
											"begin": 13205,
											"end": 13281,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13197,
											"end": 13281,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13197,
											"end": 13281,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12648,
											"end": 13288,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 12648,
											"end": 13288,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 12648,
											"end": 13288,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12648,
											"end": 13288,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12648,
											"end": 13288,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12648,
											"end": 13288,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12648,
											"end": 13288,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12648,
											"end": 13288,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 13294,
											"end": 13435,
											"name": "tag",
											"source": 2,
											"value": "249"
										},
										{
											"begin": 13294,
											"end": 13435,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13350,
											"end": 13355,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13381,
											"end": 13387,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13375,
											"end": 13388,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 13366,
											"end": 13388,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13366,
											"end": 13388,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13397,
											"end": 13429,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "400"
										},
										{
											"begin": 13423,
											"end": 13428,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13397,
											"end": 13429,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "214"
										},
										{
											"begin": 13397,
											"end": 13429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 13397,
											"end": 13429,
											"name": "tag",
											"source": 2,
											"value": "400"
										},
										{
											"begin": 13397,
											"end": 13429,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13294,
											"end": 13435,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 13294,
											"end": 13435,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13294,
											"end": 13435,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13294,
											"end": 13435,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13294,
											"end": 13435,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 13441,
											"end": 13790,
											"name": "tag",
											"source": 2,
											"value": "194"
										},
										{
											"begin": 13441,
											"end": 13790,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13510,
											"end": 13516,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13559,
											"end": 13561,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 13547,
											"end": 13556,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 13538,
											"end": 13545,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 13534,
											"end": 13557,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 13530,
											"end": 13562,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 13527,
											"end": 13646,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 13527,
											"end": 13646,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "402"
										},
										{
											"begin": 13527,
											"end": 13646,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 13565,
											"end": 13644,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "403"
										},
										{
											"begin": 13565,
											"end": 13644,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "211"
										},
										{
											"begin": 13565,
											"end": 13644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 13565,
											"end": 13644,
											"name": "tag",
											"source": 2,
											"value": "403"
										},
										{
											"begin": 13565,
											"end": 13644,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13527,
											"end": 13646,
											"name": "tag",
											"source": 2,
											"value": "402"
										},
										{
											"begin": 13527,
											"end": 13646,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13685,
											"end": 13686,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13710,
											"end": 13773,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "404"
										},
										{
											"begin": 13765,
											"end": 13772,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 13756,
											"end": 13762,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 13745,
											"end": 13754,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 13741,
											"end": 13763,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13710,
											"end": 13773,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "249"
										},
										{
											"begin": 13710,
											"end": 13773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 13710,
											"end": 13773,
											"name": "tag",
											"source": 2,
											"value": "404"
										},
										{
											"begin": 13710,
											"end": 13773,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13700,
											"end": 13773,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13700,
											"end": 13773,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13656,
											"end": 13783,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13441,
											"end": 13790,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 13441,
											"end": 13790,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13441,
											"end": 13790,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13441,
											"end": 13790,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13441,
											"end": 13790,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"NFT-Marketplace/contracts/erc721a/ERC721A.sol",
								"NFT-Marketplace/contracts/erc721a/IERC721A.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApproveToCaller\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintERC2309QuantityExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnershipNotInitializedForExtraData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ConsecutiveTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension. Built to optimize for lower gas during batch mints. Assumes serials are sequentially minted starting at `_startTokenId()` (defaults to 0, e.g. 0, 1, 2, 3..). Assumes that an owner cannot have more than 2**64 - 1 (max value of uint64) of supply. Assumes that the maximum token id cannot exceed 2**256 - 1 (max value of uint256).\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"totalSupply()\":{\"details\":\"Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see `_totalMinted`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` from `from` to `to`. Requirements: - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"ApproveToCaller()\":[{\"notice\":\"The caller cannot approve to their own address.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"MintERC2309QuantityExceedsLimit()\":[{\"notice\":\"The `quantity` minted with ERC2309 exceeds the safety limit.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"OwnershipNotInitializedForExtraData()\":[{\"notice\":\"The `extraData` cannot be set on an unintialized ownership slot.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":\"ERC721A\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":{\"keccak256\":\"0xcc32c910eb82b61449316763f6b6b767c13b15b13f4676a03503d3dddcd97364\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c9fc40461cd5387aeaac5ea2fbf54dcae3250f51df48919412950664be12c80\",\"dweb:/ipfs/QmQmBvZqwBCnWNMWJVWNDftEYk74C9Gn6vUbS6Tx65kQaE\"]},\"NFT-Marketplace/contracts/erc721a/IERC721A.sol\":{\"keccak256\":\"0xa606700bae4e1854ad3fbc54ec9d789dde8b151eb9cb42ad06f56a9ee5fe3485\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cba5e7f4df3b28645de729098635f976ebc8ca5ecc1c5b2d6242f3cd617d1226\",\"dweb:/ipfs/QmYWsZj7NdKDQteV7EVKscVnoTtKRK9RgPzrkn35y9kWYT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 88,
								"contract": "NFT-Marketplace/contracts/erc721a/ERC721A.sol:ERC721A",
								"label": "_currentIndex",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 90,
								"contract": "NFT-Marketplace/contracts/erc721a/ERC721A.sol:ERC721A",
								"label": "_burnCounter",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 92,
								"contract": "NFT-Marketplace/contracts/erc721a/ERC721A.sol:ERC721A",
								"label": "_name",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							},
							{
								"astId": 94,
								"contract": "NFT-Marketplace/contracts/erc721a/ERC721A.sol:ERC721A",
								"label": "_symbol",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 98,
								"contract": "NFT-Marketplace/contracts/erc721a/ERC721A.sol:ERC721A",
								"label": "_packedOwnerships",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 102,
								"contract": "NFT-Marketplace/contracts/erc721a/ERC721A.sol:ERC721A",
								"label": "_packedAddressData",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 107,
								"contract": "NFT-Marketplace/contracts/erc721a/ERC721A.sol:ERC721A",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_struct(TokenApprovalRef)23_storage)"
							},
							{
								"astId": 113,
								"contract": "NFT-Marketplace/contracts/erc721a/ERC721A.sol:ERC721A",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_struct(TokenApprovalRef)23_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct ERC721A.TokenApprovalRef)",
								"numberOfBytes": "32",
								"value": "t_struct(TokenApprovalRef)23_storage"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(TokenApprovalRef)23_storage": {
								"encoding": "inplace",
								"label": "struct ERC721A.TokenApprovalRef",
								"members": [
									{
										"astId": 22,
										"contract": "NFT-Marketplace/contracts/erc721a/ERC721A.sol:ERC721A",
										"label": "value",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"errors": {
							"ApprovalCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"ApprovalQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"ApproveToCaller()": [
								{
									"notice": "The caller cannot approve to their own address."
								}
							],
							"BalanceQueryForZeroAddress()": [
								{
									"notice": "Cannot query the balance for the zero address."
								}
							],
							"MintERC2309QuantityExceedsLimit()": [
								{
									"notice": "The `quantity` minted with ERC2309 exceeds the safety limit."
								}
							],
							"MintToZeroAddress()": [
								{
									"notice": "Cannot mint to the zero address."
								}
							],
							"MintZeroQuantity()": [
								{
									"notice": "The quantity of tokens minted must be more than zero."
								}
							],
							"OwnerQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"OwnershipNotInitializedForExtraData()": [
								{
									"notice": "The `extraData` cannot be set on an unintialized ownership slot."
								}
							],
							"TransferCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"TransferFromIncorrectOwner()": [
								{
									"notice": "The token must be owned by `from`."
								}
							],
							"TransferToNonERC721ReceiverImplementer()": [
								{
									"notice": "Cannot safely transfer to a contract that does not implement the ERC721Receiver interface."
								}
							],
							"TransferToZeroAddress()": [
								{
									"notice": "Cannot transfer to the zero address."
								}
							],
							"URIQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							]
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC721A__IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC721 token receiver interface.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC721 token receiver interface.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":\"ERC721A__IERC721Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"NFT-Marketplace/contracts/erc721a/ERC721A.sol\":{\"keccak256\":\"0xcc32c910eb82b61449316763f6b6b767c13b15b13f4676a03503d3dddcd97364\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c9fc40461cd5387aeaac5ea2fbf54dcae3250f51df48919412950664be12c80\",\"dweb:/ipfs/QmQmBvZqwBCnWNMWJVWNDftEYk74C9Gn6vUbS6Tx65kQaE\"]},\"NFT-Marketplace/contracts/erc721a/IERC721A.sol\":{\"keccak256\":\"0xa606700bae4e1854ad3fbc54ec9d789dde8b151eb9cb42ad06f56a9ee5fe3485\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cba5e7f4df3b28645de729098635f976ebc8ca5ecc1c5b2d6242f3cd617d1226\",\"dweb:/ipfs/QmYWsZj7NdKDQteV7EVKscVnoTtKRK9RgPzrkn35y9kWYT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"NFT-Marketplace/contracts/erc721a/IERC721A.sol": {
				"IERC721A": {
					"abi": [
						{
							"inputs": [],
							"name": "ApprovalCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApprovalQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApproveToCaller",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "BalanceQueryForZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintERC2309QuantityExceedsLimit",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintZeroQuantity",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnerQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnershipNotInitializedForExtraData",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferFromIncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToNonERC721ReceiverImplementer",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "URIQueryForNonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "toTokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "ConsecutiveTransfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of an ERC721A compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"ConsecutiveTransfer(uint256,uint256,address,address)": {
								"details": "Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`, as defined in the ERC2309 standard. See `_mintERC2309` for more details."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"totalSupply()": {
								"details": "Returns the total amount of tokens stored by the contract. Burned tokens are calculated here, use `_totalMinted()` if you want to count just minted tokens."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApproveToCaller\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintERC2309QuantityExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnershipNotInitializedForExtraData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ConsecutiveTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of an ERC721A compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"ConsecutiveTransfer(uint256,uint256,address,address)\":{\"details\":\"Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`, as defined in the ERC2309 standard. See `_mintERC2309` for more details.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"totalSupply()\":{\"details\":\"Returns the total amount of tokens stored by the contract. Burned tokens are calculated here, use `_totalMinted()` if you want to count just minted tokens.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"ApproveToCaller()\":[{\"notice\":\"The caller cannot approve to their own address.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"MintERC2309QuantityExceedsLimit()\":[{\"notice\":\"The `quantity` minted with ERC2309 exceeds the safety limit.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"OwnershipNotInitializedForExtraData()\":[{\"notice\":\"The `extraData` cannot be set on an unintialized ownership slot.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"NFT-Marketplace/contracts/erc721a/IERC721A.sol\":\"IERC721A\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"NFT-Marketplace/contracts/erc721a/IERC721A.sol\":{\"keccak256\":\"0xa606700bae4e1854ad3fbc54ec9d789dde8b151eb9cb42ad06f56a9ee5fe3485\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cba5e7f4df3b28645de729098635f976ebc8ca5ecc1c5b2d6242f3cd617d1226\",\"dweb:/ipfs/QmYWsZj7NdKDQteV7EVKscVnoTtKRK9RgPzrkn35y9kWYT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"errors": {
							"ApprovalCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"ApprovalQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"ApproveToCaller()": [
								{
									"notice": "The caller cannot approve to their own address."
								}
							],
							"BalanceQueryForZeroAddress()": [
								{
									"notice": "Cannot query the balance for the zero address."
								}
							],
							"MintERC2309QuantityExceedsLimit()": [
								{
									"notice": "The `quantity` minted with ERC2309 exceeds the safety limit."
								}
							],
							"MintToZeroAddress()": [
								{
									"notice": "Cannot mint to the zero address."
								}
							],
							"MintZeroQuantity()": [
								{
									"notice": "The quantity of tokens minted must be more than zero."
								}
							],
							"OwnerQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"OwnershipNotInitializedForExtraData()": [
								{
									"notice": "The `extraData` cannot be set on an unintialized ownership slot."
								}
							],
							"TransferCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"TransferFromIncorrectOwner()": [
								{
									"notice": "The token must be owned by `from`."
								}
							],
							"TransferToNonERC721ReceiverImplementer()": [
								{
									"notice": "Cannot safely transfer to a contract that does not implement the ERC721Receiver interface."
								}
							],
							"TransferToZeroAddress()": [
								{
									"notice": "Cannot transfer to the zero address."
								}
							],
							"URIQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							]
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"NFT-Marketplace/contracts/erc721a/ERC721A.sol": {
				"ast": {
					"absolutePath": "NFT-Marketplace/contracts/erc721a/ERC721A.sol",
					"exportedSymbols": {
						"ERC721A": [
							1645
						],
						"ERC721A__IERC721Receiver": [
							17
						],
						"IERC721A": [
							1854
						]
					},
					"id": 1646,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "88:23:0"
						},
						{
							"absolutePath": "NFT-Marketplace/contracts/erc721a/IERC721A.sol",
							"file": "./IERC721A.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1646,
							"sourceUnit": 1855,
							"src": "115:24:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ERC721A__IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "143:50:0",
								"text": " @dev ERC721 token receiver interface."
							},
							"fullyImplemented": false,
							"id": 17,
							"linearizedBaseContracts": [
								17
							],
							"name": "ERC721A__IERC721Receiver",
							"nameLocation": "205:24:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "150b7a02",
									"id": 16,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "246:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "281:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "273:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "273:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "308:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "300:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "300:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "331:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "323:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "323:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "364:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "349:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 10,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "349:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "262:113:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "394:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 13,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "394:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "393:8:0"
									},
									"scope": 17,
									"src": "237:165:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1646,
							"src": "195:210:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 19,
										"name": "IERC721A",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1854,
										"src": "936:8:0"
									},
									"id": 20,
									"nodeType": "InheritanceSpecifier",
									"src": "936:8:0"
								}
							],
							"canonicalName": "ERC721A",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 18,
								"nodeType": "StructuredDocumentation",
								"src": "409:505:0",
								"text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard,\n including the Metadata extension. Built to optimize for lower gas during batch mints.\n Assumes serials are sequentially minted starting at `_startTokenId()`\n (defaults to 0, e.g. 0, 1, 2, 3..).\n Assumes that an owner cannot have more than 2**64 - 1 (max value of uint64) of supply.\n Assumes that the maximum token id cannot exceed 2**256 - 1 (max value of uint256)."
							},
							"fullyImplemented": true,
							"id": 1645,
							"linearizedBaseContracts": [
								1645,
								1854
							],
							"name": "ERC721A",
							"nameLocation": "925:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ERC721A.TokenApprovalRef",
									"id": 23,
									"members": [
										{
											"constant": false,
											"id": 22,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1038:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 23,
											"src": "1030:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 21,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1030:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "TokenApprovalRef",
									"nameLocation": "1002:16:0",
									"nodeType": "StructDefinition",
									"scope": 1645,
									"src": "995:56:0",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 31,
									"mutability": "constant",
									"name": "BITMASK_ADDRESS_DATA_ENTRY",
									"nameLocation": "1133:26:0",
									"nodeType": "VariableDeclaration",
									"scope": 1645,
									"src": "1108:67:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 24,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1108:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_18446744073709551615_by_1",
											"typeString": "int_const 18446744073709551615"
										},
										"id": 30,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_18446744073709551616_by_1",
														"typeString": "int_const 18446744073709551616"
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 25,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1163:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"hexValue": "3634",
														"id": 26,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1168:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_64_by_1",
															"typeString": "int_const 64"
														},
														"value": "64"
													},
													"src": "1163:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18446744073709551616_by_1",
														"typeString": "int_const 18446744073709551616"
													}
												}
											],
											"id": 28,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "1162:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_18446744073709551616_by_1",
												"typeString": "int_const 18446744073709551616"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "-",
										"rightExpression": {
											"hexValue": "31",
											"id": 29,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1174:1:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "1162:13:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_18446744073709551615_by_1",
											"typeString": "int_const 18446744073709551615"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 34,
									"mutability": "constant",
									"name": "BITPOS_NUMBER_MINTED",
									"nameLocation": "1276:20:0",
									"nodeType": "VariableDeclaration",
									"scope": 1645,
									"src": "1251:50:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 32,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1251:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3634",
										"id": 33,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1299:2:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_64_by_1",
											"typeString": "int_const 64"
										},
										"value": "64"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 37,
									"mutability": "constant",
									"name": "BITPOS_NUMBER_BURNED",
									"nameLocation": "1402:20:0",
									"nodeType": "VariableDeclaration",
									"scope": 1645,
									"src": "1377:51:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 35,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1377:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313238",
										"id": 36,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1425:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_128_by_1",
											"typeString": "int_const 128"
										},
										"value": "128"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 40,
									"mutability": "constant",
									"name": "BITPOS_AUX",
									"nameLocation": "1520:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 1645,
									"src": "1495:41:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 38,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1495:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313932",
										"id": 39,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1533:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_192_by_1",
											"typeString": "int_const 192"
										},
										"value": "192"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 48,
									"mutability": "constant",
									"name": "BITMASK_AUX_COMPLEMENT",
									"nameLocation": "1652:22:0",
									"nodeType": "VariableDeclaration",
									"scope": 1645,
									"src": "1627:64:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 41,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1627:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512895_by_1",
											"typeString": "int_const 6277...(50 digits omitted)...2895"
										},
										"id": 47,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512896_by_1",
														"typeString": "int_const 6277...(50 digits omitted)...2896"
													},
													"id": 44,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 42,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1678:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"hexValue": "313932",
														"id": 43,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1683:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_192_by_1",
															"typeString": "int_const 192"
														},
														"value": "192"
													},
													"src": "1678:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512896_by_1",
														"typeString": "int_const 6277...(50 digits omitted)...2896"
													}
												}
											],
											"id": 45,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "1677:10:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512896_by_1",
												"typeString": "int_const 6277...(50 digits omitted)...2896"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "-",
										"rightExpression": {
											"hexValue": "31",
											"id": 46,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1690:1:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "1677:14:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512895_by_1",
											"typeString": "int_const 6277...(50 digits omitted)...2895"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 51,
									"mutability": "constant",
									"name": "BITPOS_START_TIMESTAMP",
									"nameLocation": "1791:22:0",
									"nodeType": "VariableDeclaration",
									"scope": 1645,
									"src": "1766:53:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 49,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1766:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313630",
										"id": 50,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1816:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_160_by_1",
											"typeString": "int_const 160"
										},
										"value": "160"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 56,
									"mutability": "constant",
									"name": "BITMASK_BURNED",
									"nameLocation": "1915:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 1645,
									"src": "1890:50:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 52,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1890:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_26959946667150639794667015087019630673637144422540572481103610249216_by_1",
											"typeString": "int_const 2695...(60 digits omitted)...9216"
										},
										"id": 55,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "31",
											"id": 53,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1932:1:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"nodeType": "BinaryOperation",
										"operator": "<<",
										"rightExpression": {
											"hexValue": "323234",
											"id": 54,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1937:3:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_224_by_1",
												"typeString": "int_const 224"
											},
											"value": "224"
										},
										"src": "1932:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_26959946667150639794667015087019630673637144422540572481103610249216_by_1",
											"typeString": "int_const 2695...(60 digits omitted)...9216"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 59,
									"mutability": "constant",
									"name": "BITPOS_NEXT_INITIALIZED",
									"nameLocation": "2049:23:0",
									"nodeType": "VariableDeclaration",
									"scope": 1645,
									"src": "2024:54:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 57,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2024:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "323235",
										"id": 58,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2075:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_225_by_1",
											"typeString": "int_const 225"
										},
										"value": "225"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 64,
									"mutability": "constant",
									"name": "BITMASK_NEXT_INITIALIZED",
									"nameLocation": "2183:24:0",
									"nodeType": "VariableDeclaration",
									"scope": 1645,
									"src": "2158:60:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 60,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2158:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_53919893334301279589334030174039261347274288845081144962207220498432_by_1",
											"typeString": "int_const 5391...(60 digits omitted)...8432"
										},
										"id": 63,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "31",
											"id": 61,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2210:1:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"nodeType": "BinaryOperation",
										"operator": "<<",
										"rightExpression": {
											"hexValue": "323235",
											"id": 62,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2215:3:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_225_by_1",
												"typeString": "int_const 225"
											},
											"value": "225"
										},
										"src": "2210:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_53919893334301279589334030174039261347274288845081144962207220498432_by_1",
											"typeString": "int_const 5391...(60 digits omitted)...8432"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 67,
									"mutability": "constant",
									"name": "BITPOS_EXTRA_DATA",
									"nameLocation": "2313:17:0",
									"nodeType": "VariableDeclaration",
									"scope": 1645,
									"src": "2288:48:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 65,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2288:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "323332",
										"id": 66,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2333:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_232_by_1",
											"typeString": "int_const 232"
										},
										"value": "232"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 75,
									"mutability": "constant",
									"name": "BITMASK_EXTRA_DATA_COMPLEMENT",
									"nameLocation": "2457:29:0",
									"nodeType": "VariableDeclaration",
									"scope": 1645,
									"src": "2432:71:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 68,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2432:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_6901746346790563787434755862277025452451108972170386555162524223799295_by_1",
											"typeString": "int_const 6901...(62 digits omitted)...9295"
										},
										"id": 74,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_6901746346790563787434755862277025452451108972170386555162524223799296_by_1",
														"typeString": "int_const 6901...(62 digits omitted)...9296"
													},
													"id": 71,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 69,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2490:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"hexValue": "323332",
														"id": 70,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2495:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_232_by_1",
															"typeString": "int_const 232"
														},
														"value": "232"
													},
													"src": "2490:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_6901746346790563787434755862277025452451108972170386555162524223799296_by_1",
														"typeString": "int_const 6901...(62 digits omitted)...9296"
													}
												}
											],
											"id": 72,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "2489:10:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_6901746346790563787434755862277025452451108972170386555162524223799296_by_1",
												"typeString": "int_const 6901...(62 digits omitted)...9296"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "-",
										"rightExpression": {
											"hexValue": "31",
											"id": 73,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2502:1:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "2489:14:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_6901746346790563787434755862277025452451108972170386555162524223799295_by_1",
											"typeString": "int_const 6901...(62 digits omitted)...9295"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 83,
									"mutability": "constant",
									"name": "BITMASK_ADDRESS",
									"nameLocation": "2591:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 1645,
									"src": "2566:57:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 76,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2566:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_1461501637330902918203684832716283019655932542975_by_1",
											"typeString": "int_const 1461...(41 digits omitted)...2975"
										},
										"id": 82,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_1461501637330902918203684832716283019655932542976_by_1",
														"typeString": "int_const 1461...(41 digits omitted)...2976"
													},
													"id": 79,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 77,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2610:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"hexValue": "313630",
														"id": 78,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2615:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_160_by_1",
															"typeString": "int_const 160"
														},
														"value": "160"
													},
													"src": "2610:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1461501637330902918203684832716283019655932542976_by_1",
														"typeString": "int_const 1461...(41 digits omitted)...2976"
													}
												}
											],
											"id": 80,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "2609:10:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1461501637330902918203684832716283019655932542976_by_1",
												"typeString": "int_const 1461...(41 digits omitted)...2976"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "-",
										"rightExpression": {
											"hexValue": "31",
											"id": 81,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2622:1:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "2609:14:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1461501637330902918203684832716283019655932542975_by_1",
											"typeString": "int_const 1461...(41 digits omitted)...2975"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 86,
									"mutability": "constant",
									"name": "MAX_MINT_ERC2309_QUANTITY_LIMIT",
									"nameLocation": "2937:31:0",
									"nodeType": "VariableDeclaration",
									"scope": 1645,
									"src": "2912:63:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 84,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2912:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "35303030",
										"id": 85,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2971:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_5000_by_1",
											"typeString": "int_const 5000"
										},
										"value": "5000"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 88,
									"mutability": "mutable",
									"name": "_currentIndex",
									"nameLocation": "3052:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 1645,
									"src": "3036:29:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 87,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3036:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 90,
									"mutability": "mutable",
									"name": "_burnCounter",
									"nameLocation": "3127:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 1645,
									"src": "3111:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 89,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3111:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 92,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "3182:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 1645,
									"src": "3167:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 91,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "3167:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 94,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "3232:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 1645,
									"src": "3217:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 93,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "3217:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 98,
									"mutability": "mutable",
									"name": "_packedOwnerships",
									"nameLocation": "3671:17:0",
									"nodeType": "VariableDeclaration",
									"scope": 1645,
									"src": "3635:53:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 97,
										"keyType": {
											"id": 95,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "3643:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "3635:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueType": {
											"id": 96,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "3654:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 102,
									"mutability": "mutable",
									"name": "_packedAddressData",
									"nameLocation": "3939:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 1645,
									"src": "3903:54:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 101,
										"keyType": {
											"id": 99,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "3911:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "3903:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 100,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "3922:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 107,
									"mutability": "mutable",
									"name": "_tokenApprovals",
									"nameLocation": "4062:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 1645,
									"src": "4017:60:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenApprovalRef_$23_storage_$",
										"typeString": "mapping(uint256 => struct ERC721A.TokenApprovalRef)"
									},
									"typeName": {
										"id": 106,
										"keyType": {
											"id": 103,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "4025:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "4017:36:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenApprovalRef_$23_storage_$",
											"typeString": "mapping(uint256 => struct ERC721A.TokenApprovalRef)"
										},
										"valueType": {
											"id": 105,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 104,
												"name": "TokenApprovalRef",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 23,
												"src": "4036:16:0"
											},
											"referencedDeclaration": 23,
											"src": "4036:16:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_TokenApprovalRef_$23_storage_ptr",
												"typeString": "struct ERC721A.TokenApprovalRef"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 113,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "4188:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 1645,
									"src": "4135:71:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 112,
										"keyType": {
											"id": 108,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "4143:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "4135:44:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueType": {
											"id": 111,
											"keyType": {
												"id": 109,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "4162:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "4154:24:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueType": {
												"id": 110,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "4173:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 133,
										"nodeType": "Block",
										"src": "4271:102:0",
										"statements": [
											{
												"expression": {
													"id": 122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 120,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 92,
														"src": "4282:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 121,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 115,
														"src": "4290:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "4282:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 123,
												"nodeType": "ExpressionStatement",
												"src": "4282:13:0"
											},
											{
												"expression": {
													"id": 126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 124,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "4306:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 125,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 117,
														"src": "4316:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "4306:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 127,
												"nodeType": "ExpressionStatement",
												"src": "4306:17:0"
											},
											{
												"expression": {
													"id": 131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 128,
														"name": "_currentIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 88,
														"src": "4334:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 129,
															"name": "_startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 143,
															"src": "4350:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 130,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4350:15:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4334:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 132,
												"nodeType": "ExpressionStatement",
												"src": "4334:31:0"
											}
										]
									},
									"id": 134,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "4241:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 134,
												"src": "4227:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 114,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4227:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "4262:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 134,
												"src": "4248:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 116,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4248:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4226:44:0"
									},
									"returnParameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4271:0:0"
									},
									"scope": 1645,
									"src": "4215:158:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 142,
										"nodeType": "Block",
										"src": "4580:27:0",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 140,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4598:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 139,
												"id": 141,
												"nodeType": "Return",
												"src": "4591:8:0"
											}
										]
									},
									"documentation": {
										"id": 135,
										"nodeType": "StructuredDocumentation",
										"src": "4381:128:0",
										"text": " @dev Returns the starting token ID.\n To change the starting token ID, please override this function."
									},
									"id": 143,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_startTokenId",
									"nameLocation": "4524:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 136,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4537:2:0"
									},
									"returnParameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 143,
												"src": "4571:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 137,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4571:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4570:9:0"
									},
									"scope": 1645,
									"src": "4515:92:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 151,
										"nodeType": "Block",
										"src": "4750:39:0",
										"statements": [
											{
												"expression": {
													"id": 149,
													"name": "_currentIndex",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 88,
													"src": "4768:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 148,
												"id": 150,
												"nodeType": "Return",
												"src": "4761:20:0"
											}
										]
									},
									"documentation": {
										"id": 144,
										"nodeType": "StructuredDocumentation",
										"src": "4615:65:0",
										"text": " @dev Returns the next token ID to be minted."
									},
									"id": 152,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nextTokenId",
									"nameLocation": "4695:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 145,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4707:2:0"
									},
									"returnParameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 152,
												"src": "4741:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 146,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4741:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4740:9:0"
									},
									"scope": 1645,
									"src": "4686:103:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1705
									],
									"body": {
										"id": 167,
										"nodeType": "Block",
										"src": "5069:253:0",
										"statements": [
											{
												"id": 166,
												"nodeType": "UncheckedBlock",
												"src": "5225:90:0",
												"statements": [
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 164,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 161,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 159,
																	"name": "_currentIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 88,
																	"src": "5257:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 160,
																	"name": "_burnCounter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 90,
																	"src": "5273:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5257:28:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 162,
																	"name": "_startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 143,
																	"src": "5288:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 163,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5288:15:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5257:46:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 158,
														"id": 165,
														"nodeType": "Return",
														"src": "5250:53:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 153,
										"nodeType": "StructuredDocumentation",
										"src": "4797:196:0",
										"text": " @dev Returns the total number of tokens in existence.\n Burned tokens will reduce the count.\n To get the total number of tokens minted, please see `_totalMinted`."
									},
									"functionSelector": "18160ddd",
									"id": 168,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "5008:11:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 155,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5042:8:0"
									},
									"parameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5019:2:0"
									},
									"returnParameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "5060:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5060:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5059:9:0"
									},
									"scope": 1645,
									"src": "4999:323:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 180,
										"nodeType": "Block",
										"src": "5484:229:0",
										"statements": [
											{
												"id": 179,
												"nodeType": "UncheckedBlock",
												"src": "5631:75:0",
												"statements": [
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 177,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 174,
																"name": "_currentIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 88,
																"src": "5663:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 175,
																	"name": "_startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 143,
																	"src": "5679:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 176,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5679:15:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5663:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 173,
														"id": 178,
														"nodeType": "Return",
														"src": "5656:38:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 169,
										"nodeType": "StructuredDocumentation",
										"src": "5330:84:0",
										"text": " @dev Returns the total amount of tokens minted in the contract."
									},
									"id": 181,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_totalMinted",
									"nameLocation": "5429:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5441:2:0"
									},
									"returnParameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "5475:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5475:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5474:9:0"
									},
									"scope": 1645,
									"src": "5420:293:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 189,
										"nodeType": "Block",
										"src": "5859:38:0",
										"statements": [
											{
												"expression": {
													"id": 187,
													"name": "_burnCounter",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 90,
													"src": "5877:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 186,
												"id": 188,
												"nodeType": "Return",
												"src": "5870:19:0"
											}
										]
									},
									"documentation": {
										"id": 182,
										"nodeType": "StructuredDocumentation",
										"src": "5721:68:0",
										"text": " @dev Returns the total number of tokens burned."
									},
									"id": 190,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_totalBurned",
									"nameLocation": "5804:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5816:2:0"
									},
									"returnParameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "5850:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 184,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5850:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5849:9:0"
									},
									"scope": 1645,
									"src": "5795:102:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1713
									],
									"body": {
										"id": 211,
										"nodeType": "Block",
										"src": "6060:524:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 205,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 201,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 199,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 193,
																"src": "6354:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30783031666663396137",
																"id": 200,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6369:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_33540519_by_1",
																	"typeString": "int_const 33540519"
																},
																"value": "0x01ffc9a7"
															},
															"src": "6354:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 204,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 202,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 193,
																"src": "6431:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30783830616335386364",
																"id": 203,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6446:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2158778573_by_1",
																	"typeString": "int_const 2158778573"
																},
																"value": "0x80ac58cd"
															},
															"src": "6431:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "6354:102:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 208,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 206,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 193,
															"src": "6508:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30783562356531333966",
															"id": 207,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6523:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1532892063_by_1",
																"typeString": "int_const 1532892063"
															},
															"value": "0x5b5e139f"
														},
														"src": "6508:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6354:179:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 198,
												"id": 210,
												"nodeType": "Return",
												"src": "6334:199:0"
											}
										]
									},
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "5905:58:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 212,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "5978:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 195,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6036:8:0"
									},
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "6003:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "5996:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 192,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "5996:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5995:20:0"
									},
									"returnParameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "6054:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 196,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6054:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6053:6:0"
									},
									"scope": 1645,
									"src": "5969:615:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1748
									],
									"body": {
										"id": 237,
										"nodeType": "Block",
										"src": "6729:151:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 221,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 215,
														"src": "6744:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 224,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6761:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 223,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6753:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 222,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6753:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 225,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6753:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6744:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 230,
												"nodeType": "IfStatement",
												"src": "6740:60:0",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 227,
															"name": "BalanceQueryForZeroAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1660,
															"src": "6772:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 228,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6772:28:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 229,
													"nodeType": "RevertStatement",
													"src": "6765:35:0"
												}
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 231,
															"name": "_packedAddressData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 102,
															"src": "6818:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 233,
														"indexExpression": {
															"id": 232,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 215,
															"src": "6837:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6818:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&",
													"rightExpression": {
														"id": 234,
														"name": "BITMASK_ADDRESS_DATA_ENTRY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 31,
														"src": "6846:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6818:54:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 220,
												"id": 236,
												"nodeType": "Return",
												"src": "6811:61:0"
											}
										]
									},
									"documentation": {
										"id": 213,
										"nodeType": "StructuredDocumentation",
										"src": "6592:50:0",
										"text": " @dev See {IERC721-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 238,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "6657:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 217,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6702:8:0"
									},
									"parameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "6675:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "6667:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 214,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6667:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6666:15:0"
									},
									"returnParameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "6720:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6720:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6719:9:0"
									},
									"scope": 1645,
									"src": "6648:232:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 255,
										"nodeType": "Block",
										"src": "7040:106:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 250,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 246,
																		"name": "_packedAddressData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 102,
																		"src": "7059:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 248,
																	"indexExpression": {
																		"id": 247,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 241,
																		"src": "7078:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "7059:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"id": 249,
																	"name": "BITPOS_NUMBER_MINTED",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 34,
																	"src": "7088:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7059:49:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 251,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7058:51:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&",
													"rightExpression": {
														"id": 252,
														"name": "BITMASK_ADDRESS_DATA_ENTRY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 31,
														"src": "7112:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7058:80:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 245,
												"id": 254,
												"nodeType": "Return",
												"src": "7051:87:0"
											}
										]
									},
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "6888:68:0",
										"text": " Returns the number of tokens minted by `owner`."
									},
									"id": 256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_numberMinted",
									"nameLocation": "6971:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "6993:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6985:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6985:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6984:15:0"
									},
									"returnParameters": {
										"id": 245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 244,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "7031:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 243,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7031:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7030:9:0"
									},
									"scope": 1645,
									"src": "6962:184:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 273,
										"nodeType": "Block",
										"src": "7322:106:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 271,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 268,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 264,
																		"name": "_packedAddressData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 102,
																		"src": "7341:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 266,
																	"indexExpression": {
																		"id": 265,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 259,
																		"src": "7360:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "7341:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"id": 267,
																	"name": "BITPOS_NUMBER_BURNED",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 37,
																	"src": "7370:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7341:49:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 269,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7340:51:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&",
													"rightExpression": {
														"id": 270,
														"name": "BITMASK_ADDRESS_DATA_ENTRY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 31,
														"src": "7394:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7340:80:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 263,
												"id": 272,
												"nodeType": "Return",
												"src": "7333:87:0"
											}
										]
									},
									"documentation": {
										"id": 257,
										"nodeType": "StructuredDocumentation",
										"src": "7154:84:0",
										"text": " Returns the number of tokens burned by or on behalf of `owner`."
									},
									"id": 274,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_numberBurned",
									"nameLocation": "7253:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7275:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "7267:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 258,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7267:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7266:15:0"
									},
									"returnParameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "7313:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7313:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7312:9:0"
									},
									"scope": 1645,
									"src": "7244:184:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 291,
										"nodeType": "Block",
										"src": "7617:73:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 288,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 284,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 102,
																	"src": "7642:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 286,
																"indexExpression": {
																	"id": 285,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 277,
																	"src": "7661:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7642:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"id": 287,
																"name": "BITPOS_AUX",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 40,
																"src": "7671:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7642:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 283,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "7635:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint64_$",
															"typeString": "type(uint64)"
														},
														"typeName": {
															"id": 282,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "7635:6:0",
															"typeDescriptions": {}
														}
													},
													"id": 289,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7635:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 281,
												"id": 290,
												"nodeType": "Return",
												"src": "7628:54:0"
											}
										]
									},
									"documentation": {
										"id": 275,
										"nodeType": "StructuredDocumentation",
										"src": "7436:104:0",
										"text": " Returns the auxiliary data for `owner`. (e.g. number of whitelist mint slots used)."
									},
									"id": 292,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getAux",
									"nameLocation": "7555:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 277,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7571:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "7563:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 276,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7563:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7562:15:0"
									},
									"returnParameters": {
										"id": 281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 280,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "7609:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 279,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "7609:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7608:8:0"
									},
									"scope": 1645,
									"src": "7546:144:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 328,
										"nodeType": "Block",
										"src": "7939:341:0",
										"statements": [
											{
												"assignments": [
													301
												],
												"declarations": [
													{
														"constant": false,
														"id": 301,
														"mutability": "mutable",
														"name": "packed",
														"nameLocation": "7958:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 328,
														"src": "7950:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 300,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7950:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 305,
												"initialValue": {
													"baseExpression": {
														"id": 302,
														"name": "_packedAddressData",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 102,
														"src": "7967:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 304,
													"indexExpression": {
														"id": 303,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "7986:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7967:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7950:42:0"
											},
											{
												"assignments": [
													307
												],
												"declarations": [
													{
														"constant": false,
														"id": 307,
														"mutability": "mutable",
														"name": "auxCasted",
														"nameLocation": "8011:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 328,
														"src": "8003:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 306,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8003:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 308,
												"nodeType": "VariableDeclarationStatement",
												"src": "8003:17:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "8105:42:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8120:16:0",
															"value": {
																"name": "aux",
																"nodeType": "YulIdentifier",
																"src": "8133:3:0"
															},
															"variableNames": [
																{
																	"name": "auxCasted",
																	"nodeType": "YulIdentifier",
																	"src": "8120:9:0"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 297,
														"isOffset": false,
														"isSlot": false,
														"src": "8133:3:0",
														"valueSize": 1
													},
													{
														"declaration": 307,
														"isOffset": false,
														"isSlot": false,
														"src": "8120:9:0",
														"valueSize": 1
													}
												],
												"id": 309,
												"nodeType": "InlineAssembly",
												"src": "8096:51:0"
											},
											{
												"expression": {
													"id": 320,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 310,
														"name": "packed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 301,
														"src": "8157:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 319,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 313,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 311,
																		"name": "packed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 301,
																		"src": "8167:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&",
																	"rightExpression": {
																		"id": 312,
																		"name": "BITMASK_AUX_COMPLEMENT",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 48,
																		"src": "8176:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8167:31:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 314,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "8166:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "|",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 317,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 315,
																		"name": "auxCasted",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 307,
																		"src": "8203:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<<",
																	"rightExpression": {
																		"id": 316,
																		"name": "BITPOS_AUX",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 40,
																		"src": "8216:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8203:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 318,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "8202:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "8166:61:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8157:70:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 321,
												"nodeType": "ExpressionStatement",
												"src": "8157:70:0"
											},
											{
												"expression": {
													"id": 326,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 322,
															"name": "_packedAddressData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 102,
															"src": "8238:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 324,
														"indexExpression": {
															"id": 323,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 295,
															"src": "8257:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8238:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 325,
														"name": "packed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 301,
														"src": "8266:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8238:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 327,
												"nodeType": "ExpressionStatement",
												"src": "8238:34:0"
											}
										]
									},
									"documentation": {
										"id": 293,
										"nodeType": "StructuredDocumentation",
										"src": "7698:174:0",
										"text": " Sets the auxiliary data for `owner`. (e.g. number of whitelist mint slots used).\n If there are multiple variables, please pack them into a uint64."
									},
									"id": 329,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setAux",
									"nameLocation": "7887:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7903:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "7895:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 294,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7895:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 297,
												"mutability": "mutable",
												"name": "aux",
												"nameLocation": "7917:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "7910:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 296,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "7910:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7894:27:0"
									},
									"returnParameters": {
										"id": 299,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7939:0:0"
									},
									"scope": 1645,
									"src": "7878:402:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 382,
										"nodeType": "Block",
										"src": "8438:1053:0",
										"statements": [
											{
												"assignments": [
													338
												],
												"declarations": [
													{
														"constant": false,
														"id": 338,
														"mutability": "mutable",
														"name": "curr",
														"nameLocation": "8457:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 382,
														"src": "8449:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 337,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8449:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 340,
												"initialValue": {
													"id": 339,
													"name": "tokenId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 332,
													"src": "8464:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8449:22:0"
											},
											{
												"id": 378,
												"nodeType": "UncheckedBlock",
												"src": "8484:951:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 344,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 341,
																	"name": "_startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 143,
																	"src": "8513:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 342,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8513:15:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 343,
																"name": "curr",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 338,
																"src": "8532:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8513:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 377,
														"nodeType": "IfStatement",
														"src": "8509:915:0",
														"trueBody": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 347,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 345,
																	"name": "curr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 338,
																	"src": "8559:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 346,
																	"name": "_currentIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 88,
																	"src": "8566:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8559:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 376,
															"nodeType": "IfStatement",
															"src": "8555:869:0",
															"trueBody": {
																"id": 375,
																"nodeType": "Block",
																"src": "8581:843:0",
																"statements": [
																	{
																		"assignments": [
																			349
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 349,
																				"mutability": "mutable",
																				"name": "packed",
																				"nameLocation": "8612:6:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 375,
																				"src": "8604:14:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 348,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "8604:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 353,
																		"initialValue": {
																			"baseExpression": {
																				"id": 350,
																				"name": "_packedOwnerships",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 98,
																				"src": "8621:17:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																					"typeString": "mapping(uint256 => uint256)"
																				}
																			},
																			"id": 352,
																			"indexExpression": {
																				"id": 351,
																				"name": "curr",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 338,
																				"src": "8639:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "8621:23:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "8604:40:0"
																	},
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 358,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 356,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 354,
																					"name": "packed",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 349,
																					"src": "8710:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "&",
																				"rightExpression": {
																					"id": 355,
																					"name": "BITMASK_BURNED",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 56,
																					"src": "8719:14:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8710:23:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 357,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8737:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "8710:28:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 374,
																		"nodeType": "IfStatement",
																		"src": "8706:699:0",
																		"trueBody": {
																			"id": 373,
																			"nodeType": "Block",
																			"src": "8740:665:0",
																			"statements": [
																				{
																					"body": {
																						"id": 369,
																						"nodeType": "Block",
																						"src": "9249:93:0",
																						"statements": [
																							{
																								"expression": {
																									"id": 367,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftHandSide": {
																										"id": 362,
																										"name": "packed",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 349,
																										"src": "9280:6:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"nodeType": "Assignment",
																									"operator": "=",
																									"rightHandSide": {
																										"baseExpression": {
																											"id": 363,
																											"name": "_packedOwnerships",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 98,
																											"src": "9289:17:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																												"typeString": "mapping(uint256 => uint256)"
																											}
																										},
																										"id": 366,
																										"indexExpression": {
																											"id": 365,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"lValueRequested": false,
																											"nodeType": "UnaryOperation",
																											"operator": "--",
																											"prefix": true,
																											"src": "9307:6:0",
																											"subExpression": {
																												"id": 364,
																												"name": "curr",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 338,
																												"src": "9309:4:0",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": false,
																										"nodeType": "IndexAccess",
																										"src": "9289:25:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"src": "9280:34:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"id": 368,
																								"nodeType": "ExpressionStatement",
																								"src": "9280:34:0"
																							}
																						]
																					},
																					"condition": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 361,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 359,
																							"name": "packed",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 349,
																							"src": "9236:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "==",
																						"rightExpression": {
																							"hexValue": "30",
																							"id": 360,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "9246:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						},
																						"src": "9236:11:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"id": 370,
																					"nodeType": "WhileStatement",
																					"src": "9229:113:0"
																				},
																				{
																					"expression": {
																						"id": 371,
																						"name": "packed",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 349,
																						"src": "9375:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"functionReturnParameters": 336,
																					"id": 372,
																					"nodeType": "Return",
																					"src": "9368:13:0"
																				}
																			]
																		}
																	}
																]
															}
														}
													}
												]
											},
											{
												"errorCall": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 379,
														"name": "OwnerQueryForNonexistentToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1669,
														"src": "9452:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_error_pure$__$returns$__$",
															"typeString": "function () pure"
														}
													},
													"id": 380,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9452:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 381,
												"nodeType": "RevertStatement",
												"src": "9445:38:0"
											}
										]
									},
									"documentation": {
										"id": 330,
										"nodeType": "StructuredDocumentation",
										"src": "8288:68:0",
										"text": " Returns the packed ownership data of `tokenId`."
									},
									"id": 383,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_packedOwnershipOf",
									"nameLocation": "8371:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8398:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "8390:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 331,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8390:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8389:17:0"
									},
									"returnParameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 335,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "8429:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 334,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8429:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8428:9:0"
									},
									"scope": 1645,
									"src": "8362:1129:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 436,
										"nodeType": "Block",
										"src": "9684:264:0",
										"statements": [
											{
												"expression": {
													"id": 402,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 392,
															"name": "ownership",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "9695:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$1699_memory_ptr",
																"typeString": "struct IERC721A.TokenOwnership memory"
															}
														},
														"id": 394,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "addr",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1692,
														"src": "9695:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 399,
																		"name": "packed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 386,
																		"src": "9728:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 398,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9720:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint160_$",
																		"typeString": "type(uint160)"
																	},
																	"typeName": {
																		"id": 397,
																		"name": "uint160",
																		"nodeType": "ElementaryTypeName",
																		"src": "9720:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 400,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9720:15:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															],
															"id": 396,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9712:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 395,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9712:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 401,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9712:24:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9695:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 403,
												"nodeType": "ExpressionStatement",
												"src": "9695:41:0"
											},
											{
												"expression": {
													"id": 413,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 404,
															"name": "ownership",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "9747:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$1699_memory_ptr",
																"typeString": "struct IERC721A.TokenOwnership memory"
															}
														},
														"id": 406,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "startTimestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1694,
														"src": "9747:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 411,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 409,
																	"name": "packed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 386,
																	"src": "9781:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"id": 410,
																	"name": "BITPOS_START_TIMESTAMP",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 51,
																	"src": "9791:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9781:32:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 408,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9774:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint64_$",
																"typeString": "type(uint64)"
															},
															"typeName": {
																"id": 407,
																"name": "uint64",
																"nodeType": "ElementaryTypeName",
																"src": "9774:6:0",
																"typeDescriptions": {}
															}
														},
														"id": 412,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9774:40:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "9747:67:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 414,
												"nodeType": "ExpressionStatement",
												"src": "9747:67:0"
											},
											{
												"expression": {
													"id": 423,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 415,
															"name": "ownership",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "9825:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$1699_memory_ptr",
																"typeString": "struct IERC721A.TokenOwnership memory"
															}
														},
														"id": 417,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "burned",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1696,
														"src": "9825:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 422,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 420,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 418,
																"name": "packed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 386,
																"src": "9844:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"id": 419,
																"name": "BITMASK_BURNED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 56,
																"src": "9853:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9844:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 421,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9871:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "9844:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9825:47:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 424,
												"nodeType": "ExpressionStatement",
												"src": "9825:47:0"
											},
											{
												"expression": {
													"id": 434,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 425,
															"name": "ownership",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "9883:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$1699_memory_ptr",
																"typeString": "struct IERC721A.TokenOwnership memory"
															}
														},
														"id": 427,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "extraData",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1698,
														"src": "9883:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint24",
															"typeString": "uint24"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 432,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 430,
																	"name": "packed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 386,
																	"src": "9912:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"id": 431,
																	"name": "BITPOS_EXTRA_DATA",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 67,
																	"src": "9922:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9912:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 429,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9905:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint24_$",
																"typeString": "type(uint24)"
															},
															"typeName": {
																"id": 428,
																"name": "uint24",
																"nodeType": "ElementaryTypeName",
																"src": "9905:6:0",
																"typeDescriptions": {}
															}
														},
														"id": 433,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9905:35:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint24",
															"typeString": "uint24"
														}
													},
													"src": "9883:57:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"id": 435,
												"nodeType": "ExpressionStatement",
												"src": "9883:57:0"
											}
										]
									},
									"documentation": {
										"id": 384,
										"nodeType": "StructuredDocumentation",
										"src": "9499:80:0",
										"text": " Returns the unpacked `TokenOwnership` struct from `packed`."
									},
									"id": 437,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_unpackedOwnership",
									"nameLocation": "9594:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "packed",
												"nameLocation": "9621:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 437,
												"src": "9613:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 385,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9613:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9612:16:0"
									},
									"returnParameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "ownership",
												"nameLocation": "9673:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 437,
												"src": "9651:31:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TokenOwnership_$1699_memory_ptr",
													"typeString": "struct IERC721A.TokenOwnership"
												},
												"typeName": {
													"id": 389,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 388,
														"name": "TokenOwnership",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1699,
														"src": "9651:14:0"
													},
													"referencedDeclaration": 1699,
													"src": "9651:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$1699_storage_ptr",
														"typeString": "struct IERC721A.TokenOwnership"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9650:33:0"
									},
									"scope": 1645,
									"src": "9585:363:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 452,
										"nodeType": "Block",
										"src": "10130:70:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 447,
																"name": "_packedOwnerships",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 98,
																"src": "10167:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																	"typeString": "mapping(uint256 => uint256)"
																}
															},
															"id": 449,
															"indexExpression": {
																"id": 448,
																"name": "index",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 440,
																"src": "10185:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10167:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 446,
														"name": "_unpackedOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 437,
														"src": "10148:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_struct$_TokenOwnership_$1699_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct IERC721A.TokenOwnership memory)"
														}
													},
													"id": 450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10148:44:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$1699_memory_ptr",
														"typeString": "struct IERC721A.TokenOwnership memory"
													}
												},
												"functionReturnParameters": 445,
												"id": 451,
												"nodeType": "Return",
												"src": "10141:51:0"
											}
										]
									},
									"documentation": {
										"id": 438,
										"nodeType": "StructuredDocumentation",
										"src": "9956:77:0",
										"text": " Returns the unpacked `TokenOwnership` struct at `index`."
									},
									"id": 453,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownershipAt",
									"nameLocation": "10048:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 441,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 440,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "10069:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "10061:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 439,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10061:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10060:15:0"
									},
									"returnParameters": {
										"id": 445,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 444,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "10107:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TokenOwnership_$1699_memory_ptr",
													"typeString": "struct IERC721A.TokenOwnership"
												},
												"typeName": {
													"id": 443,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 442,
														"name": "TokenOwnership",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1699,
														"src": "10107:14:0"
													},
													"referencedDeclaration": 1699,
													"src": "10107:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$1699_storage_ptr",
														"typeString": "struct IERC721A.TokenOwnership"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10106:23:0"
									},
									"scope": 1645,
									"src": "10039:161:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 474,
										"nodeType": "Block",
										"src": "10377:132:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 463,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 459,
															"name": "_packedOwnerships",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "10392:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 461,
														"indexExpression": {
															"id": 460,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 456,
															"src": "10410:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "10392:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 462,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10420:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "10392:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 473,
												"nodeType": "IfStatement",
												"src": "10388:114:0",
												"trueBody": {
													"id": 472,
													"nodeType": "Block",
													"src": "10423:79:0",
													"statements": [
														{
															"expression": {
																"id": 470,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 464,
																		"name": "_packedOwnerships",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 98,
																		"src": "10438:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																			"typeString": "mapping(uint256 => uint256)"
																		}
																	},
																	"id": 466,
																	"indexExpression": {
																		"id": 465,
																		"name": "index",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 456,
																		"src": "10456:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "10438:24:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 468,
																			"name": "index",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 456,
																			"src": "10484:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 467,
																		"name": "_packedOwnershipOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 383,
																		"src": "10465:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) view returns (uint256)"
																		}
																	},
																	"id": 469,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10465:25:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10438:52:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 471,
															"nodeType": "ExpressionStatement",
															"src": "10438:52:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 454,
										"nodeType": "StructuredDocumentation",
										"src": "10208:99:0",
										"text": " @dev Initializes the ownership slot minted at `index` for efficiency purposes."
									},
									"id": 475,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_initializeOwnershipAt",
									"nameLocation": "10322:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 457,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 456,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "10353:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "10345:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 455,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10345:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10344:15:0"
									},
									"returnParameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10377:0:0"
									},
									"scope": 1645,
									"src": "10313:196:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 490,
										"nodeType": "Block",
										"src": "10804:73:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 486,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 478,
																	"src": "10860:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 485,
																"name": "_packedOwnershipOf",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 383,
																"src": "10841:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) view returns (uint256)"
																}
															},
															"id": 487,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10841:27:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 484,
														"name": "_unpackedOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 437,
														"src": "10822:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_struct$_TokenOwnership_$1699_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct IERC721A.TokenOwnership memory)"
														}
													},
													"id": 488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10822:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$1699_memory_ptr",
														"typeString": "struct IERC721A.TokenOwnership memory"
													}
												},
												"functionReturnParameters": 483,
												"id": 489,
												"nodeType": "Return",
												"src": "10815:54:0"
											}
										]
									},
									"documentation": {
										"id": 476,
										"nodeType": "StructuredDocumentation",
										"src": "10517:188:0",
										"text": " Gas spent here starts off proportional to the maximum mint batch size.\n It gradually moves to O(1) as tokens get transferred around in the collection over time."
									},
									"id": 491,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownershipOf",
									"nameLocation": "10720:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10741:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "10733:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 477,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10733:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10732:17:0"
									},
									"returnParameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "10781:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TokenOwnership_$1699_memory_ptr",
													"typeString": "struct IERC721A.TokenOwnership"
												},
												"typeName": {
													"id": 481,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 480,
														"name": "TokenOwnership",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1699,
														"src": "10781:14:0"
													},
													"referencedDeclaration": 1699,
													"src": "10781:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$1699_storage_ptr",
														"typeString": "struct IERC721A.TokenOwnership"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10780:23:0"
									},
									"scope": 1645,
									"src": "10711:166:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 502,
										"nodeType": "Block",
										"src": "11056:351:0",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "11076:324:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11188:36:0",
															"value": {
																"arguments": [
																	{
																		"name": "owner",
																		"nodeType": "YulIdentifier",
																		"src": "11201:5:0"
																	},
																	{
																		"name": "BITMASK_ADDRESS",
																		"nodeType": "YulIdentifier",
																		"src": "11208:15:0"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "11197:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "11197:27:0"
															},
															"variableNames": [
																{
																	"name": "owner",
																	"nodeType": "YulIdentifier",
																	"src": "11188:5:0"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11317:72:0",
															"value": {
																"arguments": [
																	{
																		"name": "owner",
																		"nodeType": "YulIdentifier",
																		"src": "11330:5:0"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "BITPOS_START_TIMESTAMP",
																						"nodeType": "YulIdentifier",
																						"src": "11344:22:0"
																					},
																					{
																						"arguments": [],
																						"functionName": {
																							"name": "timestamp",
																							"nodeType": "YulIdentifier",
																							"src": "11368:9:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "11368:11:0"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "11340:3:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11340:40:0"
																			},
																			{
																				"name": "flags",
																				"nodeType": "YulIdentifier",
																				"src": "11382:5:0"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "11337:2:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11337:51:0"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "11327:2:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "11327:62:0"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "11317:6:0"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 83,
														"isOffset": false,
														"isSlot": false,
														"src": "11208:15:0",
														"valueSize": 1
													},
													{
														"declaration": 51,
														"isOffset": false,
														"isSlot": false,
														"src": "11344:22:0",
														"valueSize": 1
													},
													{
														"declaration": 496,
														"isOffset": false,
														"isSlot": false,
														"src": "11382:5:0",
														"valueSize": 1
													},
													{
														"declaration": 494,
														"isOffset": false,
														"isSlot": false,
														"src": "11188:5:0",
														"valueSize": 1
													},
													{
														"declaration": 494,
														"isOffset": false,
														"isSlot": false,
														"src": "11201:5:0",
														"valueSize": 1
													},
													{
														"declaration": 494,
														"isOffset": false,
														"isSlot": false,
														"src": "11330:5:0",
														"valueSize": 1
													},
													{
														"declaration": 499,
														"isOffset": false,
														"isSlot": false,
														"src": "11317:6:0",
														"valueSize": 1
													}
												],
												"id": 501,
												"nodeType": "InlineAssembly",
												"src": "11067:333:0"
											}
										]
									},
									"documentation": {
										"id": 492,
										"nodeType": "StructuredDocumentation",
										"src": "10885:69:0",
										"text": " @dev Packs ownership data into a single uint256."
									},
									"id": 503,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_packOwnershipData",
									"nameLocation": "10969:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10996:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 503,
												"src": "10988:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10988:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "flags",
												"nameLocation": "11011:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 503,
												"src": "11003:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11003:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10987:30:0"
									},
									"returnParameters": {
										"id": 500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 499,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "11048:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 503,
												"src": "11040:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 498,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11040:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11039:16:0"
									},
									"scope": 1645,
									"src": "10960:447:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"baseFunctions": [
										1756
									],
									"body": {
										"id": 522,
										"nodeType": "Block",
										"src": "11550:71:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 517,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 506,
																			"src": "11603:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 516,
																		"name": "_packedOwnershipOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 383,
																		"src": "11584:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) view returns (uint256)"
																		}
																	},
																	"id": 518,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "11584:27:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 515,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11576:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint160_$",
																	"typeString": "type(uint160)"
																},
																"typeName": {
																	"id": 514,
																	"name": "uint160",
																	"nodeType": "ElementaryTypeName",
																	"src": "11576:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 519,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11576:36:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														],
														"id": 513,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "11568:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 512,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11568:7:0",
															"typeDescriptions": {}
														}
													},
													"id": 520,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11568:45:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 511,
												"id": 521,
												"nodeType": "Return",
												"src": "11561:52:0"
											}
										]
									},
									"documentation": {
										"id": 504,
										"nodeType": "StructuredDocumentation",
										"src": "11415:48:0",
										"text": " @dev See {IERC721-ownerOf}."
									},
									"functionSelector": "6352211e",
									"id": 523,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "11478:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 508,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "11523:8:0"
									},
									"parameters": {
										"id": 507,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 506,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11494:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "11486:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 505,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11486:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11485:17:0"
									},
									"returnParameters": {
										"id": 511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 510,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "11541:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 509,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11541:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11540:9:0"
									},
									"scope": 1645,
									"src": "11469:152:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1828
									],
									"body": {
										"id": 532,
										"nodeType": "Block",
										"src": "11757:31:0",
										"statements": [
											{
												"expression": {
													"id": 530,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 92,
													"src": "11775:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 529,
												"id": 531,
												"nodeType": "Return",
												"src": "11768:12:0"
											}
										]
									},
									"documentation": {
										"id": 524,
										"nodeType": "StructuredDocumentation",
										"src": "11629:53:0",
										"text": " @dev See {IERC721Metadata-name}."
									},
									"functionSelector": "06fdde03",
									"id": 533,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "11697:4:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 526,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "11724:8:0"
									},
									"parameters": {
										"id": 525,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11701:2:0"
									},
									"returnParameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 533,
												"src": "11742:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 527,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "11742:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11741:15:0"
									},
									"scope": 1645,
									"src": "11688:100:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1834
									],
									"body": {
										"id": 542,
										"nodeType": "Block",
										"src": "11928:33:0",
										"statements": [
											{
												"expression": {
													"id": 540,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 94,
													"src": "11946:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 539,
												"id": 541,
												"nodeType": "Return",
												"src": "11939:14:0"
											}
										]
									},
									"documentation": {
										"id": 534,
										"nodeType": "StructuredDocumentation",
										"src": "11796:55:0",
										"text": " @dev See {IERC721Metadata-symbol}."
									},
									"functionSelector": "95d89b41",
									"id": 543,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "11866:6:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 536,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "11895:8:0"
									},
									"parameters": {
										"id": 535,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11872:2:0"
									},
									"returnParameters": {
										"id": 539,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 538,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 543,
												"src": "11913:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 537,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "11913:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11912:15:0"
									},
									"scope": 1645,
									"src": "11857:104:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1842
									],
									"body": {
										"id": 585,
										"nodeType": "Block",
										"src": "12120:230:0",
										"statements": [
											{
												"condition": {
													"id": 555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "12135:17:0",
													"subExpression": {
														"arguments": [
															{
																"id": 553,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 546,
																"src": "12144:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 552,
															"name": "_exists",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 808,
															"src": "12136:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (uint256) view returns (bool)"
															}
														},
														"id": 554,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12136:16:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 559,
												"nodeType": "IfStatement",
												"src": "12131:59:0",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 556,
															"name": "URIQueryForNonexistentToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1684,
															"src": "12161:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 557,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12161:29:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 558,
													"nodeType": "RevertStatement",
													"src": "12154:36:0"
												}
											},
											{
												"assignments": [
													561
												],
												"declarations": [
													{
														"constant": false,
														"id": 561,
														"mutability": "mutable",
														"name": "baseURI",
														"nameLocation": "12217:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 585,
														"src": "12203:21:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 560,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "12203:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 564,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 562,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 595,
														"src": "12227:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 563,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12227:10:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12203:34:0"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 571,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 567,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 561,
																		"src": "12261:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 566,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "12255:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 565,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "12255:5:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 568,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12255:14:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 569,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "12255:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 570,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12280:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "12255:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "",
														"id": 582,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12340:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"id": 583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "12255:87:0",
													"trueExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 576,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 561,
																		"src": "12308:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 578,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 546,
																				"src": "12327:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 577,
																			"name": "_toString",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1644,
																			"src": "12317:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																				"typeString": "function (uint256) pure returns (string memory)"
																			}
																		},
																		"id": 579,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12317:18:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"expression": {
																		"id": 574,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967295,
																		"src": "12291:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 575,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "encodePacked",
																	"nodeType": "MemberAccess",
																	"src": "12291:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 580,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12291:45:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 573,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12284:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 572,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "12284:6:0",
																"typeDescriptions": {}
															}
														},
														"id": 581,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12284:53:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 551,
												"id": 584,
												"nodeType": "Return",
												"src": "12248:94:0"
											}
										]
									},
									"documentation": {
										"id": 544,
										"nodeType": "StructuredDocumentation",
										"src": "11969:57:0",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 586,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "12041:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 548,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "12087:8:0"
									},
									"parameters": {
										"id": 547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 546,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "12058:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 586,
												"src": "12050:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 545,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12050:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12049:17:0"
									},
									"returnParameters": {
										"id": 551,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 550,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 586,
												"src": "12105:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 549,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12105:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12104:15:0"
									},
									"scope": 1645,
									"src": "12032:318:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 594,
										"nodeType": "Block",
										"src": "12668:28:0",
										"statements": [
											{
												"expression": {
													"hexValue": "",
													"id": 592,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12686:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"functionReturnParameters": 591,
												"id": 593,
												"nodeType": "Return",
												"src": "12679:9:0"
											}
										]
									},
									"documentation": {
										"id": 587,
										"nodeType": "StructuredDocumentation",
										"src": "12358:238:0",
										"text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, it can be overridden in child contracts."
									},
									"id": 595,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "12611:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 588,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12619:2:0"
									},
									"returnParameters": {
										"id": 591,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 590,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 595,
												"src": "12653:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 589,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12653:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12652:15:0"
									},
									"scope": 1645,
									"src": "12602:94:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 604,
										"nodeType": "Block",
										"src": "12884:236:0",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "12970:143:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13047:55:0",
															"value": {
																"arguments": [
																	{
																		"name": "BITPOS_NEXT_INITIALIZED",
																		"nodeType": "YulIdentifier",
																		"src": "13061:23:0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "quantity",
																				"nodeType": "YulIdentifier",
																				"src": "13089:8:0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13099:1:0",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "13086:2:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13086:15:0"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "13057:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "13057:45:0"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "13047:6:0"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 59,
														"isOffset": false,
														"isSlot": false,
														"src": "13061:23:0",
														"valueSize": 1
													},
													{
														"declaration": 598,
														"isOffset": false,
														"isSlot": false,
														"src": "13089:8:0",
														"valueSize": 1
													},
													{
														"declaration": 601,
														"isOffset": false,
														"isSlot": false,
														"src": "13047:6:0",
														"valueSize": 1
													}
												],
												"id": 603,
												"nodeType": "InlineAssembly",
												"src": "12961:152:0"
											}
										]
									},
									"documentation": {
										"id": 596,
										"nodeType": "StructuredDocumentation",
										"src": "12704:88:0",
										"text": " @dev Returns the `nextInitialized` flag set if `quantity` equals 1."
									},
									"id": 605,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nextInitializedFlag",
									"nameLocation": "12807:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 598,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "12836:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 605,
												"src": "12828:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 597,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12828:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12827:18:0"
									},
									"returnParameters": {
										"id": 602,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 601,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "12876:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 605,
												"src": "12868:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 600,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12868:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12867:16:0"
									},
									"scope": 1645,
									"src": "12798:322:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"baseFunctions": [
										1796
									],
									"body": {
										"id": 649,
										"nodeType": "Block",
										"src": "13252:330:0",
										"statements": [
											{
												"assignments": [
													615
												],
												"declarations": [
													{
														"constant": false,
														"id": 615,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "13271:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 649,
														"src": "13263:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 614,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "13263:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 619,
												"initialValue": {
													"arguments": [
														{
															"id": 617,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 610,
															"src": "13287:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 616,
														"name": "ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 523,
														"src": "13279:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 618,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13279:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13263:32:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 623,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 620,
															"name": "_msgSenderERC721A",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1634,
															"src": "13312:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 621,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13312:19:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 622,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 615,
														"src": "13335:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "13312:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 635,
												"nodeType": "IfStatement",
												"src": "13308:175:0",
												"trueBody": {
													"condition": {
														"id": 629,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "13359:45:0",
														"subExpression": {
															"arguments": [
																{
																	"id": 625,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 615,
																	"src": "13377:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 626,
																		"name": "_msgSenderERC721A",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1634,
																		"src": "13384:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 627,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "13384:19:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 624,
																"name": "isApprovedForAll",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 725,
																"src": "13360:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address,address) view returns (bool)"
																}
															},
															"id": 628,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13360:44:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 634,
													"nodeType": "IfStatement",
													"src": "13355:128:0",
													"trueBody": {
														"id": 633,
														"nodeType": "Block",
														"src": "13406:77:0",
														"statements": [
															{
																"errorCall": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 630,
																		"name": "ApprovalCallerNotOwnerNorApproved",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1651,
																		"src": "13432:33:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 631,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "13432:35:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 632,
																"nodeType": "RevertStatement",
																"src": "13425:42:0"
															}
														]
													}
												}
											},
											{
												"expression": {
													"id": 641,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 636,
																"name": "_tokenApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 107,
																"src": "13495:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenApprovalRef_$23_storage_$",
																	"typeString": "mapping(uint256 => struct ERC721A.TokenApprovalRef storage ref)"
																}
															},
															"id": 638,
															"indexExpression": {
																"id": 637,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 610,
																"src": "13511:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "13495:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenApprovalRef_$23_storage",
																"typeString": "struct ERC721A.TokenApprovalRef storage ref"
															}
														},
														"id": 639,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 22,
														"src": "13495:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 640,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 608,
														"src": "13528:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "13495:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 642,
												"nodeType": "ExpressionStatement",
												"src": "13495:35:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 644,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 615,
															"src": "13555:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 645,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 608,
															"src": "13562:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 646,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 610,
															"src": "13566:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 643,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1731,
														"src": "13546:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 647,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13546:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 648,
												"nodeType": "EmitStatement",
												"src": "13541:33:0"
											}
										]
									},
									"documentation": {
										"id": 606,
										"nodeType": "StructuredDocumentation",
										"src": "13128:48:0",
										"text": " @dev See {IERC721-approve}."
									},
									"functionSelector": "095ea7b3",
									"id": 650,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "13191:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 612,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "13243:8:0"
									},
									"parameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 608,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13207:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "13199:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 607,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13199:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 610,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13219:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "13211:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 609,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13211:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13198:29:0"
									},
									"returnParameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13252:0:0"
									},
									"scope": 1645,
									"src": "13182:400:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1812
									],
									"body": {
										"id": 672,
										"nodeType": "Block",
										"src": "13733:133:0",
										"statements": [
											{
												"condition": {
													"id": 662,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "13748:17:0",
													"subExpression": {
														"arguments": [
															{
																"id": 660,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 653,
																"src": "13757:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 659,
															"name": "_exists",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 808,
															"src": "13749:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (uint256) view returns (bool)"
															}
														},
														"id": 661,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13749:16:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 666,
												"nodeType": "IfStatement",
												"src": "13744:64:0",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 663,
															"name": "ApprovalQueryForNonexistentToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1654,
															"src": "13774:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 664,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13774:34:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 665,
													"nodeType": "RevertStatement",
													"src": "13767:41:0"
												}
											},
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 667,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 107,
															"src": "13828:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenApprovalRef_$23_storage_$",
																"typeString": "mapping(uint256 => struct ERC721A.TokenApprovalRef storage ref)"
															}
														},
														"id": 669,
														"indexExpression": {
															"id": 668,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 653,
															"src": "13844:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "13828:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenApprovalRef_$23_storage",
															"typeString": "struct ERC721A.TokenApprovalRef storage ref"
														}
													},
													"id": 670,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 22,
													"src": "13828:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 658,
												"id": 671,
												"nodeType": "Return",
												"src": "13821:37:0"
											}
										]
									},
									"documentation": {
										"id": 651,
										"nodeType": "StructuredDocumentation",
										"src": "13590:52:0",
										"text": " @dev See {IERC721-getApproved}."
									},
									"functionSelector": "081812fc",
									"id": 673,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "13657:11:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 655,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "13706:8:0"
									},
									"parameters": {
										"id": 654,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 653,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13677:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 673,
												"src": "13669:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 652,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13669:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13668:17:0"
									},
									"returnParameters": {
										"id": 658,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 657,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 673,
												"src": "13724:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 656,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13724:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13723:9:0"
									},
									"scope": 1645,
									"src": "13648:218:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1804
									],
									"body": {
										"id": 706,
										"nodeType": "Block",
										"src": "14022:224:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 685,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 682,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 676,
														"src": "14037:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 683,
															"name": "_msgSenderERC721A",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1634,
															"src": "14049:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 684,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14049:19:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "14037:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 689,
												"nodeType": "IfStatement",
												"src": "14033:61:0",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 686,
															"name": "ApproveToCaller",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1657,
															"src": "14077:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 687,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14077:17:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 688,
													"nodeType": "RevertStatement",
													"src": "14070:24:0"
												}
											},
											{
												"expression": {
													"id": 697,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 690,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 113,
																"src": "14107:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 694,
															"indexExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 691,
																	"name": "_msgSenderERC721A",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1634,
																	"src": "14126:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 692,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14126:19:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "14107:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 695,
														"indexExpression": {
															"id": 693,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 676,
															"src": "14147:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "14107:49:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 696,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 678,
														"src": "14159:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "14107:60:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 698,
												"nodeType": "ExpressionStatement",
												"src": "14107:60:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 700,
																"name": "_msgSenderERC721A",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1634,
																"src": "14198:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 701,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14198:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 702,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 676,
															"src": "14219:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 703,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 678,
															"src": "14229:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 699,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1740,
														"src": "14183:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 704,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14183:55:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 705,
												"nodeType": "EmitStatement",
												"src": "14178:60:0"
											}
										]
									},
									"documentation": {
										"id": 674,
										"nodeType": "StructuredDocumentation",
										"src": "13874:58:0",
										"text": " @dev See {IERC721-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 707,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "13947:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 680,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "14013:8:0"
									},
									"parameters": {
										"id": 679,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "13973:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "13965:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 675,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13965:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 678,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "13988:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "13983:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 677,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13983:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13964:33:0"
									},
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14022:0:0"
									},
									"scope": 1645,
									"src": "13938:308:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1822
									],
									"body": {
										"id": 724,
										"nodeType": "Block",
										"src": "14420:61:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 718,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 113,
															"src": "14438:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 720,
														"indexExpression": {
															"id": 719,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 710,
															"src": "14457:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "14438:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 722,
													"indexExpression": {
														"id": 721,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 712,
														"src": "14464:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "14438:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 717,
												"id": 723,
												"nodeType": "Return",
												"src": "14431:42:0"
											}
										]
									},
									"documentation": {
										"id": 708,
										"nodeType": "StructuredDocumentation",
										"src": "14254:57:0",
										"text": " @dev See {IERC721-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 725,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "14326:16:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 714,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "14396:8:0"
									},
									"parameters": {
										"id": 713,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 710,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "14351:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 725,
												"src": "14343:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 709,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14343:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 712,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "14366:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 725,
												"src": "14358:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 711,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14358:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14342:33:0"
									},
									"returnParameters": {
										"id": 717,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 716,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 725,
												"src": "14414:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 715,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14414:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14413:6:0"
									},
									"scope": 1645,
									"src": "14317:164:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1778
									],
									"body": {
										"id": 743,
										"nodeType": "Block",
										"src": "14679:58:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 737,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 728,
															"src": "14707:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 738,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 730,
															"src": "14713:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 739,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 732,
															"src": "14717:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 740,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14726:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 736,
														"name": "safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															744,
															782
														],
														"referencedDeclaration": 782,
														"src": "14690:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 741,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14690:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 742,
												"nodeType": "ExpressionStatement",
												"src": "14690:39:0"
											}
										]
									},
									"documentation": {
										"id": 726,
										"nodeType": "StructuredDocumentation",
										"src": "14489:57:0",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "42842e0e",
									"id": 744,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "14561:16:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 734,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "14670:8:0"
									},
									"parameters": {
										"id": 733,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 728,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "14596:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "14588:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 727,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14588:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 730,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14619:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "14611:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 729,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14611:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 732,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14640:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "14632:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 731,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14632:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14577:77:0"
									},
									"returnParameters": {
										"id": 735,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14679:0:0"
									},
									"scope": 1645,
									"src": "14552:185:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1768
									],
									"body": {
										"id": 781,
										"nodeType": "Block",
										"src": "14964:243:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 758,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 747,
															"src": "14988:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 759,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 749,
															"src": "14994:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 760,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 751,
															"src": "14998:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 757,
														"name": "transferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1289,
														"src": "14975:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 761,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14975:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 762,
												"nodeType": "ExpressionStatement",
												"src": "14975:31:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 767,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 763,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 749,
																"src": "15021:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 764,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "15021:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 765,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "15021:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 766,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15039:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "15021:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 780,
												"nodeType": "IfStatement",
												"src": "15017:183:0",
												"trueBody": {
													"condition": {
														"id": 774,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "15059:57:0",
														"subExpression": {
															"arguments": [
																{
																	"id": 769,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 747,
																	"src": "15091:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 770,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 749,
																	"src": "15097:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 771,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 751,
																	"src": "15101:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 772,
																	"name": "_data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 753,
																	"src": "15110:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 768,
																"name": "_checkContractOnERC721Received",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1508,
																"src": "15060:30:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) returns (bool)"
																}
															},
															"id": 773,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15060:56:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 779,
													"nodeType": "IfStatement",
													"src": "15055:145:0",
													"trueBody": {
														"id": 778,
														"nodeType": "Block",
														"src": "15118:82:0",
														"statements": [
															{
																"errorCall": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 775,
																		"name": "TransferToNonERC721ReceiverImplementer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1678,
																		"src": "15144:38:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 776,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "15144:40:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 777,
																"nodeType": "RevertStatement",
																"src": "15137:47:0"
															}
														]
													}
												}
											}
										]
									},
									"documentation": {
										"id": 745,
										"nodeType": "StructuredDocumentation",
										"src": "14745:57:0",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "b88d4fde",
									"id": 782,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "14817:16:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 755,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "14955:8:0"
									},
									"parameters": {
										"id": 754,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 747,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "14852:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 782,
												"src": "14844:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 746,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14844:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 749,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14875:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 782,
												"src": "14867:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 748,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14867:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 751,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14896:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 782,
												"src": "14888:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 750,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14888:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "14927:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 782,
												"src": "14914:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 752,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14914:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14833:106:0"
									},
									"returnParameters": {
										"id": 756,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14964:0:0"
									},
									"scope": 1645,
									"src": "14808:399:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 807,
										"nodeType": "Block",
										"src": "15533:210:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 805,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 797,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 793,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 790,
																	"name": "_startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 143,
																	"src": "15564:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 791,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15564:15:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 792,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 785,
																"src": "15583:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "15564:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 796,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 794,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 785,
																"src": "15607:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 795,
																"name": "_currentIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 88,
																"src": "15617:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "15607:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "15564:66:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 804,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 802,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 798,
																	"name": "_packedOwnerships",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 98,
																	"src": "15668:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 800,
																"indexExpression": {
																	"id": 799,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 785,
																	"src": "15686:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "15668:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"id": 801,
																"name": "BITMASK_BURNED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 56,
																"src": "15697:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "15668:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 803,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15715:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "15668:48:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "15564:152:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 789,
												"id": 806,
												"nodeType": "Return",
												"src": "15544:172:0"
											}
										]
									},
									"documentation": {
										"id": 783,
										"nodeType": "StructuredDocumentation",
										"src": "15215:241:0",
										"text": " @dev Returns whether `tokenId` exists.\n Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n Tokens start existing when they are minted (`_mint`),"
									},
									"id": 808,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_exists",
									"nameLocation": "15471:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 786,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 785,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "15487:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 808,
												"src": "15479:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 784,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15479:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15478:17:0"
									},
									"returnParameters": {
										"id": 789,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 788,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 808,
												"src": "15527:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 787,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15527:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15526:6:0"
									},
									"scope": 1645,
									"src": "15462:281:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 822,
										"nodeType": "Block",
										"src": "15893:46:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 817,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 811,
															"src": "15914:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 818,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 813,
															"src": "15918:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 819,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15928:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 816,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															823,
															885
														],
														"referencedDeclaration": 885,
														"src": "15904:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 820,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15904:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 821,
												"nodeType": "ExpressionStatement",
												"src": "15904:27:0"
											}
										]
									},
									"documentation": {
										"id": 809,
										"nodeType": "StructuredDocumentation",
										"src": "15751:70:0",
										"text": " @dev Equivalent to `_safeMint(to, quantity, '')`."
									},
									"id": 823,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "15836:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 814,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 811,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15854:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 823,
												"src": "15846:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 810,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15846:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 813,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "15866:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 823,
												"src": "15858:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 812,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15858:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15845:30:0"
									},
									"returnParameters": {
										"id": 815,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15893:0:0"
									},
									"scope": 1645,
									"src": "15827:112:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 884,
										"nodeType": "Block",
										"src": "16475:569:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 834,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 826,
															"src": "16492:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 835,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 828,
															"src": "16496:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 833,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 999,
														"src": "16486:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 836,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16486:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 837,
												"nodeType": "ExpressionStatement",
												"src": "16486:19:0"
											},
											{
												"id": 883,
												"nodeType": "UncheckedBlock",
												"src": "16518:519:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 842,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"expression": {
																		"id": 838,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 826,
																		"src": "16547:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"id": 839,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "code",
																	"nodeType": "MemberAccess",
																	"src": "16547:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 840,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "16547:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 841,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16565:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "16547:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 882,
														"nodeType": "IfStatement",
														"src": "16543:483:0",
														"trueBody": {
															"id": 881,
															"nodeType": "Block",
															"src": "16568:458:0",
															"statements": [
																{
																	"assignments": [
																		844
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 844,
																			"mutability": "mutable",
																			"name": "end",
																			"nameLocation": "16595:3:0",
																			"nodeType": "VariableDeclaration",
																			"scope": 881,
																			"src": "16587:11:0",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 843,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "16587:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 846,
																	"initialValue": {
																		"id": 845,
																		"name": "_currentIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 88,
																		"src": "16601:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "16587:27:0"
																},
																{
																	"assignments": [
																		848
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 848,
																			"mutability": "mutable",
																			"name": "index",
																			"nameLocation": "16641:5:0",
																			"nodeType": "VariableDeclaration",
																			"scope": 881,
																			"src": "16633:13:0",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 847,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "16633:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 852,
																	"initialValue": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 851,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 849,
																			"name": "end",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 844,
																			"src": "16649:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 850,
																			"name": "quantity",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 828,
																			"src": "16655:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "16649:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "16633:30:0"
																},
																{
																	"body": {
																		"id": 869,
																		"nodeType": "Block",
																		"src": "16685:209:0",
																		"statements": [
																			{
																				"condition": {
																					"id": 863,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "UnaryOperation",
																					"operator": "!",
																					"prefix": true,
																					"src": "16712:63:0",
																					"subExpression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"hexValue": "30",
																										"id": 856,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "number",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "16752:1:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_rational_0_by_1",
																											"typeString": "int_const 0"
																										},
																										"value": "0"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_rational_0_by_1",
																											"typeString": "int_const 0"
																										}
																									],
																									"id": 855,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "16744:7:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_address_$",
																										"typeString": "type(address)"
																									},
																									"typeName": {
																										"id": 854,
																										"name": "address",
																										"nodeType": "ElementaryTypeName",
																										"src": "16744:7:0",
																										"typeDescriptions": {}
																									}
																								},
																								"id": 857,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "16744:10:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"id": 858,
																								"name": "to",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 826,
																								"src": "16756:2:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"id": 860,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "UnaryOperation",
																								"operator": "++",
																								"prefix": false,
																								"src": "16760:7:0",
																								"subExpression": {
																									"id": 859,
																									"name": "index",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 848,
																									"src": "16760:5:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"id": 861,
																								"name": "_data",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 830,
																								"src": "16769:5:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes_memory_ptr",
																									"typeString": "bytes memory"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_bytes_memory_ptr",
																									"typeString": "bytes memory"
																								}
																							],
																							"id": 853,
																							"name": "_checkContractOnERC721Received",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1508,
																							"src": "16713:30:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																								"typeString": "function (address,address,uint256,bytes memory) returns (bool)"
																							}
																						},
																						"id": 862,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "16713:62:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 868,
																				"nodeType": "IfStatement",
																				"src": "16708:167:0",
																				"trueBody": {
																					"id": 867,
																					"nodeType": "Block",
																					"src": "16777:98:0",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [],
																								"expression": {
																									"argumentTypes": [],
																									"id": 864,
																									"name": "TransferToNonERC721ReceiverImplementer",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1678,
																									"src": "16811:38:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$__$returns$__$",
																										"typeString": "function () pure"
																									}
																								},
																								"id": 865,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "16811:40:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 866,
																							"nodeType": "RevertStatement",
																							"src": "16804:47:0"
																						}
																					]
																				}
																			}
																		]
																	},
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 872,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 870,
																			"name": "index",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 848,
																			"src": "16902:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"id": 871,
																			"name": "end",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 844,
																			"src": "16910:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "16902:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 873,
																	"nodeType": "DoWhileStatement",
																	"src": "16682:233:0"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 876,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 874,
																			"name": "_currentIndex",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 88,
																			"src": "16980:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 875,
																			"name": "end",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 844,
																			"src": "16997:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "16980:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 880,
																	"nodeType": "IfStatement",
																	"src": "16976:34:0",
																	"trueBody": {
																		"expression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 877,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "17002:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 878,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "17002:8:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 879,
																		"nodeType": "ExpressionStatement",
																		"src": "17002:8:0"
																	}
																}
															]
														}
													}
												]
											}
										]
									},
									"documentation": {
										"id": 824,
										"nodeType": "StructuredDocumentation",
										"src": "15947:402:0",
										"text": " @dev Safely mints `quantity` tokens and transfers them to `to`.\n Requirements:\n - If `to` refers to a smart contract, it must implement\n   {IERC721Receiver-onERC721Received}, which is called for each safe transfer.\n - `quantity` must be greater than 0.\n See {_mint}.\n Emits a {Transfer} event for each mint."
									},
									"id": 885,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "16364:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 831,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 826,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16392:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "16384:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 825,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16384:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 828,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "16413:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "16405:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 827,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16405:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 830,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "16445:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "16432:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 829,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16432:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16373:84:0"
									},
									"returnParameters": {
										"id": 832,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16475:0:0"
									},
									"scope": 1645,
									"src": "16355:689:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 998,
										"nodeType": "Block",
										"src": "17379:1475:0",
										"statements": [
											{
												"assignments": [
													894
												],
												"declarations": [
													{
														"constant": false,
														"id": 894,
														"mutability": "mutable",
														"name": "startTokenId",
														"nameLocation": "17398:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 998,
														"src": "17390:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 893,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "17390:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 896,
												"initialValue": {
													"id": 895,
													"name": "_currentIndex",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 88,
													"src": "17413:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17390:36:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 902,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 897,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 888,
														"src": "17441:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 900,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "17455:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 899,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "17447:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 898,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "17447:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 901,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17447:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "17441:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 906,
												"nodeType": "IfStatement",
												"src": "17437:48:0",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 903,
															"name": "MintToZeroAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1663,
															"src": "17466:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 904,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17466:19:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 905,
													"nodeType": "RevertStatement",
													"src": "17459:26:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 909,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 907,
														"name": "quantity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 890,
														"src": "17500:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 908,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17512:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "17500:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 913,
												"nodeType": "IfStatement",
												"src": "17496:44:0",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 910,
															"name": "MintZeroQuantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1666,
															"src": "17522:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 911,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17522:18:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 912,
													"nodeType": "RevertStatement",
													"src": "17515:25:0"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 917,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "17583:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 916,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "17575:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 915,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "17575:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 918,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17575:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 919,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 888,
															"src": "17587:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 920,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 894,
															"src": "17591:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 921,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 890,
															"src": "17605:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 914,
														"name": "_beforeTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1611,
														"src": "17553:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 922,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17553:61:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 923,
												"nodeType": "ExpressionStatement",
												"src": "17553:61:0"
											},
											{
												"id": 987,
												"nodeType": "UncheckedBlock",
												"src": "17802:974:0",
												"statements": [
													{
														"expression": {
															"id": 936,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 924,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 102,
																	"src": "18028:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 926,
																"indexExpression": {
																	"id": 925,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 888,
																	"src": "18047:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "18028:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 935,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 927,
																	"name": "quantity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 890,
																	"src": "18054:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 933,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 930,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "31",
																							"id": 928,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "18067:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<<",
																						"rightExpression": {
																							"id": 929,
																							"name": "BITPOS_NUMBER_MINTED",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 34,
																							"src": "18072:20:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "18067:25:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 931,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "18066:27:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "|",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 932,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "18096:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "18066:31:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 934,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "18065:33:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "18054:44:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "18028:70:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 937,
														"nodeType": "ExpressionStatement",
														"src": "18028:70:0"
													},
													{
														"expression": {
															"id": 956,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 938,
																	"name": "_packedOwnerships",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 98,
																	"src": "18341:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 940,
																"indexExpression": {
																	"id": 939,
																	"name": "startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 894,
																	"src": "18359:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "18341:31:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 942,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 888,
																		"src": "18412:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 954,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 944,
																					"name": "quantity",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 890,
																					"src": "18454:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 943,
																				"name": "_nextInitializedFlag",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 605,
																				"src": "18433:20:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (uint256) pure returns (uint256)"
																				}
																			},
																			"id": 945,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "18433:30:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "|",
																		"rightExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"hexValue": "30",
																							"id": 949,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "18489:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							}
																						],
																						"id": 948,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "18481:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 947,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "18481:7:0",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 950,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "18481:10:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 951,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 888,
																					"src": "18493:2:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"hexValue": "30",
																					"id": 952,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "18497:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 946,
																				"name": "_nextExtraData",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1585,
																				"src": "18466:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (address,address,uint256) view returns (uint256)"
																				}
																			},
																			"id": 953,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "18466:33:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "18433:66:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 941,
																	"name": "_packOwnershipData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 503,
																	"src": "18375:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (address,uint256) view returns (uint256)"
																	}
																},
																"id": 955,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18375:139:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "18341:173:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 957,
														"nodeType": "ExpressionStatement",
														"src": "18341:173:0"
													},
													{
														"assignments": [
															959
														],
														"declarations": [
															{
																"constant": false,
																"id": 959,
																"mutability": "mutable",
																"name": "tokenId",
																"nameLocation": "18539:7:0",
																"nodeType": "VariableDeclaration",
																"scope": 987,
																"src": "18531:15:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 958,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "18531:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 961,
														"initialValue": {
															"id": 960,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 894,
															"src": "18549:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "18531:30:0"
													},
													{
														"assignments": [
															963
														],
														"declarations": [
															{
																"constant": false,
																"id": 963,
																"mutability": "mutable",
																"name": "end",
																"nameLocation": "18584:3:0",
																"nodeType": "VariableDeclaration",
																"scope": 987,
																"src": "18576:11:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 962,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "18576:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 967,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 966,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 964,
																"name": "startTokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 894,
																"src": "18590:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 965,
																"name": "quantity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 890,
																"src": "18605:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "18590:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "18576:37:0"
													},
													{
														"body": {
															"id": 978,
															"nodeType": "Block",
															"src": "18631:75:0",
															"statements": [
																{
																	"eventCall": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"hexValue": "30",
																						"id": 971,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "18672:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						}
																					],
																					"id": 970,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "18664:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 969,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "18664:7:0",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 972,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "18664:10:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 973,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 888,
																				"src": "18676:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 975,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "UnaryOperation",
																				"operator": "++",
																				"prefix": false,
																				"src": "18680:9:0",
																				"subExpression": {
																					"id": 974,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 959,
																					"src": "18680:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 968,
																			"name": "Transfer",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1722,
																			"src": "18655:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																				"typeString": "function (address,address,uint256)"
																			}
																		},
																		"id": 976,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "18655:35:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 977,
																	"nodeType": "EmitStatement",
																	"src": "18650:40:0"
																}
															]
														},
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 981,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 979,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 959,
																"src": "18714:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 980,
																"name": "end",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 963,
																"src": "18724:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "18714:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 982,
														"nodeType": "DoWhileStatement",
														"src": "18628:101:0"
													},
													{
														"expression": {
															"id": 985,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 983,
																"name": "_currentIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 88,
																"src": "18745:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"id": 984,
																"name": "end",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 963,
																"src": "18761:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "18745:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 986,
														"nodeType": "ExpressionStatement",
														"src": "18745:19:0"
													}
												]
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 991,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18815:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 990,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "18807:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 989,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "18807:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 992,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18807:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 993,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 888,
															"src": "18819:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 994,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 894,
															"src": "18823:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 995,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 890,
															"src": "18837:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 988,
														"name": "_afterTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1624,
														"src": "18786:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 996,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18786:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 997,
												"nodeType": "ExpressionStatement",
												"src": "18786:60:0"
											}
										]
									},
									"documentation": {
										"id": 886,
										"nodeType": "StructuredDocumentation",
										"src": "17052:259:0",
										"text": " @dev Mints `quantity` tokens and transfers them to `to`.\n Requirements:\n - `to` cannot be the zero address.\n - `quantity` must be greater than 0.\n Emits a {Transfer} event for each mint."
									},
									"id": 999,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "17326:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 891,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "17340:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 999,
												"src": "17332:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 887,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17332:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 890,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "17352:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 999,
												"src": "17344:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 889,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17344:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17331:30:0"
									},
									"returnParameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17379:0:0"
									},
									"scope": 1645,
									"src": "17317:1537:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1110,
										"nodeType": "Block",
										"src": "19786:1404:0",
										"statements": [
											{
												"assignments": [
													1008
												],
												"declarations": [
													{
														"constant": false,
														"id": 1008,
														"mutability": "mutable",
														"name": "startTokenId",
														"nameLocation": "19805:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 1110,
														"src": "19797:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1007,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "19797:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1010,
												"initialValue": {
													"id": 1009,
													"name": "_currentIndex",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 88,
													"src": "19820:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "19797:36:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1016,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1011,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1002,
														"src": "19848:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1014,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "19862:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1013,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "19854:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1012,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "19854:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 1015,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19854:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "19848:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1020,
												"nodeType": "IfStatement",
												"src": "19844:48:0",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1017,
															"name": "MintToZeroAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1663,
															"src": "19873:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1018,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19873:19:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1019,
													"nodeType": "RevertStatement",
													"src": "19866:26:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1023,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1021,
														"name": "quantity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1004,
														"src": "19907:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1022,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "19919:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "19907:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1027,
												"nodeType": "IfStatement",
												"src": "19903:44:0",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1024,
															"name": "MintZeroQuantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1666,
															"src": "19929:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1025,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19929:18:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1026,
													"nodeType": "RevertStatement",
													"src": "19922:25:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1030,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1028,
														"name": "quantity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1004,
														"src": "19962:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1029,
														"name": "MAX_MINT_ERC2309_QUANTITY_LIMIT",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 86,
														"src": "19973:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "19962:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1034,
												"nodeType": "IfStatement",
												"src": "19958:88:0",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1031,
															"name": "MintERC2309QuantityExceedsLimit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1687,
															"src": "20013:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1032,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20013:33:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1033,
													"nodeType": "RevertStatement",
													"src": "20006:40:0"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1038,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20089:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1037,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "20081:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1036,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "20081:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1039,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20081:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1040,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1002,
															"src": "20093:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1041,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1008,
															"src": "20097:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1042,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1004,
															"src": "20111:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1035,
														"name": "_beforeTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1611,
														"src": "20059:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1043,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20059:61:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1044,
												"nodeType": "ExpressionStatement",
												"src": "20059:61:0"
											},
											{
												"id": 1099,
												"nodeType": "UncheckedBlock",
												"src": "20232:880:0",
												"statements": [
													{
														"expression": {
															"id": 1057,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1045,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 102,
																	"src": "20458:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1047,
																"indexExpression": {
																	"id": 1046,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1002,
																	"src": "20477:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "20458:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1056,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1048,
																	"name": "quantity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1004,
																	"src": "20484:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1054,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1051,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "31",
																							"id": 1049,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "20497:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<<",
																						"rightExpression": {
																							"id": 1050,
																							"name": "BITPOS_NUMBER_MINTED",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 34,
																							"src": "20502:20:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "20497:25:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 1052,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "20496:27:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "|",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 1053,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "20526:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "20496:31:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1055,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "20495:33:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "20484:44:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "20458:70:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1058,
														"nodeType": "ExpressionStatement",
														"src": "20458:70:0"
													},
													{
														"expression": {
															"id": 1077,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1059,
																	"name": "_packedOwnerships",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 98,
																	"src": "20771:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 1061,
																"indexExpression": {
																	"id": 1060,
																	"name": "startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1008,
																	"src": "20789:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "20771:31:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 1063,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1002,
																		"src": "20842:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1075,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 1065,
																					"name": "quantity",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1004,
																					"src": "20884:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1064,
																				"name": "_nextInitializedFlag",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 605,
																				"src": "20863:20:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1066,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "20863:30:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "|",
																		"rightExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"hexValue": "30",
																							"id": 1070,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "20919:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							}
																						],
																						"id": 1069,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "20911:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 1068,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "20911:7:0",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1071,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "20911:10:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1072,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1002,
																					"src": "20923:2:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"hexValue": "30",
																					"id": 1073,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "20927:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 1067,
																				"name": "_nextExtraData",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1585,
																				"src": "20896:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (address,address,uint256) view returns (uint256)"
																				}
																			},
																			"id": 1074,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "20896:33:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "20863:66:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1062,
																	"name": "_packOwnershipData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 503,
																	"src": "20805:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (address,uint256) view returns (uint256)"
																	}
																},
																"id": 1076,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20805:139:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "20771:173:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1078,
														"nodeType": "ExpressionStatement",
														"src": "20771:173:0"
													},
													{
														"eventCall": {
															"arguments": [
																{
																	"id": 1080,
																	"name": "startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1008,
																	"src": "20986:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1085,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1083,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1081,
																			"name": "startTokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1008,
																			"src": "21000:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"id": 1082,
																			"name": "quantity",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1004,
																			"src": "21015:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "21000:23:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1084,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "21026:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "21000:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1088,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "21037:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1087,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "21029:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1086,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "21029:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1089,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "21029:10:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1090,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1002,
																	"src": "21041:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1079,
																"name": "ConsecutiveTransfer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1853,
																"src": "20966:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_address_$_t_address_$returns$__$",
																	"typeString": "function (uint256,uint256,address,address)"
																}
															},
															"id": 1091,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20966:78:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1092,
														"nodeType": "EmitStatement",
														"src": "20961:83:0"
													},
													{
														"expression": {
															"id": 1097,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1093,
																"name": "_currentIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 88,
																"src": "21061:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1096,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1094,
																	"name": "startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1008,
																	"src": "21077:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 1095,
																	"name": "quantity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1004,
																	"src": "21092:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "21077:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "21061:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1098,
														"nodeType": "ExpressionStatement",
														"src": "21061:39:0"
													}
												]
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1103,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "21151:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1102,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "21143:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1101,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "21143:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1104,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21143:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1105,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1002,
															"src": "21155:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1106,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1008,
															"src": "21159:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1107,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1004,
															"src": "21173:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1100,
														"name": "_afterTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1624,
														"src": "21122:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21122:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1109,
												"nodeType": "ExpressionStatement",
												"src": "21122:60:0"
											}
										]
									},
									"documentation": {
										"id": 1000,
										"nodeType": "StructuredDocumentation",
										"src": "18862:849:0",
										"text": " @dev Mints `quantity` tokens and transfers them to `to`.\n This function is intended for efficient minting only during contract creation.\n It emits only one {ConsecutiveTransfer} as defined in\n [ERC2309](https://eips.ethereum.org/EIPS/eip-2309),\n instead of a sequence of {Transfer} event(s).\n Calling this function outside of contract creation WILL make your contract\n non-compliant with the ERC721 standard.\n For full ERC721 compliance, substituting ERC721 {Transfer} event(s) with the ERC2309\n {ConsecutiveTransfer} event is only permissible during contract creation.\n Requirements:\n - `to` cannot be the zero address.\n - `quantity` must be greater than 0.\n Emits a {ConsecutiveTransfer} event."
									},
									"id": 1111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mintERC2309",
									"nameLocation": "19726:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1005,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1002,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "19747:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1111,
												"src": "19739:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1001,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19739:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1004,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "19759:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1111,
												"src": "19751:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1003,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19751:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19738:30:0"
									},
									"returnParameters": {
										"id": 1006,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19786:0:0"
									},
									"scope": 1645,
									"src": "19717:1473:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1129,
										"nodeType": "Block",
										"src": "21457:318:0",
										"statements": [
											{
												"assignments": [
													1123
												],
												"declarations": [
													{
														"constant": false,
														"id": 1123,
														"mutability": "mutable",
														"name": "tokenApproval",
														"nameLocation": "21493:13:0",
														"nodeType": "VariableDeclaration",
														"scope": 1129,
														"src": "21468:38:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenApprovalRef_$23_storage_ptr",
															"typeString": "struct ERC721A.TokenApprovalRef"
														},
														"typeName": {
															"id": 1122,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1121,
																"name": "TokenApprovalRef",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 23,
																"src": "21468:16:0"
															},
															"referencedDeclaration": 23,
															"src": "21468:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenApprovalRef_$23_storage_ptr",
																"typeString": "struct ERC721A.TokenApprovalRef"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1127,
												"initialValue": {
													"baseExpression": {
														"id": 1124,
														"name": "_tokenApprovals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 107,
														"src": "21509:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenApprovalRef_$23_storage_$",
															"typeString": "mapping(uint256 => struct ERC721A.TokenApprovalRef storage ref)"
														}
													},
													"id": 1126,
													"indexExpression": {
														"id": 1125,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1114,
														"src": "21525:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "21509:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenApprovalRef_$23_storage",
														"typeString": "struct ERC721A.TokenApprovalRef storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "21468:65:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "21642:126:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21657:41:0",
															"value": {
																"name": "tokenApproval.slot",
																"nodeType": "YulIdentifier",
																"src": "21680:18:0"
															},
															"variableNames": [
																{
																	"name": "approvedAddressSlot",
																	"nodeType": "YulIdentifier",
																	"src": "21657:19:0"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "21712:45:0",
															"value": {
																"arguments": [
																	{
																		"name": "approvedAddressSlot",
																		"nodeType": "YulIdentifier",
																		"src": "21737:19:0"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nodeType": "YulIdentifier",
																	"src": "21731:5:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "21731:26:0"
															},
															"variableNames": [
																{
																	"name": "approvedAddress",
																	"nodeType": "YulIdentifier",
																	"src": "21712:15:0"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1119,
														"isOffset": false,
														"isSlot": false,
														"src": "21712:15:0",
														"valueSize": 1
													},
													{
														"declaration": 1117,
														"isOffset": false,
														"isSlot": false,
														"src": "21657:19:0",
														"valueSize": 1
													},
													{
														"declaration": 1117,
														"isOffset": false,
														"isSlot": false,
														"src": "21737:19:0",
														"valueSize": 1
													},
													{
														"declaration": 1123,
														"isOffset": false,
														"isSlot": true,
														"src": "21680:18:0",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 1128,
												"nodeType": "InlineAssembly",
												"src": "21633:135:0"
											}
										]
									},
									"documentation": {
										"id": 1112,
										"nodeType": "StructuredDocumentation",
										"src": "21198:99:0",
										"text": " @dev Returns the storage slot and value for the approved address of `tokenId`."
									},
									"id": 1130,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getApprovedAddress",
									"nameLocation": "21312:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1114,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "21340:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1130,
												"src": "21332:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1113,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21332:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21331:17:0"
									},
									"returnParameters": {
										"id": 1120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1117,
												"mutability": "mutable",
												"name": "approvedAddressSlot",
												"nameLocation": "21406:19:0",
												"nodeType": "VariableDeclaration",
												"scope": 1130,
												"src": "21398:27:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21398:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1119,
												"mutability": "mutable",
												"name": "approvedAddress",
												"nameLocation": "21435:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 1130,
												"src": "21427:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1118,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21427:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21397:54:0"
									},
									"scope": 1645,
									"src": "21303:472:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1143,
										"nodeType": "Block",
										"src": "22043:490:0",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "22063:463:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22174:34:0",
															"value": {
																"arguments": [
																	{
																		"name": "from",
																		"nodeType": "YulIdentifier",
																		"src": "22186:4:0"
																	},
																	{
																		"name": "BITMASK_ADDRESS",
																		"nodeType": "YulIdentifier",
																		"src": "22192:15:0"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "22182:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "22182:26:0"
															},
															"variableNames": [
																{
																	"name": "from",
																	"nodeType": "YulIdentifier",
																	"src": "22174:4:0"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "22323:44:0",
															"value": {
																"arguments": [
																	{
																		"name": "msgSender",
																		"nodeType": "YulIdentifier",
																		"src": "22340:9:0"
																	},
																	{
																		"name": "BITMASK_ADDRESS",
																		"nodeType": "YulIdentifier",
																		"src": "22351:15:0"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "22336:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "22336:31:0"
															},
															"variableNames": [
																{
																	"name": "msgSender",
																	"nodeType": "YulIdentifier",
																	"src": "22323:9:0"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "22450:65:0",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "msgSender",
																				"nodeType": "YulIdentifier",
																				"src": "22466:9:0"
																			},
																			{
																				"name": "from",
																				"nodeType": "YulIdentifier",
																				"src": "22477:4:0"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "22463:2:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22463:19:0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "msgSender",
																				"nodeType": "YulIdentifier",
																				"src": "22487:9:0"
																			},
																			{
																				"name": "approvedAddress",
																				"nodeType": "YulIdentifier",
																				"src": "22498:15:0"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "22484:2:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22484:30:0"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "22460:2:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "22460:55:0"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "22450:6:0"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 83,
														"isOffset": false,
														"isSlot": false,
														"src": "22192:15:0",
														"valueSize": 1
													},
													{
														"declaration": 83,
														"isOffset": false,
														"isSlot": false,
														"src": "22351:15:0",
														"valueSize": 1
													},
													{
														"declaration": 1133,
														"isOffset": false,
														"isSlot": false,
														"src": "22498:15:0",
														"valueSize": 1
													},
													{
														"declaration": 1135,
														"isOffset": false,
														"isSlot": false,
														"src": "22174:4:0",
														"valueSize": 1
													},
													{
														"declaration": 1135,
														"isOffset": false,
														"isSlot": false,
														"src": "22186:4:0",
														"valueSize": 1
													},
													{
														"declaration": 1135,
														"isOffset": false,
														"isSlot": false,
														"src": "22477:4:0",
														"valueSize": 1
													},
													{
														"declaration": 1137,
														"isOffset": false,
														"isSlot": false,
														"src": "22323:9:0",
														"valueSize": 1
													},
													{
														"declaration": 1137,
														"isOffset": false,
														"isSlot": false,
														"src": "22340:9:0",
														"valueSize": 1
													},
													{
														"declaration": 1137,
														"isOffset": false,
														"isSlot": false,
														"src": "22466:9:0",
														"valueSize": 1
													},
													{
														"declaration": 1137,
														"isOffset": false,
														"isSlot": false,
														"src": "22487:9:0",
														"valueSize": 1
													},
													{
														"declaration": 1140,
														"isOffset": false,
														"isSlot": false,
														"src": "22450:6:0",
														"valueSize": 1
													}
												],
												"id": 1142,
												"nodeType": "InlineAssembly",
												"src": "22054:472:0"
											}
										]
									},
									"documentation": {
										"id": 1131,
										"nodeType": "StructuredDocumentation",
										"src": "21783:99:0",
										"text": " @dev Returns whether the `approvedAddress` is equals to `from` or `msgSender`."
									},
									"id": 1144,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isOwnerOrApproved",
									"nameLocation": "21897:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1133,
												"mutability": "mutable",
												"name": "approvedAddress",
												"nameLocation": "21934:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 1144,
												"src": "21926:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21926:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1135,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "21968:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1144,
												"src": "21960:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1134,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21960:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1137,
												"mutability": "mutable",
												"name": "msgSender",
												"nameLocation": "21991:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1144,
												"src": "21983:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1136,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21983:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21915:92:0"
									},
									"returnParameters": {
										"id": 1141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1140,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "22035:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1144,
												"src": "22030:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1139,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "22030:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22029:13:0"
									},
									"scope": 1645,
									"src": "21888:645:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"baseFunctions": [
										1788
									],
									"body": {
										"id": 1288,
										"nodeType": "Block",
										"src": "22910:2677:0",
										"statements": [
											{
												"assignments": [
													1156
												],
												"declarations": [
													{
														"constant": false,
														"id": 1156,
														"mutability": "mutable",
														"name": "prevOwnershipPacked",
														"nameLocation": "22929:19:0",
														"nodeType": "VariableDeclaration",
														"scope": 1288,
														"src": "22921:27:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1155,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "22921:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1160,
												"initialValue": {
													"arguments": [
														{
															"id": 1158,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1151,
															"src": "22970:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1157,
														"name": "_packedOwnershipOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 383,
														"src": "22951:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 1159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22951:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "22921:57:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1169,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1165,
																		"name": "prevOwnershipPacked",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1156,
																		"src": "23011:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1164,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "23003:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint160_$",
																		"typeString": "type(uint160)"
																	},
																	"typeName": {
																		"id": 1163,
																		"name": "uint160",
																		"nodeType": "ElementaryTypeName",
																		"src": "23003:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1166,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "23003:28:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															],
															"id": 1162,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "22995:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1161,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "22995:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 1167,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "22995:37:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1168,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1147,
														"src": "23036:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "22995:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1173,
												"nodeType": "IfStatement",
												"src": "22991:86:0",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1170,
															"name": "TransferFromIncorrectOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1675,
															"src": "23049:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1171,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "23049:28:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1172,
													"nodeType": "RevertStatement",
													"src": "23042:35:0"
												}
											},
											{
												"assignments": [
													1175,
													1177
												],
												"declarations": [
													{
														"constant": false,
														"id": 1175,
														"mutability": "mutable",
														"name": "approvedAddressSlot",
														"nameLocation": "23099:19:0",
														"nodeType": "VariableDeclaration",
														"scope": 1288,
														"src": "23091:27:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1174,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "23091:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1177,
														"mutability": "mutable",
														"name": "approvedAddress",
														"nameLocation": "23128:15:0",
														"nodeType": "VariableDeclaration",
														"scope": 1288,
														"src": "23120:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1176,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "23120:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1181,
												"initialValue": {
													"arguments": [
														{
															"id": 1179,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1151,
															"src": "23167:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1178,
														"name": "_getApprovedAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1130,
														"src": "23147:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$_t_address_$",
															"typeString": "function (uint256) view returns (uint256,address)"
														}
													},
													"id": 1180,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23147:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_address_$",
														"typeString": "tuple(uint256,address)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "23090:85:0"
											},
											{
												"condition": {
													"id": 1188,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "23274:63:0",
													"subExpression": {
														"arguments": [
															{
																"id": 1183,
																"name": "approvedAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1177,
																"src": "23294:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1184,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1147,
																"src": "23311:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1185,
																	"name": "_msgSenderERC721A",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1634,
																	"src": "23317:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 1186,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "23317:19:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1182,
															"name": "_isOwnerOrApproved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1144,
															"src": "23275:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$_t_address_$returns$_t_bool_$",
																"typeString": "function (address,address,address) pure returns (bool)"
															}
														},
														"id": 1187,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "23275:62:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1199,
												"nodeType": "IfStatement",
												"src": "23270:174:0",
												"trueBody": {
													"condition": {
														"id": 1194,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "23356:44:0",
														"subExpression": {
															"arguments": [
																{
																	"id": 1190,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1147,
																	"src": "23374:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1191,
																		"name": "_msgSenderERC721A",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1634,
																		"src": "23380:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 1192,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "23380:19:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1189,
																"name": "isApprovedForAll",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 725,
																"src": "23357:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address,address) view returns (bool)"
																}
															},
															"id": 1193,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "23357:43:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1198,
													"nodeType": "IfStatement",
													"src": "23352:92:0",
													"trueBody": {
														"errorCall": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1195,
																"name": "TransferCallerNotOwnerNorApproved",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1672,
																"src": "23409:33:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_error_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1196,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "23409:35:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1197,
														"nodeType": "RevertStatement",
														"src": "23402:42:0"
													}
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1205,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1200,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1149,
														"src": "23461:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1203,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "23475:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1202,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "23467:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1201,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "23467:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 1204,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "23467:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "23461:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1209,
												"nodeType": "IfStatement",
												"src": "23457:52:0",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1206,
															"name": "TransferToZeroAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1681,
															"src": "23486:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1207,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "23486:23:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1208,
													"nodeType": "RevertStatement",
													"src": "23479:30:0"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1211,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1147,
															"src": "23544:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1212,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1149,
															"src": "23550:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1213,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1151,
															"src": "23554:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 1214,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "23563:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1210,
														"name": "_beforeTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1611,
														"src": "23522:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23522:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1216,
												"nodeType": "ExpressionStatement",
												"src": "23522:43:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "23640:186:0",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "23674:141:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "approvedAddressSlot",
																					"nodeType": "YulIdentifier",
																					"src": "23777:19:0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "23798:1:0",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "sstore",
																				"nodeType": "YulIdentifier",
																				"src": "23770:6:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "23770:30:0"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "23770:30:0"
																	}
																]
															},
															"condition": {
																"name": "approvedAddress",
																"nodeType": "YulIdentifier",
																"src": "23658:15:0"
															},
															"nodeType": "YulIf",
															"src": "23655:160:0"
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1177,
														"isOffset": false,
														"isSlot": false,
														"src": "23658:15:0",
														"valueSize": 1
													},
													{
														"declaration": 1175,
														"isOffset": false,
														"isSlot": false,
														"src": "23777:19:0",
														"valueSize": 1
													}
												],
												"id": 1217,
												"nodeType": "InlineAssembly",
												"src": "23631:195:0"
											},
											{
												"id": 1274,
												"nodeType": "UncheckedBlock",
												"src": "24096:1386:0",
												"statements": [
													{
														"expression": {
															"id": 1221,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "--",
															"prefix": true,
															"src": "24191:26:0",
															"subExpression": {
																"baseExpression": {
																	"id": 1218,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 102,
																	"src": "24193:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1220,
																"indexExpression": {
																	"id": 1219,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1147,
																	"src": "24212:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "24193:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1222,
														"nodeType": "ExpressionStatement",
														"src": "24191:26:0"
													},
													{
														"expression": {
															"id": 1226,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "++",
															"prefix": true,
															"src": "24260:24:0",
															"subExpression": {
																"baseExpression": {
																	"id": 1223,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 102,
																	"src": "24262:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1225,
																"indexExpression": {
																	"id": 1224,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1149,
																	"src": "24281:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "24262:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1227,
														"nodeType": "ExpressionStatement",
														"src": "24260:24:0"
													},
													{
														"expression": {
															"id": 1241,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1228,
																	"name": "_packedOwnerships",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 98,
																	"src": "24555:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 1230,
																"indexExpression": {
																	"id": 1229,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1151,
																	"src": "24573:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "24555:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 1232,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1149,
																		"src": "24621:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1239,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1233,
																			"name": "BITMASK_NEXT_INITIALIZED",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 64,
																			"src": "24642:24:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "|",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 1235,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1147,
																					"src": "24684:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1236,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1149,
																					"src": "24690:2:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1237,
																					"name": "prevOwnershipPacked",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1156,
																					"src": "24694:19:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1234,
																				"name": "_nextExtraData",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1585,
																				"src": "24669:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (address,address,uint256) view returns (uint256)"
																				}
																			},
																			"id": 1238,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "24669:45:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "24642:72:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1231,
																	"name": "_packOwnershipData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 503,
																	"src": "24584:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (address,uint256) view returns (uint256)"
																	}
																},
																"id": 1240,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "24584:145:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24555:174:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1242,
														"nodeType": "ExpressionStatement",
														"src": "24555:174:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1247,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1245,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1243,
																	"name": "prevOwnershipPacked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1156,
																	"src": "24849:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 1244,
																	"name": "BITMASK_NEXT_INITIALIZED",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 64,
																	"src": "24871:24:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "24849:46:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1246,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "24899:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "24849:51:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1273,
														"nodeType": "IfStatement",
														"src": "24845:626:0",
														"trueBody": {
															"id": 1272,
															"nodeType": "Block",
															"src": "24902:569:0",
															"statements": [
																{
																	"assignments": [
																		1249
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 1249,
																			"mutability": "mutable",
																			"name": "nextTokenId",
																			"nameLocation": "24929:11:0",
																			"nodeType": "VariableDeclaration",
																			"scope": 1272,
																			"src": "24921:19:0",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 1248,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "24921:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 1253,
																	"initialValue": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1252,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1250,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1151,
																			"src": "24943:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1251,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "24953:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "24943:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "24921:33:0"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1258,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"baseExpression": {
																				"id": 1254,
																				"name": "_packedOwnerships",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 98,
																				"src": "25076:17:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																					"typeString": "mapping(uint256 => uint256)"
																				}
																			},
																			"id": 1256,
																			"indexExpression": {
																				"id": 1255,
																				"name": "nextTokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1249,
																				"src": "25094:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "25076:30:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1257,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "25110:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "25076:35:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1271,
																	"nodeType": "IfStatement",
																	"src": "25072:384:0",
																	"trueBody": {
																		"id": 1270,
																		"nodeType": "Block",
																		"src": "25113:343:0",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1261,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1259,
																						"name": "nextTokenId",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1249,
																						"src": "25199:11:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"id": 1260,
																						"name": "_currentIndex",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 88,
																						"src": "25214:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "25199:28:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1269,
																				"nodeType": "IfStatement",
																				"src": "25195:242:0",
																				"trueBody": {
																					"id": 1268,
																					"nodeType": "Block",
																					"src": "25229:208:0",
																					"statements": [
																						{
																							"expression": {
																								"id": 1266,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftHandSide": {
																									"baseExpression": {
																										"id": 1262,
																										"name": "_packedOwnerships",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 98,
																										"src": "25361:17:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																											"typeString": "mapping(uint256 => uint256)"
																										}
																									},
																									"id": 1264,
																									"indexExpression": {
																										"id": 1263,
																										"name": "nextTokenId",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1249,
																										"src": "25379:11:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": true,
																									"nodeType": "IndexAccess",
																									"src": "25361:30:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "Assignment",
																								"operator": "=",
																								"rightHandSide": {
																									"id": 1265,
																									"name": "prevOwnershipPacked",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1156,
																									"src": "25394:19:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "25361:52:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 1267,
																							"nodeType": "ExpressionStatement",
																							"src": "25361:52:0"
																						}
																					]
																				}
																			}
																		]
																	}
																}
															]
														}
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1276,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1147,
															"src": "25508:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1277,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1149,
															"src": "25514:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1278,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1151,
															"src": "25518:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1275,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1722,
														"src": "25499:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25499:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1280,
												"nodeType": "EmitStatement",
												"src": "25494:32:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1282,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1147,
															"src": "25558:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1283,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1149,
															"src": "25564:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1284,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1151,
															"src": "25568:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 1285,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "25577:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1281,
														"name": "_afterTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1624,
														"src": "25537:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1286,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25537:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1287,
												"nodeType": "ExpressionStatement",
												"src": "25537:42:0"
											}
										]
									},
									"documentation": {
										"id": 1145,
										"nodeType": "StructuredDocumentation",
										"src": "22541:240:0",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1289,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "22796:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1153,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "22901:8:0"
									},
									"parameters": {
										"id": 1152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1147,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "22827:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1289,
												"src": "22819:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1146,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22819:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1149,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "22850:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1289,
												"src": "22842:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1148,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22842:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1151,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "22871:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1289,
												"src": "22863:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1150,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22863:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22808:77:0"
									},
									"returnParameters": {
										"id": 1154,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22910:0:0"
									},
									"scope": 1645,
									"src": "22787:2800:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1300,
										"nodeType": "Block",
										"src": "25714:40:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1296,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1292,
															"src": "25731:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "66616c7365",
															"id": 1297,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "25740:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1295,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1301,
															1453
														],
														"referencedDeclaration": 1453,
														"src": "25725:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (uint256,bool)"
														}
													},
													"id": 1298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25725:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1299,
												"nodeType": "ExpressionStatement",
												"src": "25725:21:0"
											}
										]
									},
									"documentation": {
										"id": 1290,
										"nodeType": "StructuredDocumentation",
										"src": "25595:64:0",
										"text": " @dev Equivalent to `_burn(tokenId, false)`."
									},
									"id": 1301,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "25674:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1292,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "25688:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1301,
												"src": "25680:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1291,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25680:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25679:17:0"
									},
									"returnParameters": {
										"id": 1294,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25714:0:0"
									},
									"scope": 1645,
									"src": "25665:89:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1452,
										"nodeType": "Block",
										"src": "26052:2994:0",
										"statements": [
											{
												"assignments": [
													1310
												],
												"declarations": [
													{
														"constant": false,
														"id": 1310,
														"mutability": "mutable",
														"name": "prevOwnershipPacked",
														"nameLocation": "26071:19:0",
														"nodeType": "VariableDeclaration",
														"scope": 1452,
														"src": "26063:27:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1309,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "26063:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1314,
												"initialValue": {
													"arguments": [
														{
															"id": 1312,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1304,
															"src": "26112:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1311,
														"name": "_packedOwnershipOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 383,
														"src": "26093:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 1313,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26093:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "26063:57:0"
											},
											{
												"assignments": [
													1316
												],
												"declarations": [
													{
														"constant": false,
														"id": 1316,
														"mutability": "mutable",
														"name": "from",
														"nameLocation": "26141:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1452,
														"src": "26133:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1315,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "26133:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1324,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1321,
																	"name": "prevOwnershipPacked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1310,
																	"src": "26164:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1320,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "26156:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint160_$",
																	"typeString": "type(uint160)"
																},
																"typeName": {
																	"id": 1319,
																	"name": "uint160",
																	"nodeType": "ElementaryTypeName",
																	"src": "26156:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1322,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26156:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														],
														"id": 1318,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "26148:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 1317,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "26148:7:0",
															"typeDescriptions": {}
														}
													},
													"id": 1323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26148:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "26133:52:0"
											},
											{
												"assignments": [
													1326,
													1328
												],
												"declarations": [
													{
														"constant": false,
														"id": 1326,
														"mutability": "mutable",
														"name": "approvedAddressSlot",
														"nameLocation": "26207:19:0",
														"nodeType": "VariableDeclaration",
														"scope": 1452,
														"src": "26199:27:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1325,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "26199:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1328,
														"mutability": "mutable",
														"name": "approvedAddress",
														"nameLocation": "26236:15:0",
														"nodeType": "VariableDeclaration",
														"scope": 1452,
														"src": "26228:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1327,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "26228:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1332,
												"initialValue": {
													"arguments": [
														{
															"id": 1330,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1304,
															"src": "26275:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1329,
														"name": "_getApprovedAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1130,
														"src": "26255:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$_t_address_$",
															"typeString": "function (uint256) view returns (uint256,address)"
														}
													},
													"id": 1331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26255:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_address_$",
														"typeString": "tuple(uint256,address)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "26198:85:0"
											},
											{
												"condition": {
													"id": 1333,
													"name": "approvalCheck",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1306,
													"src": "26300:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1353,
												"nodeType": "IfStatement",
												"src": "26296:310:0",
												"trueBody": {
													"id": 1352,
													"nodeType": "Block",
													"src": "26315:291:0",
													"statements": [
														{
															"condition": {
																"id": 1340,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "26420:63:0",
																"subExpression": {
																	"arguments": [
																		{
																			"id": 1335,
																			"name": "approvedAddress",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1328,
																			"src": "26440:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1336,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1316,
																			"src": "26457:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 1337,
																				"name": "_msgSenderERC721A",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1634,
																				"src": "26463:17:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																					"typeString": "function () view returns (address)"
																				}
																			},
																			"id": 1338,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "26463:19:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1334,
																		"name": "_isOwnerOrApproved",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1144,
																		"src": "26421:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$_t_address_$returns$_t_bool_$",
																			"typeString": "function (address,address,address) pure returns (bool)"
																		}
																	},
																	"id": 1339,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "26421:62:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1351,
															"nodeType": "IfStatement",
															"src": "26416:178:0",
															"trueBody": {
																"condition": {
																	"id": 1346,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "26506:44:0",
																	"subExpression": {
																		"arguments": [
																			{
																				"id": 1342,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1316,
																				"src": "26524:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"arguments": [],
																				"expression": {
																					"argumentTypes": [],
																					"id": 1343,
																					"name": "_msgSenderERC721A",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1634,
																					"src": "26530:17:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																						"typeString": "function () view returns (address)"
																					}
																				},
																				"id": 1344,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "26530:19:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1341,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 725,
																			"src": "26507:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 1345,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "26507:43:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 1350,
																"nodeType": "IfStatement",
																"src": "26502:92:0",
																"trueBody": {
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1347,
																			"name": "TransferCallerNotOwnerNorApproved",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1672,
																			"src": "26559:33:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 1348,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "26559:35:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1349,
																	"nodeType": "RevertStatement",
																	"src": "26552:42:0"
																}
															}
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1355,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1316,
															"src": "26640:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1358,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "26654:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1357,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "26646:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1356,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "26646:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1359,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26646:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1360,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1304,
															"src": "26658:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 1361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "26667:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1354,
														"name": "_beforeTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1611,
														"src": "26618:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26618:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1363,
												"nodeType": "ExpressionStatement",
												"src": "26618:51:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "26744:186:0",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "26778:141:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "approvedAddressSlot",
																					"nodeType": "YulIdentifier",
																					"src": "26881:19:0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "26902:1:0",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "sstore",
																				"nodeType": "YulIdentifier",
																				"src": "26874:6:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "26874:30:0"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "26874:30:0"
																	}
																]
															},
															"condition": {
																"name": "approvedAddress",
																"nodeType": "YulIdentifier",
																"src": "26762:15:0"
															},
															"nodeType": "YulIf",
															"src": "26759:160:0"
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1328,
														"isOffset": false,
														"isSlot": false,
														"src": "26762:15:0",
														"valueSize": 1
													},
													{
														"declaration": 1326,
														"isOffset": false,
														"isSlot": false,
														"src": "26881:19:0",
														"valueSize": 1
													}
												],
												"id": 1364,
												"nodeType": "InlineAssembly",
												"src": "26735:195:0"
											},
											{
												"id": 1428,
												"nodeType": "UncheckedBlock",
												"src": "27202:1571:0",
												"statements": [
													{
														"expression": {
															"id": 1374,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1365,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 102,
																	"src": "27520:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1367,
																"indexExpression": {
																	"id": 1366,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1316,
																	"src": "27539:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "27520:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1373,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1370,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "31",
																				"id": 1368,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "27549:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<<",
																			"rightExpression": {
																				"id": 1369,
																				"name": "BITPOS_NUMBER_BURNED",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 37,
																				"src": "27554:20:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "27549:25:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1371,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "27548:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1372,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27578:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "27548:31:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27520:59:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1375,
														"nodeType": "ExpressionStatement",
														"src": "27520:59:0"
													},
													{
														"expression": {
															"id": 1395,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1376,
																	"name": "_packedOwnerships",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 98,
																	"src": "27817:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 1378,
																"indexExpression": {
																	"id": 1377,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1304,
																	"src": "27835:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "27817:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 1380,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1316,
																		"src": "27883:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1393,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1383,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1381,
																						"name": "BITMASK_BURNED",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 56,
																						"src": "27907:14:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "|",
																					"rightExpression": {
																						"id": 1382,
																						"name": "BITMASK_NEXT_INITIALIZED",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 64,
																						"src": "27924:24:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "27907:41:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 1384,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "27906:43:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "|",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 1386,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1316,
																					"src": "27967:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"arguments": [
																						{
																							"hexValue": "30",
																							"id": 1389,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "27981:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							}
																						],
																						"id": 1388,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "27973:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 1387,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "27973:7:0",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1390,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "27973:10:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1391,
																					"name": "prevOwnershipPacked",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1310,
																					"src": "27985:19:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1385,
																				"name": "_nextExtraData",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1585,
																				"src": "27952:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (address,address,uint256) view returns (uint256)"
																				}
																			},
																			"id": 1392,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "27952:53:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "27906:99:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1379,
																	"name": "_packOwnershipData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 503,
																	"src": "27846:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (address,uint256) view returns (uint256)"
																	}
																},
																"id": 1394,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27846:174:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27817:203:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1396,
														"nodeType": "ExpressionStatement",
														"src": "27817:203:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1401,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1399,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1397,
																	"name": "prevOwnershipPacked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1310,
																	"src": "28140:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 1398,
																	"name": "BITMASK_NEXT_INITIALIZED",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 64,
																	"src": "28162:24:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "28140:46:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1400,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "28190:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "28140:51:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1427,
														"nodeType": "IfStatement",
														"src": "28136:626:0",
														"trueBody": {
															"id": 1426,
															"nodeType": "Block",
															"src": "28193:569:0",
															"statements": [
																{
																	"assignments": [
																		1403
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 1403,
																			"mutability": "mutable",
																			"name": "nextTokenId",
																			"nameLocation": "28220:11:0",
																			"nodeType": "VariableDeclaration",
																			"scope": 1426,
																			"src": "28212:19:0",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 1402,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "28212:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 1407,
																	"initialValue": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1406,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1404,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1304,
																			"src": "28234:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1405,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "28244:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "28234:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "28212:33:0"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1412,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"baseExpression": {
																				"id": 1408,
																				"name": "_packedOwnerships",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 98,
																				"src": "28367:17:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																					"typeString": "mapping(uint256 => uint256)"
																				}
																			},
																			"id": 1410,
																			"indexExpression": {
																				"id": 1409,
																				"name": "nextTokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1403,
																				"src": "28385:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "28367:30:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1411,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "28401:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "28367:35:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1425,
																	"nodeType": "IfStatement",
																	"src": "28363:384:0",
																	"trueBody": {
																		"id": 1424,
																		"nodeType": "Block",
																		"src": "28404:343:0",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1415,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1413,
																						"name": "nextTokenId",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1403,
																						"src": "28490:11:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"id": 1414,
																						"name": "_currentIndex",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 88,
																						"src": "28505:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "28490:28:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1423,
																				"nodeType": "IfStatement",
																				"src": "28486:242:0",
																				"trueBody": {
																					"id": 1422,
																					"nodeType": "Block",
																					"src": "28520:208:0",
																					"statements": [
																						{
																							"expression": {
																								"id": 1420,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftHandSide": {
																									"baseExpression": {
																										"id": 1416,
																										"name": "_packedOwnerships",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 98,
																										"src": "28652:17:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																											"typeString": "mapping(uint256 => uint256)"
																										}
																									},
																									"id": 1418,
																									"indexExpression": {
																										"id": 1417,
																										"name": "nextTokenId",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1403,
																										"src": "28670:11:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": true,
																									"nodeType": "IndexAccess",
																									"src": "28652:30:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "Assignment",
																								"operator": "=",
																								"rightHandSide": {
																									"id": 1419,
																									"name": "prevOwnershipPacked",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1310,
																									"src": "28685:19:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "28652:52:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 1421,
																							"nodeType": "ExpressionStatement",
																							"src": "28652:52:0"
																						}
																					]
																				}
																			}
																		]
																	}
																}
															]
														}
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1430,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1316,
															"src": "28799:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1433,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "28813:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1432,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "28805:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1431,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "28805:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1434,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "28805:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1435,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1304,
															"src": "28817:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1429,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1722,
														"src": "28790:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1436,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28790:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1437,
												"nodeType": "EmitStatement",
												"src": "28785:40:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1439,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1316,
															"src": "28857:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1442,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "28871:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1441,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "28863:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1440,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "28863:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1443,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "28863:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1444,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1304,
															"src": "28875:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 1445,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "28884:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1438,
														"name": "_afterTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1624,
														"src": "28836:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1446,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28836:50:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1447,
												"nodeType": "ExpressionStatement",
												"src": "28836:50:0"
											},
											{
												"id": 1451,
												"nodeType": "UncheckedBlock",
												"src": "28988:51:0",
												"statements": [
													{
														"expression": {
															"id": 1449,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "++",
															"prefix": false,
															"src": "29013:14:0",
															"subExpression": {
																"id": 1448,
																"name": "_burnCounter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 90,
																"src": "29013:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1450,
														"nodeType": "ExpressionStatement",
														"src": "29013:14:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1302,
										"nodeType": "StructuredDocumentation",
										"src": "25762:215:0",
										"text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
									},
									"id": 1453,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "25992:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1304,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "26006:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1453,
												"src": "25998:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1303,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25998:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1306,
												"mutability": "mutable",
												"name": "approvalCheck",
												"nameLocation": "26020:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 1453,
												"src": "26015:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1305,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "26015:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25997:37:0"
									},
									"returnParameters": {
										"id": 1308,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26052:0:0"
									},
									"scope": 1645,
									"src": "25983:3063:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1507,
										"nodeType": "Block",
										"src": "29707:547:0",
										"statements": [
											{
												"clauses": [
													{
														"block": {
															"id": 1488,
															"nodeType": "Block",
															"src": "29859:98:0",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		},
																		"id": 1486,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1480,
																			"name": "retval",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1478,
																			"src": "29881:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"expression": {
																				"expression": {
																					"arguments": [
																						{
																							"id": 1482,
																							"name": "to",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1458,
																							"src": "29916:2:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 1481,
																						"name": "ERC721A__IERC721Receiver",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 17,
																						"src": "29891:24:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_ERC721A__IERC721Receiver_$17_$",
																							"typeString": "type(contract ERC721A__IERC721Receiver)"
																						}
																					},
																					"id": 1483,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "29891:28:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_ERC721A__IERC721Receiver_$17",
																						"typeString": "contract ERC721A__IERC721Receiver"
																					}
																				},
																				"id": 1484,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "onERC721Received",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 16,
																				"src": "29891:45:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																					"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																				}
																			},
																			"id": 1485,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "29891:54:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		"src": "29881:64:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"functionReturnParameters": 1466,
																	"id": 1487,
																	"nodeType": "Return",
																	"src": "29874:71:0"
																}
															]
														},
														"errorName": "",
														"id": 1489,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 1479,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 1478,
																	"mutability": "mutable",
																	"name": "retval",
																	"nameLocation": "29841:6:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1489,
																	"src": "29834:13:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	"typeName": {
																		"id": 1477,
																		"name": "bytes4",
																		"nodeType": "ElementaryTypeName",
																		"src": "29834:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "29819:39:0"
														},
														"src": "29811:146:0"
													},
													{
														"block": {
															"id": 1504,
															"nodeType": "Block",
															"src": "29986:261:0",
															"statements": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1496,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 1493,
																				"name": "reason",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1491,
																				"src": "30005:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 1494,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "30005:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1495,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "30022:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "30005:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseBody": {
																		"id": 1502,
																		"nodeType": "Block",
																		"src": "30113:123:0",
																		"statements": [
																			{
																				"AST": {
																					"nodeType": "YulBlock",
																					"src": "30141:80:0",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"kind": "number",
																												"nodeType": "YulLiteral",
																												"src": "30175:2:0",
																												"type": "",
																												"value": "32"
																											},
																											{
																												"name": "reason",
																												"nodeType": "YulIdentifier",
																												"src": "30179:6:0"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "30171:3:0"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "30171:15:0"
																									},
																									{
																										"arguments": [
																											{
																												"name": "reason",
																												"nodeType": "YulIdentifier",
																												"src": "30194:6:0"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "30188:5:0"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "30188:13:0"
																									}
																								],
																								"functionName": {
																									"name": "revert",
																									"nodeType": "YulIdentifier",
																									"src": "30164:6:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "30164:38:0"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "30164:38:0"
																						}
																					]
																				},
																				"evmVersion": "london",
																				"externalReferences": [
																					{
																						"declaration": 1491,
																						"isOffset": false,
																						"isSlot": false,
																						"src": "30179:6:0",
																						"valueSize": 1
																					},
																					{
																						"declaration": 1491,
																						"isOffset": false,
																						"isSlot": false,
																						"src": "30194:6:0",
																						"valueSize": 1
																					}
																				],
																				"id": 1501,
																				"nodeType": "InlineAssembly",
																				"src": "30132:89:0"
																			}
																		]
																	},
																	"id": 1503,
																	"nodeType": "IfStatement",
																	"src": "30001:235:0",
																	"trueBody": {
																		"id": 1500,
																		"nodeType": "Block",
																		"src": "30025:82:0",
																		"statements": [
																			{
																				"errorCall": {
																					"arguments": [],
																					"expression": {
																						"argumentTypes": [],
																						"id": 1497,
																						"name": "TransferToNonERC721ReceiverImplementer",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1678,
																						"src": "30051:38:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_error_pure$__$returns$__$",
																							"typeString": "function () pure"
																						}
																					},
																					"id": 1498,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "30051:40:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1499,
																				"nodeType": "RevertStatement",
																				"src": "30044:47:0"
																			}
																		]
																	}
																}
															]
														},
														"errorName": "",
														"id": 1505,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 1492,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 1491,
																	"mutability": "mutable",
																	"name": "reason",
																	"nameLocation": "29978:6:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1505,
																	"src": "29965:19:0",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes"
																	},
																	"typeName": {
																		"id": 1490,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "29965:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_storage_ptr",
																			"typeString": "bytes"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "29964:21:0"
														},
														"src": "29958:289:0"
													}
												],
												"externalCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1471,
																"name": "_msgSenderERC721A",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1634,
																"src": "29768:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1472,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "29768:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1473,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1456,
															"src": "29789:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1474,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1460,
															"src": "29795:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1475,
															"name": "_data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1462,
															"src": "29804:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1468,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1458,
																	"src": "29747:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1467,
																"name": "ERC721A__IERC721Receiver",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 17,
																"src": "29722:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ERC721A__IERC721Receiver_$17_$",
																	"typeString": "type(contract ERC721A__IERC721Receiver)"
																}
															},
															"id": 1469,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "29722:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC721A__IERC721Receiver_$17",
																"typeString": "contract ERC721A__IERC721Receiver"
															}
														},
														"id": 1470,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "onERC721Received",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 16,
														"src": "29722:45:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
															"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
														}
													},
													"id": 1476,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29722:88:0",
													"tryCall": true,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"id": 1506,
												"nodeType": "TryStatement",
												"src": "29718:529:0"
											}
										]
									},
									"documentation": {
										"id": 1454,
										"nodeType": "StructuredDocumentation",
										"src": "29054:478:0",
										"text": " @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param _data bytes optional data to send along with the call\n @return bool whether the call correctly returned the expected magic value"
									},
									"id": 1508,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkContractOnERC721Received",
									"nameLocation": "29547:30:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1456,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "29596:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1508,
												"src": "29588:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1455,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29588:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1458,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "29619:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1508,
												"src": "29611:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1457,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29611:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1460,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "29640:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1508,
												"src": "29632:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1459,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29632:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1462,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "29671:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1508,
												"src": "29658:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1461,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "29658:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29577:106:0"
									},
									"returnParameters": {
										"id": 1466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1465,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1508,
												"src": "29701:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1464,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "29701:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29700:6:0"
									},
									"scope": 1645,
									"src": "29538:716:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1551,
										"nodeType": "Block",
										"src": "30429:455:0",
										"statements": [
											{
												"assignments": [
													1517
												],
												"declarations": [
													{
														"constant": false,
														"id": 1517,
														"mutability": "mutable",
														"name": "packed",
														"nameLocation": "30448:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1551,
														"src": "30440:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1516,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "30440:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1521,
												"initialValue": {
													"baseExpression": {
														"id": 1518,
														"name": "_packedOwnerships",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 98,
														"src": "30457:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
															"typeString": "mapping(uint256 => uint256)"
														}
													},
													"id": 1520,
													"indexExpression": {
														"id": 1519,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1511,
														"src": "30475:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "30457:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "30440:41:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1524,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1522,
														"name": "packed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1517,
														"src": "30496:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1523,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "30506:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "30496:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1528,
												"nodeType": "IfStatement",
												"src": "30492:61:0",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1525,
															"name": "OwnershipNotInitializedForExtraData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1690,
															"src": "30516:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1526,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "30516:37:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1527,
													"nodeType": "RevertStatement",
													"src": "30509:44:0"
												}
											},
											{
												"assignments": [
													1530
												],
												"declarations": [
													{
														"constant": false,
														"id": 1530,
														"mutability": "mutable",
														"name": "extraDataCasted",
														"nameLocation": "30572:15:0",
														"nodeType": "VariableDeclaration",
														"scope": 1551,
														"src": "30564:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1529,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "30564:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1531,
												"nodeType": "VariableDeclarationStatement",
												"src": "30564:23:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "30678:54:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "30693:28:0",
															"value": {
																"name": "extraData",
																"nodeType": "YulIdentifier",
																"src": "30712:9:0"
															},
															"variableNames": [
																{
																	"name": "extraDataCasted",
																	"nodeType": "YulIdentifier",
																	"src": "30693:15:0"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1513,
														"isOffset": false,
														"isSlot": false,
														"src": "30712:9:0",
														"valueSize": 1
													},
													{
														"declaration": 1530,
														"isOffset": false,
														"isSlot": false,
														"src": "30693:15:0",
														"valueSize": 1
													}
												],
												"id": 1532,
												"nodeType": "InlineAssembly",
												"src": "30669:63:0"
											},
											{
												"expression": {
													"id": 1543,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1533,
														"name": "packed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1517,
														"src": "30742:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1542,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1536,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1534,
																		"name": "packed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1517,
																		"src": "30752:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&",
																	"rightExpression": {
																		"id": 1535,
																		"name": "BITMASK_EXTRA_DATA_COMPLEMENT",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 75,
																		"src": "30761:29:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "30752:38:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1537,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "30751:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "|",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1540,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1538,
																		"name": "extraDataCasted",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1530,
																		"src": "30795:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<<",
																	"rightExpression": {
																		"id": 1539,
																		"name": "BITPOS_EXTRA_DATA",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 67,
																		"src": "30814:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "30795:36:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1541,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "30794:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "30751:81:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "30742:90:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1544,
												"nodeType": "ExpressionStatement",
												"src": "30742:90:0"
											},
											{
												"expression": {
													"id": 1549,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1545,
															"name": "_packedOwnerships",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "30843:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1547,
														"indexExpression": {
															"id": 1546,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1511,
															"src": "30861:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "30843:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1548,
														"name": "packed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1517,
														"src": "30870:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "30843:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1550,
												"nodeType": "ExpressionStatement",
												"src": "30843:33:0"
											}
										]
									},
									"documentation": {
										"id": 1509,
										"nodeType": "StructuredDocumentation",
										"src": "30262:86:0",
										"text": " @dev Directly sets the extra data for the ownership data `index`."
									},
									"id": 1552,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setExtraDataAt",
									"nameLocation": "30363:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1511,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "30387:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1552,
												"src": "30379:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1510,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30379:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1513,
												"mutability": "mutable",
												"name": "extraData",
												"nameLocation": "30401:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1552,
												"src": "30394:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 1512,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "30394:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30378:33:0"
									},
									"returnParameters": {
										"id": 1515,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "30429:0:0"
									},
									"scope": 1645,
									"src": "30354:530:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1584,
										"nodeType": "Block",
										"src": "31180:165:0",
										"statements": [
											{
												"assignments": [
													1565
												],
												"declarations": [
													{
														"constant": false,
														"id": 1565,
														"mutability": "mutable",
														"name": "extraData",
														"nameLocation": "31198:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 1584,
														"src": "31191:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint24",
															"typeString": "uint24"
														},
														"typeName": {
															"id": 1564,
															"name": "uint24",
															"nodeType": "ElementaryTypeName",
															"src": "31191:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1572,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1570,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1568,
																"name": "prevOwnershipPacked",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1559,
																"src": "31217:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"id": 1569,
																"name": "BITPOS_EXTRA_DATA",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "31240:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "31217:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1567,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "31210:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint24_$",
															"typeString": "type(uint24)"
														},
														"typeName": {
															"id": 1566,
															"name": "uint24",
															"nodeType": "ElementaryTypeName",
															"src": "31210:6:0",
															"typeDescriptions": {}
														}
													},
													"id": 1571,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31210:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "31191:67:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1582,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1576,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1555,
																		"src": "31295:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1577,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1557,
																		"src": "31301:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1578,
																		"name": "extraData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1565,
																		"src": "31305:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint24",
																			"typeString": "uint24"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint24",
																			"typeString": "uint24"
																		}
																	],
																	"id": 1575,
																	"name": "_extraData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1598,
																	"src": "31284:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint24_$returns$_t_uint24_$",
																		"typeString": "function (address,address,uint24) view returns (uint24)"
																	}
																},
																"id": 1579,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "31284:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint24",
																	"typeString": "uint24"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint24",
																	"typeString": "uint24"
																}
															],
															"id": 1574,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "31276:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 1573,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "31276:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 1580,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "31276:40:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"id": 1581,
														"name": "BITPOS_EXTRA_DATA",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 67,
														"src": "31320:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "31276:61:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1563,
												"id": 1583,
												"nodeType": "Return",
												"src": "31269:68:0"
											}
										]
									},
									"documentation": {
										"id": 1553,
										"nodeType": "StructuredDocumentation",
										"src": "30892:138:0",
										"text": " @dev Returns the next extra data for the packed ownership data.\n The returned result is shifted into position."
									},
									"id": 1585,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nextExtraData",
									"nameLocation": "31045:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1560,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1555,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "31078:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1585,
												"src": "31070:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1554,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "31070:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1557,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "31101:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1585,
												"src": "31093:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1556,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "31093:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1559,
												"mutability": "mutable",
												"name": "prevOwnershipPacked",
												"nameLocation": "31122:19:0",
												"nodeType": "VariableDeclaration",
												"scope": 1585,
												"src": "31114:27:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1558,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31114:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31059:89:0"
									},
									"returnParameters": {
										"id": 1563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1562,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1585,
												"src": "31171:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1561,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31171:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31170:9:0"
									},
									"scope": 1645,
									"src": "31036:309:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1597,
										"nodeType": "Block",
										"src": "32066:2:0",
										"statements": []
									},
									"documentation": {
										"id": 1586,
										"nodeType": "StructuredDocumentation",
										"src": "31353:562:0",
										"text": " @dev Called during each token transfer to set the 24bit `extraData` field.\n Intended to be overridden by the cosumer contract.\n `previousExtraData` - the value of `extraData` before transfer.\n Calling conditions:\n - When `from` and `to` are both non-zero, `from`'s `tokenId` will be\n transferred to `to`.\n - When `from` is zero, `tokenId` will be minted for `to`.\n - When `to` is zero, `tokenId` will be burned by `from`.\n - `from` and `to` are never both zero."
									},
									"id": 1598,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_extraData",
									"nameLocation": "31930:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1593,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1588,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "31959:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1598,
												"src": "31951:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1587,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "31951:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1590,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "31982:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1598,
												"src": "31974:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1589,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "31974:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1592,
												"mutability": "mutable",
												"name": "previousExtraData",
												"nameLocation": "32002:17:0",
												"nodeType": "VariableDeclaration",
												"scope": 1598,
												"src": "31995:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 1591,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "31995:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31940:86:0"
									},
									"returnParameters": {
										"id": 1596,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1595,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1598,
												"src": "32058:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 1594,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "32058:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32057:8:0"
									},
									"scope": 1645,
									"src": "31921:147:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1610,
										"nodeType": "Block",
										"src": "32881:2:0",
										"statements": []
									},
									"documentation": {
										"id": 1599,
										"nodeType": "StructuredDocumentation",
										"src": "32076:642:0",
										"text": " @dev Hook that is called before a set of serially-ordered token ids are about to be transferred.\n This includes minting.\n And also called before burning one token.\n startTokenId - the first token id to be transferred\n quantity - the amount to be transferred\n Calling conditions:\n - When `from` and `to` are both non-zero, `from`'s `tokenId` will be\n transferred to `to`.\n - When `from` is zero, `tokenId` will be minted for `to`.\n - When `to` is zero, `tokenId` will be burned by `from`.\n - `from` and `to` are never both zero."
									},
									"id": 1611,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfers",
									"nameLocation": "32733:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1608,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1601,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "32773:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1611,
												"src": "32765:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1600,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32765:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1603,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "32796:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1611,
												"src": "32788:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1602,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32788:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1605,
												"mutability": "mutable",
												"name": "startTokenId",
												"nameLocation": "32817:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1611,
												"src": "32809:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1604,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32809:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1607,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "32848:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1611,
												"src": "32840:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1606,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32840:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32754:109:0"
									},
									"returnParameters": {
										"id": 1609,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "32881:0:0"
									},
									"scope": 1645,
									"src": "32724:159:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1623,
										"nodeType": "Block",
										"src": "33698:2:0",
										"statements": []
									},
									"documentation": {
										"id": 1612,
										"nodeType": "StructuredDocumentation",
										"src": "32891:645:0",
										"text": " @dev Hook that is called after a set of serially-ordered token ids have been transferred.\n This includes minting.\n And also called after one token has been burned.\n startTokenId - the first token id to be transferred\n quantity - the amount to be transferred\n Calling conditions:\n - When `from` and `to` are both non-zero, `from`'s `tokenId` has been\n transferred to `to`.\n - When `from` is zero, `tokenId` has been minted for `to`.\n - When `to` is zero, `tokenId` has been burned by `from`.\n - `from` and `to` are never both zero."
									},
									"id": 1624,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfers",
									"nameLocation": "33551:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1621,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1614,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "33590:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1624,
												"src": "33582:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1613,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33582:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1616,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "33613:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1624,
												"src": "33605:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1615,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33605:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1618,
												"mutability": "mutable",
												"name": "startTokenId",
												"nameLocation": "33634:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1624,
												"src": "33626:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1617,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33626:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1620,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "33665:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1624,
												"src": "33657:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1619,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33657:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33571:109:0"
									},
									"returnParameters": {
										"id": 1622,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "33698:0:0"
									},
									"scope": 1645,
									"src": "33542:158:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1633,
										"nodeType": "Block",
										"src": "33960:36:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1630,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "33978:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1631,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "33978:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1629,
												"id": 1632,
												"nodeType": "Return",
												"src": "33971:17:0"
											}
										]
									},
									"documentation": {
										"id": 1625,
										"nodeType": "StructuredDocumentation",
										"src": "33708:177:0",
										"text": " @dev Returns the message sender (defaults to `msg.sender`).\n If you are writing GSN compatible contracts, you need to override this function."
									},
									"id": 1634,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSenderERC721A",
									"nameLocation": "33900:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1626,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "33917:2:0"
									},
									"returnParameters": {
										"id": 1629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1628,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1634,
												"src": "33951:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1627,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33951:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33950:9:0"
									},
									"scope": 1645,
									"src": "33891:105:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1643,
										"nodeType": "Block",
										"src": "34186:1884:0",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "34206:1857:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "34562:28:0",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "34579:4:0",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "34573:5:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "34573:11:0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "34586:3:0",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "34569:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "34569:21:0"
															},
															"variableNames": [
																{
																	"name": "ptr",
																	"nodeType": "YulIdentifier",
																	"src": "34562:3:0"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "34671:4:0",
																		"type": "",
																		"value": "0x40"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "34677:3:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "34664:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "34664:17:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "34664:17:0"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "34772:14:0",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "34783:3:0"
															},
															"variables": [
																{
																	"name": "end",
																	"nodeType": "YulTypedName",
																	"src": "34776:3:0",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "35680:148:0",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "35741:18:0",
																		"value": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nodeType": "YulIdentifier",
																					"src": "35752:3:0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "35757:1:0",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "sub",
																				"nodeType": "YulIdentifier",
																				"src": "35748:3:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "35748:11:0"
																		},
																		"variableNames": [
																			{
																				"name": "ptr",
																				"nodeType": "YulIdentifier",
																				"src": "35741:3:0"
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nodeType": "YulIdentifier",
																					"src": "35785:3:0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "35794:2:0",
																							"type": "",
																							"value": "48"
																						},
																						{
																							"arguments": [
																								{
																									"name": "temp",
																									"nodeType": "YulIdentifier",
																									"src": "35802:4:0"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "35808:2:0",
																									"type": "",
																									"value": "10"
																								}
																							],
																							"functionName": {
																								"name": "mod",
																								"nodeType": "YulIdentifier",
																								"src": "35798:3:0"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "35798:13:0"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "35790:3:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "35790:22:0"
																				}
																			],
																			"functionName": {
																				"name": "mstore8",
																				"nodeType": "YulIdentifier",
																				"src": "35777:7:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "35777:36:0"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "35777:36:0"
																	}
																]
															},
															"condition": {
																"name": "temp",
																"nodeType": "YulIdentifier",
																"src": "35566:4:0"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "35571:108:0",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "35643:21:0",
																		"value": {
																			"arguments": [
																				{
																					"name": "temp",
																					"nodeType": "YulIdentifier",
																					"src": "35655:4:0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "35661:2:0",
																					"type": "",
																					"value": "10"
																				}
																			],
																			"functionName": {
																				"name": "div",
																				"nodeType": "YulIdentifier",
																				"src": "35651:3:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "35651:13:0"
																		},
																		"variableNames": [
																			{
																				"name": "temp",
																				"nodeType": "YulIdentifier",
																				"src": "35643:4:0"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "35135:430:0",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "35227:17:0",
																		"value": {
																			"name": "value",
																			"nodeType": "YulIdentifier",
																			"src": "35239:5:0"
																		},
																		"variables": [
																			{
																				"name": "temp",
																				"nodeType": "YulTypedName",
																				"src": "35231:4:0",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "35353:18:0",
																		"value": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nodeType": "YulIdentifier",
																					"src": "35364:3:0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "35369:1:0",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "sub",
																				"nodeType": "YulIdentifier",
																				"src": "35360:3:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "35360:11:0"
																		},
																		"variableNames": [
																			{
																				"name": "ptr",
																				"nodeType": "YulIdentifier",
																				"src": "35353:3:0"
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nodeType": "YulIdentifier",
																					"src": "35483:3:0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "35492:2:0",
																							"type": "",
																							"value": "48"
																						},
																						{
																							"arguments": [
																								{
																									"name": "temp",
																									"nodeType": "YulIdentifier",
																									"src": "35500:4:0"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "35506:2:0",
																									"type": "",
																									"value": "10"
																								}
																							],
																							"functionName": {
																								"name": "mod",
																								"nodeType": "YulIdentifier",
																								"src": "35496:3:0"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "35496:13:0"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "35488:3:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "35488:22:0"
																				}
																			],
																			"functionName": {
																				"name": "mstore8",
																				"nodeType": "YulIdentifier",
																				"src": "35475:7:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "35475:36:0"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "35475:36:0"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "35529:21:0",
																		"value": {
																			"arguments": [
																				{
																					"name": "temp",
																					"nodeType": "YulIdentifier",
																					"src": "35541:4:0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "35547:2:0",
																					"type": "",
																					"value": "10"
																				}
																			],
																			"functionName": {
																				"name": "div",
																				"nodeType": "YulIdentifier",
																				"src": "35537:3:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "35537:13:0"
																		},
																		"variableNames": [
																			{
																				"name": "temp",
																				"nodeType": "YulIdentifier",
																				"src": "35529:4:0"
																			}
																		]
																	}
																]
															},
															"src": "35131:697:0"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "35844:27:0",
															"value": {
																"arguments": [
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "35862:3:0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "35867:3:0"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "35858:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "35858:13:0"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "35848:6:0",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "35966:19:0",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "35977:3:0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "35982:2:0",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "35973:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "35973:12:0"
															},
															"variableNames": [
																{
																	"name": "ptr",
																	"nodeType": "YulIdentifier",
																	"src": "35966:3:0"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "36040:3:0"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "36045:6:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "36033:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "36033:19:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "36033:19:0"
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1640,
														"isOffset": false,
														"isSlot": false,
														"src": "34562:3:0",
														"valueSize": 1
													},
													{
														"declaration": 1640,
														"isOffset": false,
														"isSlot": false,
														"src": "34677:3:0",
														"valueSize": 1
													},
													{
														"declaration": 1640,
														"isOffset": false,
														"isSlot": false,
														"src": "34783:3:0",
														"valueSize": 1
													},
													{
														"declaration": 1640,
														"isOffset": false,
														"isSlot": false,
														"src": "35353:3:0",
														"valueSize": 1
													},
													{
														"declaration": 1640,
														"isOffset": false,
														"isSlot": false,
														"src": "35364:3:0",
														"valueSize": 1
													},
													{
														"declaration": 1640,
														"isOffset": false,
														"isSlot": false,
														"src": "35483:3:0",
														"valueSize": 1
													},
													{
														"declaration": 1640,
														"isOffset": false,
														"isSlot": false,
														"src": "35741:3:0",
														"valueSize": 1
													},
													{
														"declaration": 1640,
														"isOffset": false,
														"isSlot": false,
														"src": "35752:3:0",
														"valueSize": 1
													},
													{
														"declaration": 1640,
														"isOffset": false,
														"isSlot": false,
														"src": "35785:3:0",
														"valueSize": 1
													},
													{
														"declaration": 1640,
														"isOffset": false,
														"isSlot": false,
														"src": "35867:3:0",
														"valueSize": 1
													},
													{
														"declaration": 1640,
														"isOffset": false,
														"isSlot": false,
														"src": "35966:3:0",
														"valueSize": 1
													},
													{
														"declaration": 1640,
														"isOffset": false,
														"isSlot": false,
														"src": "35977:3:0",
														"valueSize": 1
													},
													{
														"declaration": 1640,
														"isOffset": false,
														"isSlot": false,
														"src": "36040:3:0",
														"valueSize": 1
													},
													{
														"declaration": 1637,
														"isOffset": false,
														"isSlot": false,
														"src": "35239:5:0",
														"valueSize": 1
													}
												],
												"id": 1642,
												"nodeType": "InlineAssembly",
												"src": "34197:1866:0"
											}
										]
									},
									"documentation": {
										"id": 1635,
										"nodeType": "StructuredDocumentation",
										"src": "34004:92:0",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 1644,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_toString",
									"nameLocation": "34111:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1638,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1637,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "34129:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1644,
												"src": "34121:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1636,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34121:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34120:15:0"
									},
									"returnParameters": {
										"id": 1641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1640,
												"mutability": "mutable",
												"name": "ptr",
												"nameLocation": "34181:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1644,
												"src": "34167:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1639,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "34167:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34166:19:0"
									},
									"scope": 1645,
									"src": "34102:1968:0",
									"stateMutability": "pure",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1646,
							"src": "916:35157:0",
							"usedErrors": [
								1651,
								1654,
								1657,
								1660,
								1663,
								1666,
								1669,
								1672,
								1675,
								1678,
								1681,
								1684,
								1687,
								1690
							]
						}
					],
					"src": "88:35985:0"
				},
				"id": 0
			},
			"NFT-Marketplace/contracts/erc721a/IERC721A.sol": {
				"ast": {
					"absolutePath": "NFT-Marketplace/contracts/erc721a/IERC721A.sol",
					"exportedSymbols": {
						"IERC721A": [
							1854
						]
					},
					"id": 1855,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1647,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "88:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721A",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1648,
								"nodeType": "StructuredDocumentation",
								"src": "115:61:1",
								"text": " @dev Interface of an ERC721A compliant contract."
							},
							"fullyImplemented": false,
							"id": 1854,
							"linearizedBaseContracts": [
								1854
							],
							"name": "IERC721A",
							"nameLocation": "188:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1649,
										"nodeType": "StructuredDocumentation",
										"src": "204:78:1",
										"text": " The caller must own the token or be an approved operator."
									},
									"errorSelector": "cfb3b942",
									"id": 1651,
									"name": "ApprovalCallerNotOwnerNorApproved",
									"nameLocation": "294:33:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1650,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "327:2:1"
									},
									"src": "288:42:1"
								},
								{
									"documentation": {
										"id": 1652,
										"nodeType": "StructuredDocumentation",
										"src": "338:46:1",
										"text": " The token does not exist."
									},
									"errorSelector": "cf4700e4",
									"id": 1654,
									"name": "ApprovalQueryForNonexistentToken",
									"nameLocation": "396:32:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1653,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "428:2:1"
									},
									"src": "390:41:1"
								},
								{
									"documentation": {
										"id": 1655,
										"nodeType": "StructuredDocumentation",
										"src": "439:68:1",
										"text": " The caller cannot approve to their own address."
									},
									"errorSelector": "b06307db",
									"id": 1657,
									"name": "ApproveToCaller",
									"nameLocation": "519:15:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1656,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "534:2:1"
									},
									"src": "513:24:1"
								},
								{
									"documentation": {
										"id": 1658,
										"nodeType": "StructuredDocumentation",
										"src": "545:67:1",
										"text": " Cannot query the balance for the zero address."
									},
									"errorSelector": "8f4eb604",
									"id": 1660,
									"name": "BalanceQueryForZeroAddress",
									"nameLocation": "624:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1659,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "650:2:1"
									},
									"src": "618:35:1"
								},
								{
									"documentation": {
										"id": 1661,
										"nodeType": "StructuredDocumentation",
										"src": "661:53:1",
										"text": " Cannot mint to the zero address."
									},
									"errorSelector": "2e076300",
									"id": 1663,
									"name": "MintToZeroAddress",
									"nameLocation": "726:17:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1662,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "743:2:1"
									},
									"src": "720:26:1"
								},
								{
									"documentation": {
										"id": 1664,
										"nodeType": "StructuredDocumentation",
										"src": "754:74:1",
										"text": " The quantity of tokens minted must be more than zero."
									},
									"errorSelector": "b562e8dd",
									"id": 1666,
									"name": "MintZeroQuantity",
									"nameLocation": "840:16:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1665,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "856:2:1"
									},
									"src": "834:25:1"
								},
								{
									"documentation": {
										"id": 1667,
										"nodeType": "StructuredDocumentation",
										"src": "867:46:1",
										"text": " The token does not exist."
									},
									"errorSelector": "df2d9b42",
									"id": 1669,
									"name": "OwnerQueryForNonexistentToken",
									"nameLocation": "925:29:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1668,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "954:2:1"
									},
									"src": "919:38:1"
								},
								{
									"documentation": {
										"id": 1670,
										"nodeType": "StructuredDocumentation",
										"src": "965:78:1",
										"text": " The caller must own the token or be an approved operator."
									},
									"errorSelector": "59c896be",
									"id": 1672,
									"name": "TransferCallerNotOwnerNorApproved",
									"nameLocation": "1055:33:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1671,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1088:2:1"
									},
									"src": "1049:42:1"
								},
								{
									"documentation": {
										"id": 1673,
										"nodeType": "StructuredDocumentation",
										"src": "1099:55:1",
										"text": " The token must be owned by `from`."
									},
									"errorSelector": "a1148100",
									"id": 1675,
									"name": "TransferFromIncorrectOwner",
									"nameLocation": "1166:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1674,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1192:2:1"
									},
									"src": "1160:35:1"
								},
								{
									"documentation": {
										"id": 1676,
										"nodeType": "StructuredDocumentation",
										"src": "1203:111:1",
										"text": " Cannot safely transfer to a contract that does not implement the ERC721Receiver interface."
									},
									"errorSelector": "d1a57ed6",
									"id": 1678,
									"name": "TransferToNonERC721ReceiverImplementer",
									"nameLocation": "1326:38:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1677,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1364:2:1"
									},
									"src": "1320:47:1"
								},
								{
									"documentation": {
										"id": 1679,
										"nodeType": "StructuredDocumentation",
										"src": "1375:57:1",
										"text": " Cannot transfer to the zero address."
									},
									"errorSelector": "ea553b34",
									"id": 1681,
									"name": "TransferToZeroAddress",
									"nameLocation": "1444:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1680,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1465:2:1"
									},
									"src": "1438:30:1"
								},
								{
									"documentation": {
										"id": 1682,
										"nodeType": "StructuredDocumentation",
										"src": "1476:46:1",
										"text": " The token does not exist."
									},
									"errorSelector": "a14c4b50",
									"id": 1684,
									"name": "URIQueryForNonexistentToken",
									"nameLocation": "1534:27:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1683,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1561:2:1"
									},
									"src": "1528:36:1"
								},
								{
									"documentation": {
										"id": 1685,
										"nodeType": "StructuredDocumentation",
										"src": "1572:81:1",
										"text": " The `quantity` minted with ERC2309 exceeds the safety limit."
									},
									"errorSelector": "3db1f9af",
									"id": 1687,
									"name": "MintERC2309QuantityExceedsLimit",
									"nameLocation": "1665:31:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1686,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1696:2:1"
									},
									"src": "1659:40:1"
								},
								{
									"documentation": {
										"id": 1688,
										"nodeType": "StructuredDocumentation",
										"src": "1707:85:1",
										"text": " The `extraData` cannot be set on an unintialized ownership slot."
									},
									"errorSelector": "00d58153",
									"id": 1690,
									"name": "OwnershipNotInitializedForExtraData",
									"nameLocation": "1804:35:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1689,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1839:2:1"
									},
									"src": "1798:44:1"
								},
								{
									"canonicalName": "IERC721A.TokenOwnership",
									"id": 1699,
									"members": [
										{
											"constant": false,
											"id": 1692,
											"mutability": "mutable",
											"name": "addr",
											"nameLocation": "1929:4:1",
											"nodeType": "VariableDeclaration",
											"scope": 1699,
											"src": "1921:12:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1691,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1921:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1694,
											"mutability": "mutable",
											"name": "startTimestamp",
											"nameLocation": "2044:14:1",
											"nodeType": "VariableDeclaration",
											"scope": 1699,
											"src": "2037:21:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 1693,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2037:6:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1696,
											"mutability": "mutable",
											"name": "burned",
											"nameLocation": "2121:6:1",
											"nodeType": "VariableDeclaration",
											"scope": 1699,
											"src": "2116:11:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1695,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2116:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1698,
											"mutability": "mutable",
											"name": "extraData",
											"nameLocation": "2238:9:1",
											"nodeType": "VariableDeclaration",
											"scope": 1699,
											"src": "2231:16:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 1697,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "2231:6:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "TokenOwnership",
									"nameLocation": "1857:14:1",
									"nodeType": "StructDefinition",
									"scope": 1854,
									"src": "1850:405:1",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 1700,
										"nodeType": "StructuredDocumentation",
										"src": "2263:197:1",
										"text": " @dev Returns the total amount of tokens stored by the contract.\n Burned tokens are calculated here, use `_totalMinted()` if you want to count just minted tokens."
									},
									"functionSelector": "18160ddd",
									"id": 1705,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2475:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2486:2:1"
									},
									"returnParameters": {
										"id": 1704,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1703,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1705,
												"src": "2512:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1702,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2512:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2511:9:1"
									},
									"scope": 1854,
									"src": "2466:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1706,
										"nodeType": "StructuredDocumentation",
										"src": "2636:347:1",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1713,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "2998:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1709,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1708,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "3023:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 1713,
												"src": "3016:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1707,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "3016:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3015:20:1"
									},
									"returnParameters": {
										"id": 1712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1711,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1713,
												"src": "3059:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1710,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3059:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3058:6:1"
									},
									"scope": 1854,
									"src": "2989:76:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1714,
										"nodeType": "StructuredDocumentation",
										"src": "3180:90:1",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1722,
									"name": "Transfer",
									"nameLocation": "3282:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1721,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1716,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3307:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1722,
												"src": "3291:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1715,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3291:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1718,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3329:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1722,
												"src": "3313:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1717,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3313:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1720,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3349:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1722,
												"src": "3333:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1719,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3333:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3290:67:1"
									},
									"src": "3276:82:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1723,
										"nodeType": "StructuredDocumentation",
										"src": "3366:96:1",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1731,
									"name": "Approval",
									"nameLocation": "3474:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1730,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1725,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3499:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1731,
												"src": "3483:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1724,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3483:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1727,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "3522:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1731,
												"src": "3506:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1726,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3506:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1729,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3548:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1731,
												"src": "3532:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1728,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3532:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3482:74:1"
									},
									"src": "3468:89:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1732,
										"nodeType": "StructuredDocumentation",
										"src": "3565:119:1",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 1740,
									"name": "ApprovalForAll",
									"nameLocation": "3696:14:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1739,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1734,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3727:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1740,
												"src": "3711:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1733,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3711:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1736,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3750:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1740,
												"src": "3734:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1735,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3734:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1738,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "3765:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1740,
												"src": "3760:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1737,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3760:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3710:64:1"
									},
									"src": "3690:85:1"
								},
								{
									"documentation": {
										"id": 1741,
										"nodeType": "StructuredDocumentation",
										"src": "3783:78:1",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 1748,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3876:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1744,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1743,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3894:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1748,
												"src": "3886:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1742,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3886:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3885:15:1"
									},
									"returnParameters": {
										"id": 1747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1746,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "3932:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1748,
												"src": "3924:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1745,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3924:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3923:17:1"
									},
									"scope": 1854,
									"src": "3867:74:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1749,
										"nodeType": "StructuredDocumentation",
										"src": "3949:137:1",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 1756,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "4101:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1752,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1751,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4117:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1756,
												"src": "4109:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1750,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4109:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4108:17:1"
									},
									"returnParameters": {
										"id": 1755,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1754,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4157:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1756,
												"src": "4149:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1753,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4149:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4148:15:1"
									},
									"scope": 1854,
									"src": "4092:72:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1757,
										"nodeType": "StructuredDocumentation",
										"src": "4172:568:1",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 1768,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "4755:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1766,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1759,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4790:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1768,
												"src": "4782:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1758,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4782:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1761,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4813:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1768,
												"src": "4805:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1760,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4805:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1763,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4834:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1768,
												"src": "4826:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1762,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4826:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1765,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4867:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1768,
												"src": "4852:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1764,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4852:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4771:107:1"
									},
									"returnParameters": {
										"id": 1767,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4887:0:1"
									},
									"scope": 1854,
									"src": "4746:142:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1769,
										"nodeType": "StructuredDocumentation",
										"src": "4896:703:1",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 1778,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "5614:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1776,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1771,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5649:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1778,
												"src": "5641:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1770,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5641:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1773,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5672:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1778,
												"src": "5664:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1772,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5664:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1775,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5693:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1778,
												"src": "5685:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1774,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5685:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5630:77:1"
									},
									"returnParameters": {
										"id": 1777,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5716:0:1"
									},
									"scope": 1854,
									"src": "5605:112:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1779,
										"nodeType": "StructuredDocumentation",
										"src": "5725:517:1",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1788,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "6257:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1786,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1781,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6288:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1788,
												"src": "6280:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1780,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6280:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1783,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6311:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1788,
												"src": "6303:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1782,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6303:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1785,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6332:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1788,
												"src": "6324:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1784,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6324:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6269:77:1"
									},
									"returnParameters": {
										"id": 1787,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6355:0:1"
									},
									"scope": 1854,
									"src": "6248:108:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1789,
										"nodeType": "StructuredDocumentation",
										"src": "6364:464:1",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1796,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "6843:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1794,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1791,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6859:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1796,
												"src": "6851:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1790,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6851:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1793,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6871:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1796,
												"src": "6863:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1792,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6863:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6850:29:1"
									},
									"returnParameters": {
										"id": 1795,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6888:0:1"
									},
									"scope": 1854,
									"src": "6834:55:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1797,
										"nodeType": "StructuredDocumentation",
										"src": "6897:318:1",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 1804,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "7230:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1802,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1799,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "7256:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1804,
												"src": "7248:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1798,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7248:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1801,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "7271:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 1804,
												"src": "7266:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1800,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7266:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7247:34:1"
									},
									"returnParameters": {
										"id": 1803,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7290:0:1"
									},
									"scope": 1854,
									"src": "7221:70:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1805,
										"nodeType": "StructuredDocumentation",
										"src": "7299:145:1",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 1812,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "7459:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1808,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1807,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7479:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1812,
												"src": "7471:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1806,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7471:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7470:17:1"
									},
									"returnParameters": {
										"id": 1811,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1810,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "7519:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1812,
												"src": "7511:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1809,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7511:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7510:18:1"
									},
									"scope": 1854,
									"src": "7450:79:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1813,
										"nodeType": "StructuredDocumentation",
										"src": "7537:142:1",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 1822,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "7694:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1818,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1815,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7719:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1822,
												"src": "7711:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1814,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7711:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1817,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "7734:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1822,
												"src": "7726:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1816,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7726:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7710:33:1"
									},
									"returnParameters": {
										"id": 1821,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1820,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1822,
												"src": "7767:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1819,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7767:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7766:6:1"
									},
									"scope": 1854,
									"src": "7685:88:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1823,
										"nodeType": "StructuredDocumentation",
										"src": "7892:60:1",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 1828,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "7967:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1824,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7971:2:1"
									},
									"returnParameters": {
										"id": 1827,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1826,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1828,
												"src": "7997:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1825,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7997:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7996:15:1"
									},
									"scope": 1854,
									"src": "7958:54:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1829,
										"nodeType": "StructuredDocumentation",
										"src": "8020:62:1",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 1834,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "8097:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1830,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8103:2:1"
									},
									"returnParameters": {
										"id": 1833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1832,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1834,
												"src": "8129:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1831,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8129:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8128:15:1"
									},
									"scope": 1854,
									"src": "8088:56:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1835,
										"nodeType": "StructuredDocumentation",
										"src": "8152:92:1",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 1842,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "8259:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1838,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1837,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8276:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1842,
												"src": "8268:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1836,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8268:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8267:17:1"
									},
									"returnParameters": {
										"id": 1841,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1840,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1842,
												"src": "8308:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1839,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8308:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8307:15:1"
									},
									"scope": 1854,
									"src": "8250:73:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1843,
										"nodeType": "StructuredDocumentation",
										"src": "8439:206:1",
										"text": " @dev Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`,\n as defined in the ERC2309 standard. See `_mintERC2309` for more details."
									},
									"eventSelector": "deaa91b6123d068f5821d0fb0678463d1a8a6079fe8af5de3ce5e896dcf9133d",
									"id": 1853,
									"name": "ConsecutiveTransfer",
									"nameLocation": "8657:19:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1852,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1845,
												"indexed": true,
												"mutability": "mutable",
												"name": "fromTokenId",
												"nameLocation": "8693:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 1853,
												"src": "8677:27:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1844,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8677:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1847,
												"indexed": false,
												"mutability": "mutable",
												"name": "toTokenId",
												"nameLocation": "8714:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 1853,
												"src": "8706:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1846,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8706:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1849,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "8741:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1853,
												"src": "8725:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8725:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1851,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8763:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1853,
												"src": "8747:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1850,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8747:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8676:90:1"
									},
									"src": "8651:116:1"
								}
							],
							"scope": 1855,
							"src": "178:8592:1",
							"usedErrors": [
								1651,
								1654,
								1657,
								1660,
								1663,
								1666,
								1669,
								1672,
								1675,
								1678,
								1681,
								1684,
								1687,
								1690
							]
						}
					],
					"src": "88:8682:1"
				},
				"id": 1
			}
		}
	}
}